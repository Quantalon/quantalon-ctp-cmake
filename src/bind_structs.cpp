#include "bind_structs.h"

void bind_structs(py::module &m) {
    py::module structs = m.def_submodule("structs", "API Structs");

    py::class_<CThostFtdcDisseminationField>(structs, "CThostFtdcDisseminationField")
            .def(py::init<>())
            .def_readwrite("SequenceSeries", &CThostFtdcDisseminationField::SequenceSeries)
            .def_readwrite("SequenceNo", &CThostFtdcDisseminationField::SequenceNo)
            ;

    py::class_<CThostFtdcReqUserLoginField>(structs, "CThostFtdcReqUserLoginField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqUserLoginField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqUserLoginField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqUserLoginField::UserID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqUserLoginField::Password));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginField::UserProductInfo));
                    }
            )
            .def_property(
                    "InterfaceProductInfo",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.InterfaceProductInfo);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.InterfaceProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginField::InterfaceProductInfo));
                    }
            )
            .def_property(
                    "ProtocolInfo",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.ProtocolInfo);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.ProtocolInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginField::ProtocolInfo));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginField::MacAddress));
                    }
            )
            .def_property(
                    "OneTimePassword",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.OneTimePassword);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.OneTimePassword, value.c_str(), sizeof(CThostFtdcReqUserLoginField::OneTimePassword));
                    }
            )
            .def_property(
                    "ClientIPAddress",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.ClientIPAddress);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.ClientIPAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginField::ClientIPAddress));
                    }
            )
            .def_property(
                    "LoginRemark",
                    [](const CThostFtdcReqUserLoginField &self) {
                        return py::str(self.LoginRemark);
                    },
                    [](CThostFtdcReqUserLoginField &self, const std::string &value) {
                        std::strncpy(self.LoginRemark, value.c_str(), sizeof(CThostFtdcReqUserLoginField::LoginRemark));
                    }
            )
            .def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginField::ClientIPPort)
            ;

    py::class_<CThostFtdcRspUserLoginField>(structs, "CThostFtdcRspUserLoginField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspUserLoginField::TradingDay));
                    }
            )
            .def_property(
                    "LoginTime",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.LoginTime);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.LoginTime, value.c_str(), sizeof(CThostFtdcRspUserLoginField::LoginTime));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspUserLoginField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspUserLoginField::UserID));
                    }
            )
            .def_property(
                    "SystemName",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.SystemName);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.SystemName, value.c_str(), sizeof(CThostFtdcRspUserLoginField::SystemName));
                    }
            )
            .def_readwrite("FrontID", &CThostFtdcRspUserLoginField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcRspUserLoginField::SessionID)
            .def_property(
                    "MaxOrderRef",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.MaxOrderRef);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.MaxOrderRef, value.c_str(), sizeof(CThostFtdcRspUserLoginField::MaxOrderRef));
                    }
            )
            .def_property(
                    "SHFETime",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.SHFETime);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.SHFETime, value.c_str(), sizeof(CThostFtdcRspUserLoginField::SHFETime));
                    }
            )
            .def_property(
                    "DCETime",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.DCETime);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.DCETime, value.c_str(), sizeof(CThostFtdcRspUserLoginField::DCETime));
                    }
            )
            .def_property(
                    "CZCETime",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.CZCETime);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.CZCETime, value.c_str(), sizeof(CThostFtdcRspUserLoginField::CZCETime));
                    }
            )
            .def_property(
                    "FFEXTime",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.FFEXTime);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.FFEXTime, value.c_str(), sizeof(CThostFtdcRspUserLoginField::FFEXTime));
                    }
            )
            .def_property(
                    "INETime",
                    [](const CThostFtdcRspUserLoginField &self) {
                        return py::str(self.INETime);
                    },
                    [](CThostFtdcRspUserLoginField &self, const std::string &value) {
                        std::strncpy(self.INETime, value.c_str(), sizeof(CThostFtdcRspUserLoginField::INETime));
                    }
            )
            ;

    py::class_<CThostFtdcUserLogoutField>(structs, "CThostFtdcUserLogoutField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcUserLogoutField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcUserLogoutField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcUserLogoutField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcUserLogoutField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcUserLogoutField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcUserLogoutField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcForceUserLogoutField>(structs, "CThostFtdcForceUserLogoutField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcForceUserLogoutField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcForceUserLogoutField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcForceUserLogoutField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcForceUserLogoutField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcForceUserLogoutField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcForceUserLogoutField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcReqAuthenticateField>(structs, "CThostFtdcReqAuthenticateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqAuthenticateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqAuthenticateField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqAuthenticateField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqAuthenticateField::UserID));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcReqAuthenticateField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcReqAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcReqAuthenticateField::UserProductInfo));
                    }
            )
            .def_property(
                    "AuthCode",
                    [](const CThostFtdcReqAuthenticateField &self) {
                        return py::str(self.AuthCode);
                    },
                    [](CThostFtdcReqAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.AuthCode, value.c_str(), sizeof(CThostFtdcReqAuthenticateField::AuthCode));
                    }
            )
            .def_property(
                    "AppID",
                    [](const CThostFtdcReqAuthenticateField &self) {
                        return py::str(self.AppID);
                    },
                    [](CThostFtdcReqAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.AppID, value.c_str(), sizeof(CThostFtdcReqAuthenticateField::AppID));
                    }
            )
            ;

    py::class_<CThostFtdcRspAuthenticateField>(structs, "CThostFtdcRspAuthenticateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspAuthenticateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspAuthenticateField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspAuthenticateField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspAuthenticateField::UserID));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcRspAuthenticateField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcRspAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcRspAuthenticateField::UserProductInfo));
                    }
            )
            .def_property(
                    "AppID",
                    [](const CThostFtdcRspAuthenticateField &self) {
                        return py::str(self.AppID);
                    },
                    [](CThostFtdcRspAuthenticateField &self, const std::string &value) {
                        std::strncpy(self.AppID, value.c_str(), sizeof(CThostFtdcRspAuthenticateField::AppID));
                    }
            )
            .def_readwrite("AppType", &CThostFtdcRspAuthenticateField::AppType)
            ;

    py::class_<CThostFtdcAuthenticationInfoField>(structs, "CThostFtdcAuthenticationInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcAuthenticationInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcAuthenticationInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcAuthenticationInfoField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcAuthenticationInfoField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcAuthenticationInfoField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcAuthenticationInfoField::UserID));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcAuthenticationInfoField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcAuthenticationInfoField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcAuthenticationInfoField::UserProductInfo));
                    }
            )
            .def_property(
                    "AuthInfo",
                    [](const CThostFtdcAuthenticationInfoField &self) {
                        return py::str(self.AuthInfo);
                    },
                    [](CThostFtdcAuthenticationInfoField &self, const std::string &value) {
                        std::strncpy(self.AuthInfo, value.c_str(), sizeof(CThostFtdcAuthenticationInfoField::AuthInfo));
                    }
            )
            .def_readwrite("IsResult", &CThostFtdcAuthenticationInfoField::IsResult)
            .def_property(
                    "AppID",
                    [](const CThostFtdcAuthenticationInfoField &self) {
                        return py::str(self.AppID);
                    },
                    [](CThostFtdcAuthenticationInfoField &self, const std::string &value) {
                        std::strncpy(self.AppID, value.c_str(), sizeof(CThostFtdcAuthenticationInfoField::AppID));
                    }
            )
            .def_readwrite("AppType", &CThostFtdcAuthenticationInfoField::AppType)
            ;

    py::class_<CThostFtdcRspUserLogin2Field>(structs, "CThostFtdcRspUserLogin2Field")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::TradingDay));
                    }
            )
            .def_property(
                    "LoginTime",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.LoginTime);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.LoginTime, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::LoginTime));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::UserID));
                    }
            )
            .def_property(
                    "SystemName",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.SystemName);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.SystemName, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::SystemName));
                    }
            )
            .def_readwrite("FrontID", &CThostFtdcRspUserLogin2Field::FrontID)
            .def_readwrite("SessionID", &CThostFtdcRspUserLogin2Field::SessionID)
            .def_property(
                    "MaxOrderRef",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.MaxOrderRef);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.MaxOrderRef, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::MaxOrderRef));
                    }
            )
            .def_property(
                    "SHFETime",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.SHFETime);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.SHFETime, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::SHFETime));
                    }
            )
            .def_property(
                    "DCETime",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.DCETime);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.DCETime, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::DCETime));
                    }
            )
            .def_property(
                    "CZCETime",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.CZCETime);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.CZCETime, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::CZCETime));
                    }
            )
            .def_property(
                    "FFEXTime",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.FFEXTime);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.FFEXTime, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::FFEXTime));
                    }
            )
            .def_property(
                    "INETime",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.INETime);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.INETime, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::INETime));
                    }
            )
            .def_property(
                    "RandomString",
                    [](const CThostFtdcRspUserLogin2Field &self) {
                        return py::str(self.RandomString);
                    },
                    [](CThostFtdcRspUserLogin2Field &self, const std::string &value) {
                        std::strncpy(self.RandomString, value.c_str(), sizeof(CThostFtdcRspUserLogin2Field::RandomString));
                    }
            )
            ;

    py::class_<CThostFtdcTransferHeaderField>(structs, "CThostFtdcTransferHeaderField")
            .def(py::init<>())
            .def_property(
                    "Version",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.Version);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.Version, value.c_str(), sizeof(CThostFtdcTransferHeaderField::Version));
                    }
            )
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcTransferHeaderField::TradeCode));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcTransferHeaderField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcTransferHeaderField::TradeTime));
                    }
            )
            .def_property(
                    "TradeSerial",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.TradeSerial);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.TradeSerial, value.c_str(), sizeof(CThostFtdcTransferHeaderField::TradeSerial));
                    }
            )
            .def_property(
                    "FutureID",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.FutureID);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.FutureID, value.c_str(), sizeof(CThostFtdcTransferHeaderField::FutureID));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcTransferHeaderField::BankID));
                    }
            )
            .def_property(
                    "BankBrchID",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.BankBrchID);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.BankBrchID, value.c_str(), sizeof(CThostFtdcTransferHeaderField::BankBrchID));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcTransferHeaderField::OperNo));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcTransferHeaderField::DeviceID));
                    }
            )
            .def_property(
                    "RecordNum",
                    [](const CThostFtdcTransferHeaderField &self) {
                        return py::str(self.RecordNum);
                    },
                    [](CThostFtdcTransferHeaderField &self, const std::string &value) {
                        std::strncpy(self.RecordNum, value.c_str(), sizeof(CThostFtdcTransferHeaderField::RecordNum));
                    }
            )
            .def_readwrite("SessionID", &CThostFtdcTransferHeaderField::SessionID)
            .def_readwrite("RequestID", &CThostFtdcTransferHeaderField::RequestID)
            ;

    py::class_<CThostFtdcTransferBankToFutureReqField>(structs, "CThostFtdcTransferBankToFutureReqField")
            .def(py::init<>())
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferBankToFutureReqField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferBankToFutureReqField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferBankToFutureReqField::FutureAccount));
                    }
            )
            .def_readwrite("FuturePwdFlag", &CThostFtdcTransferBankToFutureReqField::FuturePwdFlag)
            .def_property(
                    "FutureAccPwd",
                    [](const CThostFtdcTransferBankToFutureReqField &self) {
                        return py::str(self.FutureAccPwd);
                    },
                    [](CThostFtdcTransferBankToFutureReqField &self, const std::string &value) {
                        std::strncpy(self.FutureAccPwd, value.c_str(), sizeof(CThostFtdcTransferBankToFutureReqField::FutureAccPwd));
                    }
            )
            .def_readwrite("TradeAmt", &CThostFtdcTransferBankToFutureReqField::TradeAmt)
            .def_readwrite("CustFee", &CThostFtdcTransferBankToFutureReqField::CustFee)
            .def_property(
                    "CurrencyCode",
                    [](const CThostFtdcTransferBankToFutureReqField &self) {
                        return py::str(self.CurrencyCode);
                    },
                    [](CThostFtdcTransferBankToFutureReqField &self, const std::string &value) {
                        std::strncpy(self.CurrencyCode, value.c_str(), sizeof(CThostFtdcTransferBankToFutureReqField::CurrencyCode));
                    }
            )
            ;

    py::class_<CThostFtdcTransferBankToFutureRspField>(structs, "CThostFtdcTransferBankToFutureRspField")
            .def(py::init<>())
            .def_property(
                    "RetCode",
                    [](const CThostFtdcTransferBankToFutureRspField &self) {
                        return py::str(self.RetCode);
                    },
                    [](CThostFtdcTransferBankToFutureRspField &self, const std::string &value) {
                        std::strncpy(self.RetCode, value.c_str(), sizeof(CThostFtdcTransferBankToFutureRspField::RetCode));
                    }
            )
            .def_property(
                    "RetInfo",
                    [](const CThostFtdcTransferBankToFutureRspField &self) {
                        return py::str(self.RetInfo);
                    },
                    [](CThostFtdcTransferBankToFutureRspField &self, const std::string &value) {
                        std::strncpy(self.RetInfo, value.c_str(), sizeof(CThostFtdcTransferBankToFutureRspField::RetInfo));
                    }
            )
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferBankToFutureRspField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferBankToFutureRspField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferBankToFutureRspField::FutureAccount));
                    }
            )
            .def_readwrite("TradeAmt", &CThostFtdcTransferBankToFutureRspField::TradeAmt)
            .def_readwrite("CustFee", &CThostFtdcTransferBankToFutureRspField::CustFee)
            .def_property(
                    "CurrencyCode",
                    [](const CThostFtdcTransferBankToFutureRspField &self) {
                        return py::str(self.CurrencyCode);
                    },
                    [](CThostFtdcTransferBankToFutureRspField &self, const std::string &value) {
                        std::strncpy(self.CurrencyCode, value.c_str(), sizeof(CThostFtdcTransferBankToFutureRspField::CurrencyCode));
                    }
            )
            ;

    py::class_<CThostFtdcTransferFutureToBankReqField>(structs, "CThostFtdcTransferFutureToBankReqField")
            .def(py::init<>())
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferFutureToBankReqField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferFutureToBankReqField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferFutureToBankReqField::FutureAccount));
                    }
            )
            .def_readwrite("FuturePwdFlag", &CThostFtdcTransferFutureToBankReqField::FuturePwdFlag)
            .def_property(
                    "FutureAccPwd",
                    [](const CThostFtdcTransferFutureToBankReqField &self) {
                        return py::str(self.FutureAccPwd);
                    },
                    [](CThostFtdcTransferFutureToBankReqField &self, const std::string &value) {
                        std::strncpy(self.FutureAccPwd, value.c_str(), sizeof(CThostFtdcTransferFutureToBankReqField::FutureAccPwd));
                    }
            )
            .def_readwrite("TradeAmt", &CThostFtdcTransferFutureToBankReqField::TradeAmt)
            .def_readwrite("CustFee", &CThostFtdcTransferFutureToBankReqField::CustFee)
            .def_property(
                    "CurrencyCode",
                    [](const CThostFtdcTransferFutureToBankReqField &self) {
                        return py::str(self.CurrencyCode);
                    },
                    [](CThostFtdcTransferFutureToBankReqField &self, const std::string &value) {
                        std::strncpy(self.CurrencyCode, value.c_str(), sizeof(CThostFtdcTransferFutureToBankReqField::CurrencyCode));
                    }
            )
            ;

    py::class_<CThostFtdcTransferFutureToBankRspField>(structs, "CThostFtdcTransferFutureToBankRspField")
            .def(py::init<>())
            .def_property(
                    "RetCode",
                    [](const CThostFtdcTransferFutureToBankRspField &self) {
                        return py::str(self.RetCode);
                    },
                    [](CThostFtdcTransferFutureToBankRspField &self, const std::string &value) {
                        std::strncpy(self.RetCode, value.c_str(), sizeof(CThostFtdcTransferFutureToBankRspField::RetCode));
                    }
            )
            .def_property(
                    "RetInfo",
                    [](const CThostFtdcTransferFutureToBankRspField &self) {
                        return py::str(self.RetInfo);
                    },
                    [](CThostFtdcTransferFutureToBankRspField &self, const std::string &value) {
                        std::strncpy(self.RetInfo, value.c_str(), sizeof(CThostFtdcTransferFutureToBankRspField::RetInfo));
                    }
            )
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferFutureToBankRspField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferFutureToBankRspField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferFutureToBankRspField::FutureAccount));
                    }
            )
            .def_readwrite("TradeAmt", &CThostFtdcTransferFutureToBankRspField::TradeAmt)
            .def_readwrite("CustFee", &CThostFtdcTransferFutureToBankRspField::CustFee)
            .def_property(
                    "CurrencyCode",
                    [](const CThostFtdcTransferFutureToBankRspField &self) {
                        return py::str(self.CurrencyCode);
                    },
                    [](CThostFtdcTransferFutureToBankRspField &self, const std::string &value) {
                        std::strncpy(self.CurrencyCode, value.c_str(), sizeof(CThostFtdcTransferFutureToBankRspField::CurrencyCode));
                    }
            )
            ;

    py::class_<CThostFtdcTransferQryBankReqField>(structs, "CThostFtdcTransferQryBankReqField")
            .def(py::init<>())
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferQryBankReqField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferQryBankReqField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferQryBankReqField::FutureAccount));
                    }
            )
            .def_readwrite("FuturePwdFlag", &CThostFtdcTransferQryBankReqField::FuturePwdFlag)
            .def_property(
                    "FutureAccPwd",
                    [](const CThostFtdcTransferQryBankReqField &self) {
                        return py::str(self.FutureAccPwd);
                    },
                    [](CThostFtdcTransferQryBankReqField &self, const std::string &value) {
                        std::strncpy(self.FutureAccPwd, value.c_str(), sizeof(CThostFtdcTransferQryBankReqField::FutureAccPwd));
                    }
            )
            .def_property(
                    "CurrencyCode",
                    [](const CThostFtdcTransferQryBankReqField &self) {
                        return py::str(self.CurrencyCode);
                    },
                    [](CThostFtdcTransferQryBankReqField &self, const std::string &value) {
                        std::strncpy(self.CurrencyCode, value.c_str(), sizeof(CThostFtdcTransferQryBankReqField::CurrencyCode));
                    }
            )
            ;

    py::class_<CThostFtdcTransferQryBankRspField>(structs, "CThostFtdcTransferQryBankRspField")
            .def(py::init<>())
            .def_property(
                    "RetCode",
                    [](const CThostFtdcTransferQryBankRspField &self) {
                        return py::str(self.RetCode);
                    },
                    [](CThostFtdcTransferQryBankRspField &self, const std::string &value) {
                        std::strncpy(self.RetCode, value.c_str(), sizeof(CThostFtdcTransferQryBankRspField::RetCode));
                    }
            )
            .def_property(
                    "RetInfo",
                    [](const CThostFtdcTransferQryBankRspField &self) {
                        return py::str(self.RetInfo);
                    },
                    [](CThostFtdcTransferQryBankRspField &self, const std::string &value) {
                        std::strncpy(self.RetInfo, value.c_str(), sizeof(CThostFtdcTransferQryBankRspField::RetInfo));
                    }
            )
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferQryBankRspField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferQryBankRspField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferQryBankRspField::FutureAccount));
                    }
            )
            .def_readwrite("TradeAmt", &CThostFtdcTransferQryBankRspField::TradeAmt)
            .def_readwrite("UseAmt", &CThostFtdcTransferQryBankRspField::UseAmt)
            .def_readwrite("FetchAmt", &CThostFtdcTransferQryBankRspField::FetchAmt)
            .def_property(
                    "CurrencyCode",
                    [](const CThostFtdcTransferQryBankRspField &self) {
                        return py::str(self.CurrencyCode);
                    },
                    [](CThostFtdcTransferQryBankRspField &self, const std::string &value) {
                        std::strncpy(self.CurrencyCode, value.c_str(), sizeof(CThostFtdcTransferQryBankRspField::CurrencyCode));
                    }
            )
            ;

    py::class_<CThostFtdcTransferQryDetailReqField>(structs, "CThostFtdcTransferQryDetailReqField")
            .def(py::init<>())
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferQryDetailReqField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferQryDetailReqField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferQryDetailReqField::FutureAccount));
                    }
            )
            ;

    py::class_<CThostFtdcTransferQryDetailRspField>(structs, "CThostFtdcTransferQryDetailRspField")
            .def(py::init<>())
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::TradeTime));
                    }
            )
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::TradeCode));
                    }
            )
            .def_readwrite("FutureSerial", &CThostFtdcTransferQryDetailRspField::FutureSerial)
            .def_property(
                    "FutureID",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.FutureID);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.FutureID, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::FutureID));
                    }
            )
            .def_property(
                    "FutureAccount",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.FutureAccount);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.FutureAccount, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::FutureAccount));
                    }
            )
            .def_readwrite("BankSerial", &CThostFtdcTransferQryDetailRspField::BankSerial)
            .def_property(
                    "BankID",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::BankID));
                    }
            )
            .def_property(
                    "BankBrchID",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.BankBrchID);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.BankBrchID, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::BankBrchID));
                    }
            )
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::BankAccount));
                    }
            )
            .def_property(
                    "CertCode",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.CertCode);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.CertCode, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::CertCode));
                    }
            )
            .def_property(
                    "CurrencyCode",
                    [](const CThostFtdcTransferQryDetailRspField &self) {
                        return py::str(self.CurrencyCode);
                    },
                    [](CThostFtdcTransferQryDetailRspField &self, const std::string &value) {
                        std::strncpy(self.CurrencyCode, value.c_str(), sizeof(CThostFtdcTransferQryDetailRspField::CurrencyCode));
                    }
            )
            .def_readwrite("TxAmount", &CThostFtdcTransferQryDetailRspField::TxAmount)
            .def_readwrite("Flag", &CThostFtdcTransferQryDetailRspField::Flag)
            ;

    py::class_<CThostFtdcRspInfoField>(structs, "CThostFtdcRspInfoField")
            .def(py::init<>())
            .def_readwrite("ErrorID", &CThostFtdcRspInfoField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcRspInfoField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcRspInfoField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcRspInfoField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeField>(structs, "CThostFtdcExchangeField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeField::ExchangeID));
                    }
            )
            .def_property(
                    "ExchangeName",
                    [](const CThostFtdcExchangeField &self) {
                        return py::str(self.ExchangeName);
                    },
                    [](CThostFtdcExchangeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeName, value.c_str(), sizeof(CThostFtdcExchangeField::ExchangeName));
                    }
            )
            .def_readwrite("ExchangeProperty", &CThostFtdcExchangeField::ExchangeProperty)
            ;

    py::class_<CThostFtdcProductField>(structs, "CThostFtdcProductField")
            .def(py::init<>())
            .def_property(
                    "ProductID",
                    [](const CThostFtdcProductField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcProductField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcProductField::ProductID));
                    }
            )
            .def_property(
                    "ProductName",
                    [](const CThostFtdcProductField &self) {
                        return py::str(self.ProductName);
                    },
                    [](CThostFtdcProductField &self, const std::string &value) {
                        std::strncpy(self.ProductName, value.c_str(), sizeof(CThostFtdcProductField::ProductName));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcProductField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcProductField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcProductField::ExchangeID));
                    }
            )
            .def_readwrite("ProductClass", &CThostFtdcProductField::ProductClass)
            .def_readwrite("VolumeMultiple", &CThostFtdcProductField::VolumeMultiple)
            .def_readwrite("PriceTick", &CThostFtdcProductField::PriceTick)
            .def_readwrite("MaxMarketOrderVolume", &CThostFtdcProductField::MaxMarketOrderVolume)
            .def_readwrite("MinMarketOrderVolume", &CThostFtdcProductField::MinMarketOrderVolume)
            .def_readwrite("MaxLimitOrderVolume", &CThostFtdcProductField::MaxLimitOrderVolume)
            .def_readwrite("MinLimitOrderVolume", &CThostFtdcProductField::MinLimitOrderVolume)
            .def_readwrite("PositionType", &CThostFtdcProductField::PositionType)
            .def_readwrite("PositionDateType", &CThostFtdcProductField::PositionDateType)
            .def_readwrite("CloseDealType", &CThostFtdcProductField::CloseDealType)
            .def_property(
                    "TradeCurrencyID",
                    [](const CThostFtdcProductField &self) {
                        return py::str(self.TradeCurrencyID);
                    },
                    [](CThostFtdcProductField &self, const std::string &value) {
                        std::strncpy(self.TradeCurrencyID, value.c_str(), sizeof(CThostFtdcProductField::TradeCurrencyID));
                    }
            )
            .def_readwrite("MortgageFundUseRange", &CThostFtdcProductField::MortgageFundUseRange)
            .def_property(
                    "ExchangeProductID",
                    [](const CThostFtdcProductField &self) {
                        return py::str(self.ExchangeProductID);
                    },
                    [](CThostFtdcProductField &self, const std::string &value) {
                        std::strncpy(self.ExchangeProductID, value.c_str(), sizeof(CThostFtdcProductField::ExchangeProductID));
                    }
            )
            .def_readwrite("UnderlyingMultiple", &CThostFtdcProductField::UnderlyingMultiple)
            ;

    py::class_<CThostFtdcInstrumentField>(structs, "CThostFtdcInstrumentField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInstrumentField::ExchangeID));
                    }
            )
            .def_property(
                    "InstrumentName",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.InstrumentName);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.InstrumentName, value.c_str(), sizeof(CThostFtdcInstrumentField::InstrumentName));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcInstrumentField::ExchangeInstID));
                    }
            )
            .def_property(
                    "ProductID",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcInstrumentField::ProductID));
                    }
            )
            .def_readwrite("ProductClass", &CThostFtdcInstrumentField::ProductClass)
            .def_readwrite("DeliveryYear", &CThostFtdcInstrumentField::DeliveryYear)
            .def_readwrite("DeliveryMonth", &CThostFtdcInstrumentField::DeliveryMonth)
            .def_readwrite("MaxMarketOrderVolume", &CThostFtdcInstrumentField::MaxMarketOrderVolume)
            .def_readwrite("MinMarketOrderVolume", &CThostFtdcInstrumentField::MinMarketOrderVolume)
            .def_readwrite("MaxLimitOrderVolume", &CThostFtdcInstrumentField::MaxLimitOrderVolume)
            .def_readwrite("MinLimitOrderVolume", &CThostFtdcInstrumentField::MinLimitOrderVolume)
            .def_readwrite("VolumeMultiple", &CThostFtdcInstrumentField::VolumeMultiple)
            .def_readwrite("PriceTick", &CThostFtdcInstrumentField::PriceTick)
            .def_property(
                    "CreateDate",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.CreateDate);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.CreateDate, value.c_str(), sizeof(CThostFtdcInstrumentField::CreateDate));
                    }
            )
            .def_property(
                    "OpenDate",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.OpenDate);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.OpenDate, value.c_str(), sizeof(CThostFtdcInstrumentField::OpenDate));
                    }
            )
            .def_property(
                    "ExpireDate",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.ExpireDate);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.ExpireDate, value.c_str(), sizeof(CThostFtdcInstrumentField::ExpireDate));
                    }
            )
            .def_property(
                    "StartDelivDate",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.StartDelivDate);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.StartDelivDate, value.c_str(), sizeof(CThostFtdcInstrumentField::StartDelivDate));
                    }
            )
            .def_property(
                    "EndDelivDate",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.EndDelivDate);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.EndDelivDate, value.c_str(), sizeof(CThostFtdcInstrumentField::EndDelivDate));
                    }
            )
            .def_readwrite("InstLifePhase", &CThostFtdcInstrumentField::InstLifePhase)
            .def_readwrite("IsTrading", &CThostFtdcInstrumentField::IsTrading)
            .def_readwrite("PositionType", &CThostFtdcInstrumentField::PositionType)
            .def_readwrite("PositionDateType", &CThostFtdcInstrumentField::PositionDateType)
            .def_readwrite("LongMarginRatio", &CThostFtdcInstrumentField::LongMarginRatio)
            .def_readwrite("ShortMarginRatio", &CThostFtdcInstrumentField::ShortMarginRatio)
            .def_readwrite("MaxMarginSideAlgorithm", &CThostFtdcInstrumentField::MaxMarginSideAlgorithm)
            .def_property(
                    "UnderlyingInstrID",
                    [](const CThostFtdcInstrumentField &self) {
                        return py::str(self.UnderlyingInstrID);
                    },
                    [](CThostFtdcInstrumentField &self, const std::string &value) {
                        std::strncpy(self.UnderlyingInstrID, value.c_str(), sizeof(CThostFtdcInstrumentField::UnderlyingInstrID));
                    }
            )
            .def_readwrite("StrikePrice", &CThostFtdcInstrumentField::StrikePrice)
            .def_readwrite("OptionsType", &CThostFtdcInstrumentField::OptionsType)
            .def_readwrite("UnderlyingMultiple", &CThostFtdcInstrumentField::UnderlyingMultiple)
            .def_readwrite("CombinationType", &CThostFtdcInstrumentField::CombinationType)
            ;

    py::class_<CThostFtdcBrokerField>(structs, "CThostFtdcBrokerField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerAbbr",
                    [](const CThostFtdcBrokerField &self) {
                        return py::str(self.BrokerAbbr);
                    },
                    [](CThostFtdcBrokerField &self, const std::string &value) {
                        std::strncpy(self.BrokerAbbr, value.c_str(), sizeof(CThostFtdcBrokerField::BrokerAbbr));
                    }
            )
            .def_property(
                    "BrokerName",
                    [](const CThostFtdcBrokerField &self) {
                        return py::str(self.BrokerName);
                    },
                    [](CThostFtdcBrokerField &self, const std::string &value) {
                        std::strncpy(self.BrokerName, value.c_str(), sizeof(CThostFtdcBrokerField::BrokerName));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcBrokerField::IsActive)
            ;

    py::class_<CThostFtdcTraderField>(structs, "CThostFtdcTraderField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcTraderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcTraderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcTraderField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcTraderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcTraderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcTraderField::TraderID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcTraderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcTraderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcTraderField::ParticipantID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcTraderField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcTraderField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcTraderField::Password));
                    }
            )
            .def_readwrite("InstallCount", &CThostFtdcTraderField::InstallCount)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTraderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTraderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTraderField::BrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcInvestorField>(structs, "CThostFtdcInvestorField")
            .def(py::init<>())
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestorField::InvestorID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorGroupID",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.InvestorGroupID);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.InvestorGroupID, value.c_str(), sizeof(CThostFtdcInvestorField::InvestorGroupID));
                    }
            )
            .def_property(
                    "InvestorName",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.InvestorName);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.InvestorName, value.c_str(), sizeof(CThostFtdcInvestorField::InvestorName));
                    }
            )
            .def_readwrite("IdentifiedCardType", &CThostFtdcInvestorField::IdentifiedCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcInvestorField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcInvestorField::IsActive)
            .def_property(
                    "Telephone",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcInvestorField::Telephone));
                    }
            )
            .def_property(
                    "Address",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcInvestorField::Address));
                    }
            )
            .def_property(
                    "OpenDate",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.OpenDate);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.OpenDate, value.c_str(), sizeof(CThostFtdcInvestorField::OpenDate));
                    }
            )
            .def_property(
                    "Mobile",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.Mobile);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.Mobile, value.c_str(), sizeof(CThostFtdcInvestorField::Mobile));
                    }
            )
            .def_property(
                    "CommModelID",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.CommModelID);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.CommModelID, value.c_str(), sizeof(CThostFtdcInvestorField::CommModelID));
                    }
            )
            .def_property(
                    "MarginModelID",
                    [](const CThostFtdcInvestorField &self) {
                        return py::str(self.MarginModelID);
                    },
                    [](CThostFtdcInvestorField &self, const std::string &value) {
                        std::strncpy(self.MarginModelID, value.c_str(), sizeof(CThostFtdcInvestorField::MarginModelID));
                    }
            )
            ;

    py::class_<CThostFtdcTradingCodeField>(structs, "CThostFtdcTradingCodeField")
            .def(py::init<>())
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcTradingCodeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcTradingCodeField::InvestorID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingCodeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingCodeField::BrokerID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcTradingCodeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcTradingCodeField::ExchangeID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcTradingCodeField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcTradingCodeField::ClientID));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcTradingCodeField::IsActive)
            .def_readwrite("ClientIDType", &CThostFtdcTradingCodeField::ClientIDType)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcTradingCodeField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcTradingCodeField::BranchID));
                    }
            )
            .def_readwrite("BizType", &CThostFtdcTradingCodeField::BizType)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcTradingCodeField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcTradingCodeField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcPartBrokerField>(structs, "CThostFtdcPartBrokerField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcPartBrokerField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcPartBrokerField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcPartBrokerField::BrokerID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcPartBrokerField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcPartBrokerField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcPartBrokerField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcPartBrokerField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcPartBrokerField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcPartBrokerField::ParticipantID));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcPartBrokerField::IsActive)
            ;

    py::class_<CThostFtdcSuperUserField>(structs, "CThostFtdcSuperUserField")
            .def(py::init<>())
            .def_property(
                    "UserID",
                    [](const CThostFtdcSuperUserField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcSuperUserField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcSuperUserField::UserID));
                    }
            )
            .def_property(
                    "UserName",
                    [](const CThostFtdcSuperUserField &self) {
                        return py::str(self.UserName);
                    },
                    [](CThostFtdcSuperUserField &self, const std::string &value) {
                        std::strncpy(self.UserName, value.c_str(), sizeof(CThostFtdcSuperUserField::UserName));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcSuperUserField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcSuperUserField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcSuperUserField::Password));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcSuperUserField::IsActive)
            ;

    py::class_<CThostFtdcSuperUserFunctionField>(structs, "CThostFtdcSuperUserFunctionField")
            .def(py::init<>())
            .def_property(
                    "UserID",
                    [](const CThostFtdcSuperUserFunctionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcSuperUserFunctionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcSuperUserFunctionField::UserID));
                    }
            )
            .def_readwrite("FunctionCode", &CThostFtdcSuperUserFunctionField::FunctionCode)
            ;

    py::class_<CThostFtdcInvestorGroupField>(structs, "CThostFtdcInvestorGroupField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorGroupField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorGroupField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorGroupField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorGroupID",
                    [](const CThostFtdcInvestorGroupField &self) {
                        return py::str(self.InvestorGroupID);
                    },
                    [](CThostFtdcInvestorGroupField &self, const std::string &value) {
                        std::strncpy(self.InvestorGroupID, value.c_str(), sizeof(CThostFtdcInvestorGroupField::InvestorGroupID));
                    }
            )
            .def_property(
                    "InvestorGroupName",
                    [](const CThostFtdcInvestorGroupField &self) {
                        return py::str(self.InvestorGroupName);
                    },
                    [](CThostFtdcInvestorGroupField &self, const std::string &value) {
                        std::strncpy(self.InvestorGroupName, value.c_str(), sizeof(CThostFtdcInvestorGroupField::InvestorGroupName));
                    }
            )
            ;

    py::class_<CThostFtdcTradingAccountField>(structs, "CThostFtdcTradingAccountField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingAccountField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcTradingAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcTradingAccountField::AccountID));
                    }
            )
            .def_readwrite("PreMortgage", &CThostFtdcTradingAccountField::PreMortgage)
            .def_readwrite("PreCredit", &CThostFtdcTradingAccountField::PreCredit)
            .def_readwrite("PreDeposit", &CThostFtdcTradingAccountField::PreDeposit)
            .def_readwrite("PreBalance", &CThostFtdcTradingAccountField::PreBalance)
            .def_readwrite("PreMargin", &CThostFtdcTradingAccountField::PreMargin)
            .def_readwrite("InterestBase", &CThostFtdcTradingAccountField::InterestBase)
            .def_readwrite("Interest", &CThostFtdcTradingAccountField::Interest)
            .def_readwrite("Deposit", &CThostFtdcTradingAccountField::Deposit)
            .def_readwrite("Withdraw", &CThostFtdcTradingAccountField::Withdraw)
            .def_readwrite("FrozenMargin", &CThostFtdcTradingAccountField::FrozenMargin)
            .def_readwrite("FrozenCash", &CThostFtdcTradingAccountField::FrozenCash)
            .def_readwrite("FrozenCommission", &CThostFtdcTradingAccountField::FrozenCommission)
            .def_readwrite("CurrMargin", &CThostFtdcTradingAccountField::CurrMargin)
            .def_readwrite("CashIn", &CThostFtdcTradingAccountField::CashIn)
            .def_readwrite("Commission", &CThostFtdcTradingAccountField::Commission)
            .def_readwrite("CloseProfit", &CThostFtdcTradingAccountField::CloseProfit)
            .def_readwrite("PositionProfit", &CThostFtdcTradingAccountField::PositionProfit)
            .def_readwrite("Balance", &CThostFtdcTradingAccountField::Balance)
            .def_readwrite("Available", &CThostFtdcTradingAccountField::Available)
            .def_readwrite("WithdrawQuota", &CThostFtdcTradingAccountField::WithdrawQuota)
            .def_readwrite("Reserve", &CThostFtdcTradingAccountField::Reserve)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcTradingAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcTradingAccountField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcTradingAccountField::SettlementID)
            .def_readwrite("Credit", &CThostFtdcTradingAccountField::Credit)
            .def_readwrite("Mortgage", &CThostFtdcTradingAccountField::Mortgage)
            .def_readwrite("ExchangeMargin", &CThostFtdcTradingAccountField::ExchangeMargin)
            .def_readwrite("DeliveryMargin", &CThostFtdcTradingAccountField::DeliveryMargin)
            .def_readwrite("ExchangeDeliveryMargin", &CThostFtdcTradingAccountField::ExchangeDeliveryMargin)
            .def_readwrite("ReserveBalance", &CThostFtdcTradingAccountField::ReserveBalance)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcTradingAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcTradingAccountField::CurrencyID));
                    }
            )
            .def_readwrite("PreFundMortgageIn", &CThostFtdcTradingAccountField::PreFundMortgageIn)
            .def_readwrite("PreFundMortgageOut", &CThostFtdcTradingAccountField::PreFundMortgageOut)
            .def_readwrite("FundMortgageIn", &CThostFtdcTradingAccountField::FundMortgageIn)
            .def_readwrite("FundMortgageOut", &CThostFtdcTradingAccountField::FundMortgageOut)
            .def_readwrite("FundMortgageAvailable", &CThostFtdcTradingAccountField::FundMortgageAvailable)
            .def_readwrite("MortgageableFund", &CThostFtdcTradingAccountField::MortgageableFund)
            .def_readwrite("SpecProductMargin", &CThostFtdcTradingAccountField::SpecProductMargin)
            .def_readwrite("SpecProductFrozenMargin", &CThostFtdcTradingAccountField::SpecProductFrozenMargin)
            .def_readwrite("SpecProductCommission", &CThostFtdcTradingAccountField::SpecProductCommission)
            .def_readwrite("SpecProductFrozenCommission", &CThostFtdcTradingAccountField::SpecProductFrozenCommission)
            .def_readwrite("SpecProductPositionProfit", &CThostFtdcTradingAccountField::SpecProductPositionProfit)
            .def_readwrite("SpecProductCloseProfit", &CThostFtdcTradingAccountField::SpecProductCloseProfit)
            .def_readwrite("SpecProductPositionProfitByAlg", &CThostFtdcTradingAccountField::SpecProductPositionProfitByAlg)
            .def_readwrite("SpecProductExchangeMargin", &CThostFtdcTradingAccountField::SpecProductExchangeMargin)
            .def_readwrite("BizType", &CThostFtdcTradingAccountField::BizType)
            .def_readwrite("FrozenSwap", &CThostFtdcTradingAccountField::FrozenSwap)
            .def_readwrite("RemainSwap", &CThostFtdcTradingAccountField::RemainSwap)
            ;

    py::class_<CThostFtdcInvestorPositionField>(structs, "CThostFtdcInvestorPositionField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInvestorPositionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInvestorPositionField::InstrumentID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorPositionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorPositionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestorPositionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestorPositionField::InvestorID));
                    }
            )
            .def_readwrite("PosiDirection", &CThostFtdcInvestorPositionField::PosiDirection)
            .def_readwrite("HedgeFlag", &CThostFtdcInvestorPositionField::HedgeFlag)
            .def_readwrite("PositionDate", &CThostFtdcInvestorPositionField::PositionDate)
            .def_readwrite("YdPosition", &CThostFtdcInvestorPositionField::YdPosition)
            .def_readwrite("Position", &CThostFtdcInvestorPositionField::Position)
            .def_readwrite("LongFrozen", &CThostFtdcInvestorPositionField::LongFrozen)
            .def_readwrite("ShortFrozen", &CThostFtdcInvestorPositionField::ShortFrozen)
            .def_readwrite("LongFrozenAmount", &CThostFtdcInvestorPositionField::LongFrozenAmount)
            .def_readwrite("ShortFrozenAmount", &CThostFtdcInvestorPositionField::ShortFrozenAmount)
            .def_readwrite("OpenVolume", &CThostFtdcInvestorPositionField::OpenVolume)
            .def_readwrite("CloseVolume", &CThostFtdcInvestorPositionField::CloseVolume)
            .def_readwrite("OpenAmount", &CThostFtdcInvestorPositionField::OpenAmount)
            .def_readwrite("CloseAmount", &CThostFtdcInvestorPositionField::CloseAmount)
            .def_readwrite("PositionCost", &CThostFtdcInvestorPositionField::PositionCost)
            .def_readwrite("PreMargin", &CThostFtdcInvestorPositionField::PreMargin)
            .def_readwrite("UseMargin", &CThostFtdcInvestorPositionField::UseMargin)
            .def_readwrite("FrozenMargin", &CThostFtdcInvestorPositionField::FrozenMargin)
            .def_readwrite("FrozenCash", &CThostFtdcInvestorPositionField::FrozenCash)
            .def_readwrite("FrozenCommission", &CThostFtdcInvestorPositionField::FrozenCommission)
            .def_readwrite("CashIn", &CThostFtdcInvestorPositionField::CashIn)
            .def_readwrite("Commission", &CThostFtdcInvestorPositionField::Commission)
            .def_readwrite("CloseProfit", &CThostFtdcInvestorPositionField::CloseProfit)
            .def_readwrite("PositionProfit", &CThostFtdcInvestorPositionField::PositionProfit)
            .def_readwrite("PreSettlementPrice", &CThostFtdcInvestorPositionField::PreSettlementPrice)
            .def_readwrite("SettlementPrice", &CThostFtdcInvestorPositionField::SettlementPrice)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcInvestorPositionField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcInvestorPositionField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcInvestorPositionField::SettlementID)
            .def_readwrite("OpenCost", &CThostFtdcInvestorPositionField::OpenCost)
            .def_readwrite("ExchangeMargin", &CThostFtdcInvestorPositionField::ExchangeMargin)
            .def_readwrite("CombPosition", &CThostFtdcInvestorPositionField::CombPosition)
            .def_readwrite("CombLongFrozen", &CThostFtdcInvestorPositionField::CombLongFrozen)
            .def_readwrite("CombShortFrozen", &CThostFtdcInvestorPositionField::CombShortFrozen)
            .def_readwrite("CloseProfitByDate", &CThostFtdcInvestorPositionField::CloseProfitByDate)
            .def_readwrite("CloseProfitByTrade", &CThostFtdcInvestorPositionField::CloseProfitByTrade)
            .def_readwrite("TodayPosition", &CThostFtdcInvestorPositionField::TodayPosition)
            .def_readwrite("MarginRateByMoney", &CThostFtdcInvestorPositionField::MarginRateByMoney)
            .def_readwrite("MarginRateByVolume", &CThostFtdcInvestorPositionField::MarginRateByVolume)
            .def_readwrite("StrikeFrozen", &CThostFtdcInvestorPositionField::StrikeFrozen)
            .def_readwrite("StrikeFrozenAmount", &CThostFtdcInvestorPositionField::StrikeFrozenAmount)
            .def_readwrite("AbandonFrozen", &CThostFtdcInvestorPositionField::AbandonFrozen)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInvestorPositionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInvestorPositionField::ExchangeID));
                    }
            )
            .def_readwrite("YdStrikeFrozen", &CThostFtdcInvestorPositionField::YdStrikeFrozen)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInvestorPositionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInvestorPositionField::InvestUnitID));
                    }
            )
            .def_readwrite("PositionCostOffset", &CThostFtdcInvestorPositionField::PositionCostOffset)
            ;

    py::class_<CThostFtdcInstrumentMarginRateField>(structs, "CThostFtdcInstrumentMarginRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentMarginRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcInstrumentMarginRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInstrumentMarginRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInstrumentMarginRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateField::InvestorID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcInstrumentMarginRateField::HedgeFlag)
            .def_readwrite("LongMarginRatioByMoney", &CThostFtdcInstrumentMarginRateField::LongMarginRatioByMoney)
            .def_readwrite("LongMarginRatioByVolume", &CThostFtdcInstrumentMarginRateField::LongMarginRatioByVolume)
            .def_readwrite("ShortMarginRatioByMoney", &CThostFtdcInstrumentMarginRateField::ShortMarginRatioByMoney)
            .def_readwrite("ShortMarginRatioByVolume", &CThostFtdcInstrumentMarginRateField::ShortMarginRatioByVolume)
            .def_readwrite("IsRelative", &CThostFtdcInstrumentMarginRateField::IsRelative)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInstrumentMarginRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInstrumentMarginRateField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcInstrumentCommissionRateField>(structs, "CThostFtdcInstrumentCommissionRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentCommissionRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentCommissionRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcInstrumentCommissionRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInstrumentCommissionRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInstrumentCommissionRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInstrumentCommissionRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInstrumentCommissionRateField::InvestorID));
                    }
            )
            .def_readwrite("OpenRatioByMoney", &CThostFtdcInstrumentCommissionRateField::OpenRatioByMoney)
            .def_readwrite("OpenRatioByVolume", &CThostFtdcInstrumentCommissionRateField::OpenRatioByVolume)
            .def_readwrite("CloseRatioByMoney", &CThostFtdcInstrumentCommissionRateField::CloseRatioByMoney)
            .def_readwrite("CloseRatioByVolume", &CThostFtdcInstrumentCommissionRateField::CloseRatioByVolume)
            .def_readwrite("CloseTodayRatioByMoney", &CThostFtdcInstrumentCommissionRateField::CloseTodayRatioByMoney)
            .def_readwrite("CloseTodayRatioByVolume", &CThostFtdcInstrumentCommissionRateField::CloseTodayRatioByVolume)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInstrumentCommissionRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInstrumentCommissionRateField::ExchangeID));
                    }
            )
            .def_readwrite("BizType", &CThostFtdcInstrumentCommissionRateField::BizType)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInstrumentCommissionRateField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInstrumentCommissionRateField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcDepthMarketDataField>(structs, "CThostFtdcDepthMarketDataField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcDepthMarketDataField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcDepthMarketDataField::TradingDay));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcDepthMarketDataField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcDepthMarketDataField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcDepthMarketDataField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcDepthMarketDataField::ExchangeID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcDepthMarketDataField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcDepthMarketDataField::ExchangeInstID));
                    }
            )
            .def_readwrite("LastPrice", &CThostFtdcDepthMarketDataField::LastPrice)
            .def_readwrite("PreSettlementPrice", &CThostFtdcDepthMarketDataField::PreSettlementPrice)
            .def_readwrite("PreClosePrice", &CThostFtdcDepthMarketDataField::PreClosePrice)
            .def_readwrite("PreOpenInterest", &CThostFtdcDepthMarketDataField::PreOpenInterest)
            .def_readwrite("OpenPrice", &CThostFtdcDepthMarketDataField::OpenPrice)
            .def_readwrite("HighestPrice", &CThostFtdcDepthMarketDataField::HighestPrice)
            .def_readwrite("LowestPrice", &CThostFtdcDepthMarketDataField::LowestPrice)
            .def_readwrite("Volume", &CThostFtdcDepthMarketDataField::Volume)
            .def_readwrite("Turnover", &CThostFtdcDepthMarketDataField::Turnover)
            .def_readwrite("OpenInterest", &CThostFtdcDepthMarketDataField::OpenInterest)
            .def_readwrite("ClosePrice", &CThostFtdcDepthMarketDataField::ClosePrice)
            .def_readwrite("SettlementPrice", &CThostFtdcDepthMarketDataField::SettlementPrice)
            .def_readwrite("UpperLimitPrice", &CThostFtdcDepthMarketDataField::UpperLimitPrice)
            .def_readwrite("LowerLimitPrice", &CThostFtdcDepthMarketDataField::LowerLimitPrice)
            .def_readwrite("PreDelta", &CThostFtdcDepthMarketDataField::PreDelta)
            .def_readwrite("CurrDelta", &CThostFtdcDepthMarketDataField::CurrDelta)
            .def_property(
                    "UpdateTime",
                    [](const CThostFtdcDepthMarketDataField &self) {
                        return py::str(self.UpdateTime);
                    },
                    [](CThostFtdcDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.UpdateTime, value.c_str(), sizeof(CThostFtdcDepthMarketDataField::UpdateTime));
                    }
            )
            .def_readwrite("UpdateMillisec", &CThostFtdcDepthMarketDataField::UpdateMillisec)
            .def_readwrite("BidPrice1", &CThostFtdcDepthMarketDataField::BidPrice1)
            .def_readwrite("BidVolume1", &CThostFtdcDepthMarketDataField::BidVolume1)
            .def_readwrite("AskPrice1", &CThostFtdcDepthMarketDataField::AskPrice1)
            .def_readwrite("AskVolume1", &CThostFtdcDepthMarketDataField::AskVolume1)
            .def_readwrite("BidPrice2", &CThostFtdcDepthMarketDataField::BidPrice2)
            .def_readwrite("BidVolume2", &CThostFtdcDepthMarketDataField::BidVolume2)
            .def_readwrite("AskPrice2", &CThostFtdcDepthMarketDataField::AskPrice2)
            .def_readwrite("AskVolume2", &CThostFtdcDepthMarketDataField::AskVolume2)
            .def_readwrite("BidPrice3", &CThostFtdcDepthMarketDataField::BidPrice3)
            .def_readwrite("BidVolume3", &CThostFtdcDepthMarketDataField::BidVolume3)
            .def_readwrite("AskPrice3", &CThostFtdcDepthMarketDataField::AskPrice3)
            .def_readwrite("AskVolume3", &CThostFtdcDepthMarketDataField::AskVolume3)
            .def_readwrite("BidPrice4", &CThostFtdcDepthMarketDataField::BidPrice4)
            .def_readwrite("BidVolume4", &CThostFtdcDepthMarketDataField::BidVolume4)
            .def_readwrite("AskPrice4", &CThostFtdcDepthMarketDataField::AskPrice4)
            .def_readwrite("AskVolume4", &CThostFtdcDepthMarketDataField::AskVolume4)
            .def_readwrite("BidPrice5", &CThostFtdcDepthMarketDataField::BidPrice5)
            .def_readwrite("BidVolume5", &CThostFtdcDepthMarketDataField::BidVolume5)
            .def_readwrite("AskPrice5", &CThostFtdcDepthMarketDataField::AskPrice5)
            .def_readwrite("AskVolume5", &CThostFtdcDepthMarketDataField::AskVolume5)
            .def_readwrite("AveragePrice", &CThostFtdcDepthMarketDataField::AveragePrice)
            .def_property(
                    "ActionDay",
                    [](const CThostFtdcDepthMarketDataField &self) {
                        return py::str(self.ActionDay);
                    },
                    [](CThostFtdcDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.ActionDay, value.c_str(), sizeof(CThostFtdcDepthMarketDataField::ActionDay));
                    }
            )
            ;

    py::class_<CThostFtdcInstrumentTradingRightField>(structs, "CThostFtdcInstrumentTradingRightField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentTradingRightField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentTradingRightField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcInstrumentTradingRightField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInstrumentTradingRightField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInstrumentTradingRightField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInstrumentTradingRightField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInstrumentTradingRightField::InvestorID));
                    }
            )
            .def_readwrite("TradingRight", &CThostFtdcInstrumentTradingRightField::TradingRight)
            ;

    py::class_<CThostFtdcBrokerUserField>(structs, "CThostFtdcBrokerUserField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerUserField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerUserField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerUserField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcBrokerUserField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcBrokerUserField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcBrokerUserField::UserID));
                    }
            )
            .def_property(
                    "UserName",
                    [](const CThostFtdcBrokerUserField &self) {
                        return py::str(self.UserName);
                    },
                    [](CThostFtdcBrokerUserField &self, const std::string &value) {
                        std::strncpy(self.UserName, value.c_str(), sizeof(CThostFtdcBrokerUserField::UserName));
                    }
            )
            .def_readwrite("UserType", &CThostFtdcBrokerUserField::UserType)
            .def_readwrite("IsActive", &CThostFtdcBrokerUserField::IsActive)
            .def_readwrite("IsUsingOTP", &CThostFtdcBrokerUserField::IsUsingOTP)
            .def_readwrite("IsAuthForce", &CThostFtdcBrokerUserField::IsAuthForce)
            ;

    py::class_<CThostFtdcBrokerUserPasswordField>(structs, "CThostFtdcBrokerUserPasswordField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerUserPasswordField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerUserPasswordField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerUserPasswordField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcBrokerUserPasswordField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcBrokerUserPasswordField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcBrokerUserPasswordField::UserID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcBrokerUserPasswordField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcBrokerUserPasswordField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcBrokerUserPasswordField::Password));
                    }
            )
            .def_property(
                    "LastUpdateTime",
                    [](const CThostFtdcBrokerUserPasswordField &self) {
                        return py::str(self.LastUpdateTime);
                    },
                    [](CThostFtdcBrokerUserPasswordField &self, const std::string &value) {
                        std::strncpy(self.LastUpdateTime, value.c_str(), sizeof(CThostFtdcBrokerUserPasswordField::LastUpdateTime));
                    }
            )
            .def_property(
                    "LastLoginTime",
                    [](const CThostFtdcBrokerUserPasswordField &self) {
                        return py::str(self.LastLoginTime);
                    },
                    [](CThostFtdcBrokerUserPasswordField &self, const std::string &value) {
                        std::strncpy(self.LastLoginTime, value.c_str(), sizeof(CThostFtdcBrokerUserPasswordField::LastLoginTime));
                    }
            )
            .def_property(
                    "ExpireDate",
                    [](const CThostFtdcBrokerUserPasswordField &self) {
                        return py::str(self.ExpireDate);
                    },
                    [](CThostFtdcBrokerUserPasswordField &self, const std::string &value) {
                        std::strncpy(self.ExpireDate, value.c_str(), sizeof(CThostFtdcBrokerUserPasswordField::ExpireDate));
                    }
            )
            .def_property(
                    "WeakExpireDate",
                    [](const CThostFtdcBrokerUserPasswordField &self) {
                        return py::str(self.WeakExpireDate);
                    },
                    [](CThostFtdcBrokerUserPasswordField &self, const std::string &value) {
                        std::strncpy(self.WeakExpireDate, value.c_str(), sizeof(CThostFtdcBrokerUserPasswordField::WeakExpireDate));
                    }
            )
            ;

    py::class_<CThostFtdcBrokerUserFunctionField>(structs, "CThostFtdcBrokerUserFunctionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerUserFunctionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerUserFunctionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerUserFunctionField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcBrokerUserFunctionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcBrokerUserFunctionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcBrokerUserFunctionField::UserID));
                    }
            )
            .def_readwrite("BrokerFunctionCode", &CThostFtdcBrokerUserFunctionField::BrokerFunctionCode)
            ;

    py::class_<CThostFtdcTraderOfferField>(structs, "CThostFtdcTraderOfferField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcTraderOfferField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcTraderOfferField::TraderID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcTraderOfferField::ParticipantID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcTraderOfferField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcTraderOfferField::InstallID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcTraderOfferField::OrderLocalID));
                    }
            )
            .def_readwrite("TraderConnectStatus", &CThostFtdcTraderOfferField::TraderConnectStatus)
            .def_property(
                    "ConnectRequestDate",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.ConnectRequestDate);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectRequestDate, value.c_str(), sizeof(CThostFtdcTraderOfferField::ConnectRequestDate));
                    }
            )
            .def_property(
                    "ConnectRequestTime",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.ConnectRequestTime);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectRequestTime, value.c_str(), sizeof(CThostFtdcTraderOfferField::ConnectRequestTime));
                    }
            )
            .def_property(
                    "LastReportDate",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.LastReportDate);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.LastReportDate, value.c_str(), sizeof(CThostFtdcTraderOfferField::LastReportDate));
                    }
            )
            .def_property(
                    "LastReportTime",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.LastReportTime);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.LastReportTime, value.c_str(), sizeof(CThostFtdcTraderOfferField::LastReportTime));
                    }
            )
            .def_property(
                    "ConnectDate",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.ConnectDate);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectDate, value.c_str(), sizeof(CThostFtdcTraderOfferField::ConnectDate));
                    }
            )
            .def_property(
                    "ConnectTime",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.ConnectTime);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectTime, value.c_str(), sizeof(CThostFtdcTraderOfferField::ConnectTime));
                    }
            )
            .def_property(
                    "StartDate",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.StartDate);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.StartDate, value.c_str(), sizeof(CThostFtdcTraderOfferField::StartDate));
                    }
            )
            .def_property(
                    "StartTime",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.StartTime);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.StartTime, value.c_str(), sizeof(CThostFtdcTraderOfferField::StartTime));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcTraderOfferField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTraderOfferField::BrokerID));
                    }
            )
            .def_property(
                    "MaxTradeID",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.MaxTradeID);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.MaxTradeID, value.c_str(), sizeof(CThostFtdcTraderOfferField::MaxTradeID));
                    }
            )
            .def_property(
                    "MaxOrderMessageReference",
                    [](const CThostFtdcTraderOfferField &self) {
                        return py::str(self.MaxOrderMessageReference);
                    },
                    [](CThostFtdcTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.MaxOrderMessageReference, value.c_str(), sizeof(CThostFtdcTraderOfferField::MaxOrderMessageReference));
                    }
            )
            ;

    py::class_<CThostFtdcSettlementInfoField>(structs, "CThostFtdcSettlementInfoField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcSettlementInfoField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcSettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcSettlementInfoField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcSettlementInfoField::SettlementID)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSettlementInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSettlementInfoField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSettlementInfoField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSettlementInfoField::InvestorID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcSettlementInfoField::SequenceNo)
            .def_property(
                    "Content",
                    [](const CThostFtdcSettlementInfoField &self) {
                        return py::str(self.Content);
                    },
                    [](CThostFtdcSettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.Content, value.c_str(), sizeof(CThostFtdcSettlementInfoField::Content));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcSettlementInfoField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcSettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcSettlementInfoField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcSettlementInfoField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcSettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcSettlementInfoField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcInstrumentMarginRateAdjustField>(structs, "CThostFtdcInstrumentMarginRateAdjustField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentMarginRateAdjustField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentMarginRateAdjustField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateAdjustField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcInstrumentMarginRateAdjustField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInstrumentMarginRateAdjustField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInstrumentMarginRateAdjustField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateAdjustField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInstrumentMarginRateAdjustField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInstrumentMarginRateAdjustField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateAdjustField::InvestorID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcInstrumentMarginRateAdjustField::HedgeFlag)
            .def_readwrite("LongMarginRatioByMoney", &CThostFtdcInstrumentMarginRateAdjustField::LongMarginRatioByMoney)
            .def_readwrite("LongMarginRatioByVolume", &CThostFtdcInstrumentMarginRateAdjustField::LongMarginRatioByVolume)
            .def_readwrite("ShortMarginRatioByMoney", &CThostFtdcInstrumentMarginRateAdjustField::ShortMarginRatioByMoney)
            .def_readwrite("ShortMarginRatioByVolume", &CThostFtdcInstrumentMarginRateAdjustField::ShortMarginRatioByVolume)
            .def_readwrite("IsRelative", &CThostFtdcInstrumentMarginRateAdjustField::IsRelative)
            ;

    py::class_<CThostFtdcExchangeMarginRateField>(structs, "CThostFtdcExchangeMarginRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcExchangeMarginRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcExchangeMarginRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcExchangeMarginRateField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcExchangeMarginRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcExchangeMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcExchangeMarginRateField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcExchangeMarginRateField::HedgeFlag)
            .def_readwrite("LongMarginRatioByMoney", &CThostFtdcExchangeMarginRateField::LongMarginRatioByMoney)
            .def_readwrite("LongMarginRatioByVolume", &CThostFtdcExchangeMarginRateField::LongMarginRatioByVolume)
            .def_readwrite("ShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateField::ShortMarginRatioByMoney)
            .def_readwrite("ShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateField::ShortMarginRatioByVolume)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeMarginRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeMarginRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeMarginRateField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeMarginRateAdjustField>(structs, "CThostFtdcExchangeMarginRateAdjustField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcExchangeMarginRateAdjustField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcExchangeMarginRateAdjustField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcExchangeMarginRateAdjustField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcExchangeMarginRateAdjustField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcExchangeMarginRateAdjustField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcExchangeMarginRateAdjustField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcExchangeMarginRateAdjustField::HedgeFlag)
            .def_readwrite("LongMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::LongMarginRatioByMoney)
            .def_readwrite("LongMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::LongMarginRatioByVolume)
            .def_readwrite("ShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::ShortMarginRatioByMoney)
            .def_readwrite("ShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::ShortMarginRatioByVolume)
            .def_readwrite("ExchLongMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::ExchLongMarginRatioByMoney)
            .def_readwrite("ExchLongMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::ExchLongMarginRatioByVolume)
            .def_readwrite("ExchShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::ExchShortMarginRatioByMoney)
            .def_readwrite("ExchShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::ExchShortMarginRatioByVolume)
            .def_readwrite("NoLongMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::NoLongMarginRatioByMoney)
            .def_readwrite("NoLongMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::NoLongMarginRatioByVolume)
            .def_readwrite("NoShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::NoShortMarginRatioByMoney)
            .def_readwrite("NoShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::NoShortMarginRatioByVolume)
            ;

    py::class_<CThostFtdcExchangeRateField>(structs, "CThostFtdcExchangeRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcExchangeRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcExchangeRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcExchangeRateField::BrokerID));
                    }
            )
            .def_property(
                    "FromCurrencyID",
                    [](const CThostFtdcExchangeRateField &self) {
                        return py::str(self.FromCurrencyID);
                    },
                    [](CThostFtdcExchangeRateField &self, const std::string &value) {
                        std::strncpy(self.FromCurrencyID, value.c_str(), sizeof(CThostFtdcExchangeRateField::FromCurrencyID));
                    }
            )
            .def_readwrite("FromCurrencyUnit", &CThostFtdcExchangeRateField::FromCurrencyUnit)
            .def_property(
                    "ToCurrencyID",
                    [](const CThostFtdcExchangeRateField &self) {
                        return py::str(self.ToCurrencyID);
                    },
                    [](CThostFtdcExchangeRateField &self, const std::string &value) {
                        std::strncpy(self.ToCurrencyID, value.c_str(), sizeof(CThostFtdcExchangeRateField::ToCurrencyID));
                    }
            )
            .def_readwrite("ExchangeRate", &CThostFtdcExchangeRateField::ExchangeRate)
            ;

    py::class_<CThostFtdcSettlementRefField>(structs, "CThostFtdcSettlementRefField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcSettlementRefField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcSettlementRefField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcSettlementRefField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcSettlementRefField::SettlementID)
            ;

    py::class_<CThostFtdcCurrentTimeField>(structs, "CThostFtdcCurrentTimeField")
            .def(py::init<>())
            .def_property(
                    "CurrDate",
                    [](const CThostFtdcCurrentTimeField &self) {
                        return py::str(self.CurrDate);
                    },
                    [](CThostFtdcCurrentTimeField &self, const std::string &value) {
                        std::strncpy(self.CurrDate, value.c_str(), sizeof(CThostFtdcCurrentTimeField::CurrDate));
                    }
            )
            .def_property(
                    "CurrTime",
                    [](const CThostFtdcCurrentTimeField &self) {
                        return py::str(self.CurrTime);
                    },
                    [](CThostFtdcCurrentTimeField &self, const std::string &value) {
                        std::strncpy(self.CurrTime, value.c_str(), sizeof(CThostFtdcCurrentTimeField::CurrTime));
                    }
            )
            .def_readwrite("CurrMillisec", &CThostFtdcCurrentTimeField::CurrMillisec)
            .def_property(
                    "ActionDay",
                    [](const CThostFtdcCurrentTimeField &self) {
                        return py::str(self.ActionDay);
                    },
                    [](CThostFtdcCurrentTimeField &self, const std::string &value) {
                        std::strncpy(self.ActionDay, value.c_str(), sizeof(CThostFtdcCurrentTimeField::ActionDay));
                    }
            )
            ;

    py::class_<CThostFtdcCommPhaseField>(structs, "CThostFtdcCommPhaseField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcCommPhaseField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcCommPhaseField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcCommPhaseField::TradingDay));
                    }
            )
            .def_readwrite("CommPhaseNo", &CThostFtdcCommPhaseField::CommPhaseNo)
            .def_property(
                    "SystemID",
                    [](const CThostFtdcCommPhaseField &self) {
                        return py::str(self.SystemID);
                    },
                    [](CThostFtdcCommPhaseField &self, const std::string &value) {
                        std::strncpy(self.SystemID, value.c_str(), sizeof(CThostFtdcCommPhaseField::SystemID));
                    }
            )
            ;

    py::class_<CThostFtdcLoginInfoField>(structs, "CThostFtdcLoginInfoField")
            .def(py::init<>())
            .def_readwrite("FrontID", &CThostFtdcLoginInfoField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcLoginInfoField::SessionID)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcLoginInfoField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcLoginInfoField::UserID));
                    }
            )
            .def_property(
                    "LoginDate",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.LoginDate);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.LoginDate, value.c_str(), sizeof(CThostFtdcLoginInfoField::LoginDate));
                    }
            )
            .def_property(
                    "LoginTime",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.LoginTime);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.LoginTime, value.c_str(), sizeof(CThostFtdcLoginInfoField::LoginTime));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcLoginInfoField::IPAddress));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcLoginInfoField::UserProductInfo));
                    }
            )
            .def_property(
                    "InterfaceProductInfo",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.InterfaceProductInfo);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.InterfaceProductInfo, value.c_str(), sizeof(CThostFtdcLoginInfoField::InterfaceProductInfo));
                    }
            )
            .def_property(
                    "ProtocolInfo",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.ProtocolInfo);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.ProtocolInfo, value.c_str(), sizeof(CThostFtdcLoginInfoField::ProtocolInfo));
                    }
            )
            .def_property(
                    "SystemName",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.SystemName);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.SystemName, value.c_str(), sizeof(CThostFtdcLoginInfoField::SystemName));
                    }
            )
            .def_property(
                    "PasswordDeprecated",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.PasswordDeprecated);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.PasswordDeprecated, value.c_str(), sizeof(CThostFtdcLoginInfoField::PasswordDeprecated));
                    }
            )
            .def_property(
                    "MaxOrderRef",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.MaxOrderRef);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.MaxOrderRef, value.c_str(), sizeof(CThostFtdcLoginInfoField::MaxOrderRef));
                    }
            )
            .def_property(
                    "SHFETime",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.SHFETime);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.SHFETime, value.c_str(), sizeof(CThostFtdcLoginInfoField::SHFETime));
                    }
            )
            .def_property(
                    "DCETime",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.DCETime);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.DCETime, value.c_str(), sizeof(CThostFtdcLoginInfoField::DCETime));
                    }
            )
            .def_property(
                    "CZCETime",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.CZCETime);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.CZCETime, value.c_str(), sizeof(CThostFtdcLoginInfoField::CZCETime));
                    }
            )
            .def_property(
                    "FFEXTime",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.FFEXTime);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.FFEXTime, value.c_str(), sizeof(CThostFtdcLoginInfoField::FFEXTime));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcLoginInfoField::MacAddress));
                    }
            )
            .def_property(
                    "OneTimePassword",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.OneTimePassword);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.OneTimePassword, value.c_str(), sizeof(CThostFtdcLoginInfoField::OneTimePassword));
                    }
            )
            .def_property(
                    "INETime",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.INETime);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.INETime, value.c_str(), sizeof(CThostFtdcLoginInfoField::INETime));
                    }
            )
            .def_readwrite("IsQryControl", &CThostFtdcLoginInfoField::IsQryControl)
            .def_property(
                    "LoginRemark",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.LoginRemark);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.LoginRemark, value.c_str(), sizeof(CThostFtdcLoginInfoField::LoginRemark));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcLoginInfoField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcLoginInfoField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcLoginInfoField::Password));
                    }
            )
            ;

    py::class_<CThostFtdcLogoutAllField>(structs, "CThostFtdcLogoutAllField")
            .def(py::init<>())
            .def_readwrite("FrontID", &CThostFtdcLogoutAllField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcLogoutAllField::SessionID)
            .def_property(
                    "SystemName",
                    [](const CThostFtdcLogoutAllField &self) {
                        return py::str(self.SystemName);
                    },
                    [](CThostFtdcLogoutAllField &self, const std::string &value) {
                        std::strncpy(self.SystemName, value.c_str(), sizeof(CThostFtdcLogoutAllField::SystemName));
                    }
            )
            ;

    py::class_<CThostFtdcFrontStatusField>(structs, "CThostFtdcFrontStatusField")
            .def(py::init<>())
            .def_readwrite("FrontID", &CThostFtdcFrontStatusField::FrontID)
            .def_property(
                    "LastReportDate",
                    [](const CThostFtdcFrontStatusField &self) {
                        return py::str(self.LastReportDate);
                    },
                    [](CThostFtdcFrontStatusField &self, const std::string &value) {
                        std::strncpy(self.LastReportDate, value.c_str(), sizeof(CThostFtdcFrontStatusField::LastReportDate));
                    }
            )
            .def_property(
                    "LastReportTime",
                    [](const CThostFtdcFrontStatusField &self) {
                        return py::str(self.LastReportTime);
                    },
                    [](CThostFtdcFrontStatusField &self, const std::string &value) {
                        std::strncpy(self.LastReportTime, value.c_str(), sizeof(CThostFtdcFrontStatusField::LastReportTime));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcFrontStatusField::IsActive)
            ;

    py::class_<CThostFtdcUserPasswordUpdateField>(structs, "CThostFtdcUserPasswordUpdateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcUserPasswordUpdateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcUserPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcUserPasswordUpdateField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcUserPasswordUpdateField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcUserPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcUserPasswordUpdateField::UserID));
                    }
            )
            .def_property(
                    "OldPassword",
                    [](const CThostFtdcUserPasswordUpdateField &self) {
                        return py::str(self.OldPassword);
                    },
                    [](CThostFtdcUserPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.OldPassword, value.c_str(), sizeof(CThostFtdcUserPasswordUpdateField::OldPassword));
                    }
            )
            .def_property(
                    "NewPassword",
                    [](const CThostFtdcUserPasswordUpdateField &self) {
                        return py::str(self.NewPassword);
                    },
                    [](CThostFtdcUserPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.NewPassword, value.c_str(), sizeof(CThostFtdcUserPasswordUpdateField::NewPassword));
                    }
            )
            ;

    py::class_<CThostFtdcInputOrderField>(structs, "CThostFtdcInputOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcInputOrderField::OrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputOrderField::UserID));
                    }
            )
            .def_readwrite("OrderPriceType", &CThostFtdcInputOrderField::OrderPriceType)
            .def_readwrite("Direction", &CThostFtdcInputOrderField::Direction)
            .def_property(
                    "CombOffsetFlag",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.CombOffsetFlag);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.CombOffsetFlag, value.c_str(), sizeof(CThostFtdcInputOrderField::CombOffsetFlag));
                    }
            )
            .def_property(
                    "CombHedgeFlag",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.CombHedgeFlag);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.CombHedgeFlag, value.c_str(), sizeof(CThostFtdcInputOrderField::CombHedgeFlag));
                    }
            )
            .def_readwrite("LimitPrice", &CThostFtdcInputOrderField::LimitPrice)
            .def_readwrite("VolumeTotalOriginal", &CThostFtdcInputOrderField::VolumeTotalOriginal)
            .def_readwrite("TimeCondition", &CThostFtdcInputOrderField::TimeCondition)
            .def_property(
                    "GTDDate",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.GTDDate);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.GTDDate, value.c_str(), sizeof(CThostFtdcInputOrderField::GTDDate));
                    }
            )
            .def_readwrite("VolumeCondition", &CThostFtdcInputOrderField::VolumeCondition)
            .def_readwrite("MinVolume", &CThostFtdcInputOrderField::MinVolume)
            .def_readwrite("ContingentCondition", &CThostFtdcInputOrderField::ContingentCondition)
            .def_readwrite("StopPrice", &CThostFtdcInputOrderField::StopPrice)
            .def_readwrite("ForceCloseReason", &CThostFtdcInputOrderField::ForceCloseReason)
            .def_readwrite("IsAutoSuspend", &CThostFtdcInputOrderField::IsAutoSuspend)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcInputOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcInputOrderField::RequestID)
            .def_readwrite("UserForceClose", &CThostFtdcInputOrderField::UserForceClose)
            .def_readwrite("IsSwapOrder", &CThostFtdcInputOrderField::IsSwapOrder)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcInputOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcInputOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcInputOrderField::ClientID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcOrderField>(structs, "CThostFtdcOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcOrderField::OrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcOrderField::UserID));
                    }
            )
            .def_readwrite("OrderPriceType", &CThostFtdcOrderField::OrderPriceType)
            .def_readwrite("Direction", &CThostFtdcOrderField::Direction)
            .def_property(
                    "CombOffsetFlag",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.CombOffsetFlag);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.CombOffsetFlag, value.c_str(), sizeof(CThostFtdcOrderField::CombOffsetFlag));
                    }
            )
            .def_property(
                    "CombHedgeFlag",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.CombHedgeFlag);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.CombHedgeFlag, value.c_str(), sizeof(CThostFtdcOrderField::CombHedgeFlag));
                    }
            )
            .def_readwrite("LimitPrice", &CThostFtdcOrderField::LimitPrice)
            .def_readwrite("VolumeTotalOriginal", &CThostFtdcOrderField::VolumeTotalOriginal)
            .def_readwrite("TimeCondition", &CThostFtdcOrderField::TimeCondition)
            .def_property(
                    "GTDDate",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.GTDDate);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.GTDDate, value.c_str(), sizeof(CThostFtdcOrderField::GTDDate));
                    }
            )
            .def_readwrite("VolumeCondition", &CThostFtdcOrderField::VolumeCondition)
            .def_readwrite("MinVolume", &CThostFtdcOrderField::MinVolume)
            .def_readwrite("ContingentCondition", &CThostFtdcOrderField::ContingentCondition)
            .def_readwrite("StopPrice", &CThostFtdcOrderField::StopPrice)
            .def_readwrite("ForceCloseReason", &CThostFtdcOrderField::ForceCloseReason)
            .def_readwrite("IsAutoSuspend", &CThostFtdcOrderField::IsAutoSuspend)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcOrderField::RequestID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcOrderField::OrderLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcOrderField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcOrderField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcOrderField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcOrderField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcOrderField::InstallID)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcOrderField::OrderSubmitStatus)
            .def_readwrite("NotifySequence", &CThostFtdcOrderField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcOrderField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcOrderField::SettlementID)
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcOrderField::OrderSysID));
                    }
            )
            .def_readwrite("OrderSource", &CThostFtdcOrderField::OrderSource)
            .def_readwrite("OrderStatus", &CThostFtdcOrderField::OrderStatus)
            .def_readwrite("OrderType", &CThostFtdcOrderField::OrderType)
            .def_readwrite("VolumeTraded", &CThostFtdcOrderField::VolumeTraded)
            .def_readwrite("VolumeTotal", &CThostFtdcOrderField::VolumeTotal)
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcOrderField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcOrderField::InsertTime));
                    }
            )
            .def_property(
                    "ActiveTime",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ActiveTime);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveTime, value.c_str(), sizeof(CThostFtdcOrderField::ActiveTime));
                    }
            )
            .def_property(
                    "SuspendTime",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.SuspendTime);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.SuspendTime, value.c_str(), sizeof(CThostFtdcOrderField::SuspendTime));
                    }
            )
            .def_property(
                    "UpdateTime",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.UpdateTime);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.UpdateTime, value.c_str(), sizeof(CThostFtdcOrderField::UpdateTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcOrderField::CancelTime));
                    }
            )
            .def_property(
                    "ActiveTraderID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ActiveTraderID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveTraderID, value.c_str(), sizeof(CThostFtdcOrderField::ActiveTraderID));
                    }
            )
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcOrderField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcOrderField::SequenceNo)
            .def_readwrite("FrontID", &CThostFtdcOrderField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcOrderField::SessionID)
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcOrderField::UserProductInfo));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcOrderField::StatusMsg));
                    }
            )
            .def_readwrite("UserForceClose", &CThostFtdcOrderField::UserForceClose)
            .def_property(
                    "ActiveUserID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.ActiveUserID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveUserID, value.c_str(), sizeof(CThostFtdcOrderField::ActiveUserID));
                    }
            )
            .def_readwrite("BrokerOrderSeq", &CThostFtdcOrderField::BrokerOrderSeq)
            .def_property(
                    "RelativeOrderSysID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.RelativeOrderSysID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.RelativeOrderSysID, value.c_str(), sizeof(CThostFtdcOrderField::RelativeOrderSysID));
                    }
            )
            .def_readwrite("ZCETotalTradedVolume", &CThostFtdcOrderField::ZCETotalTradedVolume)
            .def_readwrite("IsSwapOrder", &CThostFtdcOrderField::IsSwapOrder)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcOrderField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeOrderField>(structs, "CThostFtdcExchangeOrderField")
            .def(py::init<>())
            .def_readwrite("OrderPriceType", &CThostFtdcExchangeOrderField::OrderPriceType)
            .def_readwrite("Direction", &CThostFtdcExchangeOrderField::Direction)
            .def_property(
                    "CombOffsetFlag",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.CombOffsetFlag);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.CombOffsetFlag, value.c_str(), sizeof(CThostFtdcExchangeOrderField::CombOffsetFlag));
                    }
            )
            .def_property(
                    "CombHedgeFlag",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.CombHedgeFlag);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.CombHedgeFlag, value.c_str(), sizeof(CThostFtdcExchangeOrderField::CombHedgeFlag));
                    }
            )
            .def_readwrite("LimitPrice", &CThostFtdcExchangeOrderField::LimitPrice)
            .def_readwrite("VolumeTotalOriginal", &CThostFtdcExchangeOrderField::VolumeTotalOriginal)
            .def_readwrite("TimeCondition", &CThostFtdcExchangeOrderField::TimeCondition)
            .def_property(
                    "GTDDate",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.GTDDate);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.GTDDate, value.c_str(), sizeof(CThostFtdcExchangeOrderField::GTDDate));
                    }
            )
            .def_readwrite("VolumeCondition", &CThostFtdcExchangeOrderField::VolumeCondition)
            .def_readwrite("MinVolume", &CThostFtdcExchangeOrderField::MinVolume)
            .def_readwrite("ContingentCondition", &CThostFtdcExchangeOrderField::ContingentCondition)
            .def_readwrite("StopPrice", &CThostFtdcExchangeOrderField::StopPrice)
            .def_readwrite("ForceCloseReason", &CThostFtdcExchangeOrderField::ForceCloseReason)
            .def_readwrite("IsAutoSuspend", &CThostFtdcExchangeOrderField::IsAutoSuspend)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcExchangeOrderField::RequestID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::OrderLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeOrderField::InstallID)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeOrderField::OrderSubmitStatus)
            .def_readwrite("NotifySequence", &CThostFtdcExchangeOrderField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcExchangeOrderField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcExchangeOrderField::SettlementID)
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::OrderSysID));
                    }
            )
            .def_readwrite("OrderSource", &CThostFtdcExchangeOrderField::OrderSource)
            .def_readwrite("OrderStatus", &CThostFtdcExchangeOrderField::OrderStatus)
            .def_readwrite("OrderType", &CThostFtdcExchangeOrderField::OrderType)
            .def_readwrite("VolumeTraded", &CThostFtdcExchangeOrderField::VolumeTraded)
            .def_readwrite("VolumeTotal", &CThostFtdcExchangeOrderField::VolumeTotal)
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcExchangeOrderField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcExchangeOrderField::InsertTime));
                    }
            )
            .def_property(
                    "ActiveTime",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.ActiveTime);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveTime, value.c_str(), sizeof(CThostFtdcExchangeOrderField::ActiveTime));
                    }
            )
            .def_property(
                    "SuspendTime",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.SuspendTime);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.SuspendTime, value.c_str(), sizeof(CThostFtdcExchangeOrderField::SuspendTime));
                    }
            )
            .def_property(
                    "UpdateTime",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.UpdateTime);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.UpdateTime, value.c_str(), sizeof(CThostFtdcExchangeOrderField::UpdateTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcExchangeOrderField::CancelTime));
                    }
            )
            .def_property(
                    "ActiveTraderID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.ActiveTraderID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveTraderID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::ActiveTraderID));
                    }
            )
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcExchangeOrderField::SequenceNo)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeOrderField::BranchID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeOrderInsertErrorField>(structs, "CThostFtdcExchangeOrderInsertErrorField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeOrderInsertErrorField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeOrderInsertErrorField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeOrderInsertErrorField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeOrderInsertErrorField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeOrderInsertErrorField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeOrderInsertErrorField::ParticipantID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeOrderInsertErrorField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeOrderInsertErrorField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeOrderInsertErrorField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeOrderInsertErrorField::InstallID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcExchangeOrderInsertErrorField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcExchangeOrderInsertErrorField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcExchangeOrderInsertErrorField::OrderLocalID));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcExchangeOrderInsertErrorField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcExchangeOrderInsertErrorField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcExchangeOrderInsertErrorField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcExchangeOrderInsertErrorField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcInputOrderActionField>(structs, "CThostFtdcInputOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("OrderActionRef", &CThostFtdcInputOrderActionField::OrderActionRef)
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcInputOrderActionField::OrderRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcInputOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcInputOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcInputOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcInputOrderActionField::OrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcInputOrderActionField::ActionFlag)
            .def_readwrite("LimitPrice", &CThostFtdcInputOrderActionField::LimitPrice)
            .def_readwrite("VolumeChange", &CThostFtdcInputOrderActionField::VolumeChange)
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputOrderActionField::UserID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcOrderActionField>(structs, "CThostFtdcOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("OrderActionRef", &CThostFtdcOrderActionField::OrderActionRef)
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcOrderActionField::OrderRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcOrderActionField::OrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcOrderActionField::ActionFlag)
            .def_readwrite("LimitPrice", &CThostFtdcOrderActionField::LimitPrice)
            .def_readwrite("VolumeChange", &CThostFtdcOrderActionField::VolumeChange)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcOrderActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcOrderActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcOrderActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcOrderActionField::InstallID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcOrderActionField::OrderLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcOrderActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcOrderActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcOrderActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcOrderActionField::UserID));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcOrderActionField::StatusMsg));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcOrderActionField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeOrderActionField>(structs, "CThostFtdcExchangeOrderActionField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::OrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcExchangeOrderActionField::ActionFlag)
            .def_readwrite("LimitPrice", &CThostFtdcExchangeOrderActionField::LimitPrice)
            .def_readwrite("VolumeChange", &CThostFtdcExchangeOrderActionField::VolumeChange)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeOrderActionField::InstallID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::OrderLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcExchangeOrderActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::UserID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::BranchID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeOrderActionErrorField>(structs, "CThostFtdcExchangeOrderActionErrorField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeOrderActionErrorField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeOrderActionErrorField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionErrorField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcExchangeOrderActionErrorField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcExchangeOrderActionErrorField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionErrorField::OrderSysID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeOrderActionErrorField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeOrderActionErrorField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionErrorField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeOrderActionErrorField::InstallID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcExchangeOrderActionErrorField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcExchangeOrderActionErrorField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionErrorField::OrderLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExchangeOrderActionErrorField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExchangeOrderActionErrorField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExchangeOrderActionErrorField::ActionLocalID));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcExchangeOrderActionErrorField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcExchangeOrderActionErrorField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcExchangeOrderActionErrorField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcExchangeOrderActionErrorField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeTradeField>(structs, "CThostFtdcExchangeTradeField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::ExchangeID));
                    }
            )
            .def_property(
                    "TradeID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.TradeID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::TradeID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcExchangeTradeField::Direction)
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::OrderSysID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::ClientID));
                    }
            )
            .def_readwrite("TradingRole", &CThostFtdcExchangeTradeField::TradingRole)
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::ExchangeInstID));
                    }
            )
            .def_readwrite("OffsetFlag", &CThostFtdcExchangeTradeField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcExchangeTradeField::HedgeFlag)
            .def_readwrite("Price", &CThostFtdcExchangeTradeField::Price)
            .def_readwrite("Volume", &CThostFtdcExchangeTradeField::Volume)
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcExchangeTradeField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcExchangeTradeField::TradeTime));
                    }
            )
            .def_readwrite("TradeType", &CThostFtdcExchangeTradeField::TradeType)
            .def_readwrite("PriceSource", &CThostFtdcExchangeTradeField::PriceSource)
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::TraderID));
                    }
            )
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::OrderLocalID));
                    }
            )
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcExchangeTradeField::ClearingPartID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeTradeField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeTradeField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeTradeField::BusinessUnit));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcExchangeTradeField::SequenceNo)
            .def_readwrite("TradeSource", &CThostFtdcExchangeTradeField::TradeSource)
            ;

    py::class_<CThostFtdcTradeField>(structs, "CThostFtdcTradeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradeField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcTradeField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcTradeField::InstrumentID));
                    }
            )
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcTradeField::OrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcTradeField::UserID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcTradeField::ExchangeID));
                    }
            )
            .def_property(
                    "TradeID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.TradeID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeID, value.c_str(), sizeof(CThostFtdcTradeField::TradeID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcTradeField::Direction)
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcTradeField::OrderSysID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcTradeField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcTradeField::ClientID));
                    }
            )
            .def_readwrite("TradingRole", &CThostFtdcTradeField::TradingRole)
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcTradeField::ExchangeInstID));
                    }
            )
            .def_readwrite("OffsetFlag", &CThostFtdcTradeField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcTradeField::HedgeFlag)
            .def_readwrite("Price", &CThostFtdcTradeField::Price)
            .def_readwrite("Volume", &CThostFtdcTradeField::Volume)
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcTradeField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcTradeField::TradeTime));
                    }
            )
            .def_readwrite("TradeType", &CThostFtdcTradeField::TradeType)
            .def_readwrite("PriceSource", &CThostFtdcTradeField::PriceSource)
            .def_property(
                    "TraderID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcTradeField::TraderID));
                    }
            )
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcTradeField::OrderLocalID));
                    }
            )
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcTradeField::ClearingPartID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcTradeField::BusinessUnit));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcTradeField::SequenceNo)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcTradeField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcTradeField::SettlementID)
            .def_readwrite("BrokerOrderSeq", &CThostFtdcTradeField::BrokerOrderSeq)
            .def_readwrite("TradeSource", &CThostFtdcTradeField::TradeSource)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcTradeField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcTradeField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcTradeField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcUserSessionField>(structs, "CThostFtdcUserSessionField")
            .def(py::init<>())
            .def_readwrite("FrontID", &CThostFtdcUserSessionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcUserSessionField::SessionID)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcUserSessionField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcUserSessionField::UserID));
                    }
            )
            .def_property(
                    "LoginDate",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.LoginDate);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.LoginDate, value.c_str(), sizeof(CThostFtdcUserSessionField::LoginDate));
                    }
            )
            .def_property(
                    "LoginTime",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.LoginTime);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.LoginTime, value.c_str(), sizeof(CThostFtdcUserSessionField::LoginTime));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcUserSessionField::IPAddress));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcUserSessionField::UserProductInfo));
                    }
            )
            .def_property(
                    "InterfaceProductInfo",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.InterfaceProductInfo);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.InterfaceProductInfo, value.c_str(), sizeof(CThostFtdcUserSessionField::InterfaceProductInfo));
                    }
            )
            .def_property(
                    "ProtocolInfo",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.ProtocolInfo);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.ProtocolInfo, value.c_str(), sizeof(CThostFtdcUserSessionField::ProtocolInfo));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcUserSessionField::MacAddress));
                    }
            )
            .def_property(
                    "LoginRemark",
                    [](const CThostFtdcUserSessionField &self) {
                        return py::str(self.LoginRemark);
                    },
                    [](CThostFtdcUserSessionField &self, const std::string &value) {
                        std::strncpy(self.LoginRemark, value.c_str(), sizeof(CThostFtdcUserSessionField::LoginRemark));
                    }
            )
            ;

    py::class_<CThostFtdcQueryMaxOrderVolumeField>(structs, "CThostFtdcQueryMaxOrderVolumeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQueryMaxOrderVolumeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQueryMaxOrderVolumeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQueryMaxOrderVolumeField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeField::InstrumentID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcQueryMaxOrderVolumeField::Direction)
            .def_readwrite("OffsetFlag", &CThostFtdcQueryMaxOrderVolumeField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcQueryMaxOrderVolumeField::HedgeFlag)
            .def_readwrite("MaxVolume", &CThostFtdcQueryMaxOrderVolumeField::MaxVolume)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQueryMaxOrderVolumeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQueryMaxOrderVolumeField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcSettlementInfoConfirmField>(structs, "CThostFtdcSettlementInfoConfirmField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSettlementInfoConfirmField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSettlementInfoConfirmField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSettlementInfoConfirmField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSettlementInfoConfirmField::InvestorID));
                    }
            )
            .def_property(
                    "ConfirmDate",
                    [](const CThostFtdcSettlementInfoConfirmField &self) {
                        return py::str(self.ConfirmDate);
                    },
                    [](CThostFtdcSettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.ConfirmDate, value.c_str(), sizeof(CThostFtdcSettlementInfoConfirmField::ConfirmDate));
                    }
            )
            .def_property(
                    "ConfirmTime",
                    [](const CThostFtdcSettlementInfoConfirmField &self) {
                        return py::str(self.ConfirmTime);
                    },
                    [](CThostFtdcSettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.ConfirmTime, value.c_str(), sizeof(CThostFtdcSettlementInfoConfirmField::ConfirmTime));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcSettlementInfoConfirmField::SettlementID)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcSettlementInfoConfirmField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcSettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcSettlementInfoConfirmField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcSettlementInfoConfirmField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcSettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcSettlementInfoConfirmField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcSyncDepositField>(structs, "CThostFtdcSyncDepositField")
            .def(py::init<>())
            .def_property(
                    "DepositSeqNo",
                    [](const CThostFtdcSyncDepositField &self) {
                        return py::str(self.DepositSeqNo);
                    },
                    [](CThostFtdcSyncDepositField &self, const std::string &value) {
                        std::strncpy(self.DepositSeqNo, value.c_str(), sizeof(CThostFtdcSyncDepositField::DepositSeqNo));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncDepositField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncDepositField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncDepositField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncDepositField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncDepositField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncDepositField::InvestorID));
                    }
            )
            .def_readwrite("Deposit", &CThostFtdcSyncDepositField::Deposit)
            .def_readwrite("IsForce", &CThostFtdcSyncDepositField::IsForce)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcSyncDepositField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcSyncDepositField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcSyncDepositField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcSyncFundMortgageField>(structs, "CThostFtdcSyncFundMortgageField")
            .def(py::init<>())
            .def_property(
                    "MortgageSeqNo",
                    [](const CThostFtdcSyncFundMortgageField &self) {
                        return py::str(self.MortgageSeqNo);
                    },
                    [](CThostFtdcSyncFundMortgageField &self, const std::string &value) {
                        std::strncpy(self.MortgageSeqNo, value.c_str(), sizeof(CThostFtdcSyncFundMortgageField::MortgageSeqNo));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncFundMortgageField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncFundMortgageField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncFundMortgageField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncFundMortgageField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncFundMortgageField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncFundMortgageField::InvestorID));
                    }
            )
            .def_property(
                    "FromCurrencyID",
                    [](const CThostFtdcSyncFundMortgageField &self) {
                        return py::str(self.FromCurrencyID);
                    },
                    [](CThostFtdcSyncFundMortgageField &self, const std::string &value) {
                        std::strncpy(self.FromCurrencyID, value.c_str(), sizeof(CThostFtdcSyncFundMortgageField::FromCurrencyID));
                    }
            )
            .def_readwrite("MortgageAmount", &CThostFtdcSyncFundMortgageField::MortgageAmount)
            .def_property(
                    "ToCurrencyID",
                    [](const CThostFtdcSyncFundMortgageField &self) {
                        return py::str(self.ToCurrencyID);
                    },
                    [](CThostFtdcSyncFundMortgageField &self, const std::string &value) {
                        std::strncpy(self.ToCurrencyID, value.c_str(), sizeof(CThostFtdcSyncFundMortgageField::ToCurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcBrokerSyncField>(structs, "CThostFtdcBrokerSyncField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerSyncField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerSyncField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerSyncField::BrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcSyncingInvestorField>(structs, "CThostFtdcSyncingInvestorField")
            .def(py::init<>())
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::InvestorID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorGroupID",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.InvestorGroupID);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.InvestorGroupID, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::InvestorGroupID));
                    }
            )
            .def_property(
                    "InvestorName",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.InvestorName);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.InvestorName, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::InvestorName));
                    }
            )
            .def_readwrite("IdentifiedCardType", &CThostFtdcSyncingInvestorField::IdentifiedCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcSyncingInvestorField::IsActive)
            .def_property(
                    "Telephone",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::Telephone));
                    }
            )
            .def_property(
                    "Address",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::Address));
                    }
            )
            .def_property(
                    "OpenDate",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.OpenDate);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.OpenDate, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::OpenDate));
                    }
            )
            .def_property(
                    "Mobile",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.Mobile);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.Mobile, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::Mobile));
                    }
            )
            .def_property(
                    "CommModelID",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.CommModelID);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.CommModelID, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::CommModelID));
                    }
            )
            .def_property(
                    "MarginModelID",
                    [](const CThostFtdcSyncingInvestorField &self) {
                        return py::str(self.MarginModelID);
                    },
                    [](CThostFtdcSyncingInvestorField &self, const std::string &value) {
                        std::strncpy(self.MarginModelID, value.c_str(), sizeof(CThostFtdcSyncingInvestorField::MarginModelID));
                    }
            )
            ;

    py::class_<CThostFtdcSyncingTradingCodeField>(structs, "CThostFtdcSyncingTradingCodeField")
            .def(py::init<>())
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncingTradingCodeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncingTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncingTradingCodeField::InvestorID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingTradingCodeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingTradingCodeField::BrokerID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcSyncingTradingCodeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcSyncingTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcSyncingTradingCodeField::ExchangeID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcSyncingTradingCodeField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcSyncingTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcSyncingTradingCodeField::ClientID));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcSyncingTradingCodeField::IsActive)
            .def_readwrite("ClientIDType", &CThostFtdcSyncingTradingCodeField::ClientIDType)
            ;

    py::class_<CThostFtdcSyncingInvestorGroupField>(structs, "CThostFtdcSyncingInvestorGroupField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingInvestorGroupField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingInvestorGroupField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingInvestorGroupField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorGroupID",
                    [](const CThostFtdcSyncingInvestorGroupField &self) {
                        return py::str(self.InvestorGroupID);
                    },
                    [](CThostFtdcSyncingInvestorGroupField &self, const std::string &value) {
                        std::strncpy(self.InvestorGroupID, value.c_str(), sizeof(CThostFtdcSyncingInvestorGroupField::InvestorGroupID));
                    }
            )
            .def_property(
                    "InvestorGroupName",
                    [](const CThostFtdcSyncingInvestorGroupField &self) {
                        return py::str(self.InvestorGroupName);
                    },
                    [](CThostFtdcSyncingInvestorGroupField &self, const std::string &value) {
                        std::strncpy(self.InvestorGroupName, value.c_str(), sizeof(CThostFtdcSyncingInvestorGroupField::InvestorGroupName));
                    }
            )
            ;

    py::class_<CThostFtdcSyncingTradingAccountField>(structs, "CThostFtdcSyncingTradingAccountField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingTradingAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingTradingAccountField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcSyncingTradingAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcSyncingTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcSyncingTradingAccountField::AccountID));
                    }
            )
            .def_readwrite("PreMortgage", &CThostFtdcSyncingTradingAccountField::PreMortgage)
            .def_readwrite("PreCredit", &CThostFtdcSyncingTradingAccountField::PreCredit)
            .def_readwrite("PreDeposit", &CThostFtdcSyncingTradingAccountField::PreDeposit)
            .def_readwrite("PreBalance", &CThostFtdcSyncingTradingAccountField::PreBalance)
            .def_readwrite("PreMargin", &CThostFtdcSyncingTradingAccountField::PreMargin)
            .def_readwrite("InterestBase", &CThostFtdcSyncingTradingAccountField::InterestBase)
            .def_readwrite("Interest", &CThostFtdcSyncingTradingAccountField::Interest)
            .def_readwrite("Deposit", &CThostFtdcSyncingTradingAccountField::Deposit)
            .def_readwrite("Withdraw", &CThostFtdcSyncingTradingAccountField::Withdraw)
            .def_readwrite("FrozenMargin", &CThostFtdcSyncingTradingAccountField::FrozenMargin)
            .def_readwrite("FrozenCash", &CThostFtdcSyncingTradingAccountField::FrozenCash)
            .def_readwrite("FrozenCommission", &CThostFtdcSyncingTradingAccountField::FrozenCommission)
            .def_readwrite("CurrMargin", &CThostFtdcSyncingTradingAccountField::CurrMargin)
            .def_readwrite("CashIn", &CThostFtdcSyncingTradingAccountField::CashIn)
            .def_readwrite("Commission", &CThostFtdcSyncingTradingAccountField::Commission)
            .def_readwrite("CloseProfit", &CThostFtdcSyncingTradingAccountField::CloseProfit)
            .def_readwrite("PositionProfit", &CThostFtdcSyncingTradingAccountField::PositionProfit)
            .def_readwrite("Balance", &CThostFtdcSyncingTradingAccountField::Balance)
            .def_readwrite("Available", &CThostFtdcSyncingTradingAccountField::Available)
            .def_readwrite("WithdrawQuota", &CThostFtdcSyncingTradingAccountField::WithdrawQuota)
            .def_readwrite("Reserve", &CThostFtdcSyncingTradingAccountField::Reserve)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcSyncingTradingAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcSyncingTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcSyncingTradingAccountField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcSyncingTradingAccountField::SettlementID)
            .def_readwrite("Credit", &CThostFtdcSyncingTradingAccountField::Credit)
            .def_readwrite("Mortgage", &CThostFtdcSyncingTradingAccountField::Mortgage)
            .def_readwrite("ExchangeMargin", &CThostFtdcSyncingTradingAccountField::ExchangeMargin)
            .def_readwrite("DeliveryMargin", &CThostFtdcSyncingTradingAccountField::DeliveryMargin)
            .def_readwrite("ExchangeDeliveryMargin", &CThostFtdcSyncingTradingAccountField::ExchangeDeliveryMargin)
            .def_readwrite("ReserveBalance", &CThostFtdcSyncingTradingAccountField::ReserveBalance)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcSyncingTradingAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcSyncingTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcSyncingTradingAccountField::CurrencyID));
                    }
            )
            .def_readwrite("PreFundMortgageIn", &CThostFtdcSyncingTradingAccountField::PreFundMortgageIn)
            .def_readwrite("PreFundMortgageOut", &CThostFtdcSyncingTradingAccountField::PreFundMortgageOut)
            .def_readwrite("FundMortgageIn", &CThostFtdcSyncingTradingAccountField::FundMortgageIn)
            .def_readwrite("FundMortgageOut", &CThostFtdcSyncingTradingAccountField::FundMortgageOut)
            .def_readwrite("FundMortgageAvailable", &CThostFtdcSyncingTradingAccountField::FundMortgageAvailable)
            .def_readwrite("MortgageableFund", &CThostFtdcSyncingTradingAccountField::MortgageableFund)
            .def_readwrite("SpecProductMargin", &CThostFtdcSyncingTradingAccountField::SpecProductMargin)
            .def_readwrite("SpecProductFrozenMargin", &CThostFtdcSyncingTradingAccountField::SpecProductFrozenMargin)
            .def_readwrite("SpecProductCommission", &CThostFtdcSyncingTradingAccountField::SpecProductCommission)
            .def_readwrite("SpecProductFrozenCommission", &CThostFtdcSyncingTradingAccountField::SpecProductFrozenCommission)
            .def_readwrite("SpecProductPositionProfit", &CThostFtdcSyncingTradingAccountField::SpecProductPositionProfit)
            .def_readwrite("SpecProductCloseProfit", &CThostFtdcSyncingTradingAccountField::SpecProductCloseProfit)
            .def_readwrite("SpecProductPositionProfitByAlg", &CThostFtdcSyncingTradingAccountField::SpecProductPositionProfitByAlg)
            .def_readwrite("SpecProductExchangeMargin", &CThostFtdcSyncingTradingAccountField::SpecProductExchangeMargin)
            .def_readwrite("FrozenSwap", &CThostFtdcSyncingTradingAccountField::FrozenSwap)
            .def_readwrite("RemainSwap", &CThostFtdcSyncingTradingAccountField::RemainSwap)
            ;

    py::class_<CThostFtdcSyncingInvestorPositionField>(structs, "CThostFtdcSyncingInvestorPositionField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcSyncingInvestorPositionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcSyncingInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcSyncingInvestorPositionField::InstrumentID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingInvestorPositionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingInvestorPositionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncingInvestorPositionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncingInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncingInvestorPositionField::InvestorID));
                    }
            )
            .def_readwrite("PosiDirection", &CThostFtdcSyncingInvestorPositionField::PosiDirection)
            .def_readwrite("HedgeFlag", &CThostFtdcSyncingInvestorPositionField::HedgeFlag)
            .def_readwrite("PositionDate", &CThostFtdcSyncingInvestorPositionField::PositionDate)
            .def_readwrite("YdPosition", &CThostFtdcSyncingInvestorPositionField::YdPosition)
            .def_readwrite("Position", &CThostFtdcSyncingInvestorPositionField::Position)
            .def_readwrite("LongFrozen", &CThostFtdcSyncingInvestorPositionField::LongFrozen)
            .def_readwrite("ShortFrozen", &CThostFtdcSyncingInvestorPositionField::ShortFrozen)
            .def_readwrite("LongFrozenAmount", &CThostFtdcSyncingInvestorPositionField::LongFrozenAmount)
            .def_readwrite("ShortFrozenAmount", &CThostFtdcSyncingInvestorPositionField::ShortFrozenAmount)
            .def_readwrite("OpenVolume", &CThostFtdcSyncingInvestorPositionField::OpenVolume)
            .def_readwrite("CloseVolume", &CThostFtdcSyncingInvestorPositionField::CloseVolume)
            .def_readwrite("OpenAmount", &CThostFtdcSyncingInvestorPositionField::OpenAmount)
            .def_readwrite("CloseAmount", &CThostFtdcSyncingInvestorPositionField::CloseAmount)
            .def_readwrite("PositionCost", &CThostFtdcSyncingInvestorPositionField::PositionCost)
            .def_readwrite("PreMargin", &CThostFtdcSyncingInvestorPositionField::PreMargin)
            .def_readwrite("UseMargin", &CThostFtdcSyncingInvestorPositionField::UseMargin)
            .def_readwrite("FrozenMargin", &CThostFtdcSyncingInvestorPositionField::FrozenMargin)
            .def_readwrite("FrozenCash", &CThostFtdcSyncingInvestorPositionField::FrozenCash)
            .def_readwrite("FrozenCommission", &CThostFtdcSyncingInvestorPositionField::FrozenCommission)
            .def_readwrite("CashIn", &CThostFtdcSyncingInvestorPositionField::CashIn)
            .def_readwrite("Commission", &CThostFtdcSyncingInvestorPositionField::Commission)
            .def_readwrite("CloseProfit", &CThostFtdcSyncingInvestorPositionField::CloseProfit)
            .def_readwrite("PositionProfit", &CThostFtdcSyncingInvestorPositionField::PositionProfit)
            .def_readwrite("PreSettlementPrice", &CThostFtdcSyncingInvestorPositionField::PreSettlementPrice)
            .def_readwrite("SettlementPrice", &CThostFtdcSyncingInvestorPositionField::SettlementPrice)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcSyncingInvestorPositionField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcSyncingInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcSyncingInvestorPositionField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcSyncingInvestorPositionField::SettlementID)
            .def_readwrite("OpenCost", &CThostFtdcSyncingInvestorPositionField::OpenCost)
            .def_readwrite("ExchangeMargin", &CThostFtdcSyncingInvestorPositionField::ExchangeMargin)
            .def_readwrite("CombPosition", &CThostFtdcSyncingInvestorPositionField::CombPosition)
            .def_readwrite("CombLongFrozen", &CThostFtdcSyncingInvestorPositionField::CombLongFrozen)
            .def_readwrite("CombShortFrozen", &CThostFtdcSyncingInvestorPositionField::CombShortFrozen)
            .def_readwrite("CloseProfitByDate", &CThostFtdcSyncingInvestorPositionField::CloseProfitByDate)
            .def_readwrite("CloseProfitByTrade", &CThostFtdcSyncingInvestorPositionField::CloseProfitByTrade)
            .def_readwrite("TodayPosition", &CThostFtdcSyncingInvestorPositionField::TodayPosition)
            .def_readwrite("MarginRateByMoney", &CThostFtdcSyncingInvestorPositionField::MarginRateByMoney)
            .def_readwrite("MarginRateByVolume", &CThostFtdcSyncingInvestorPositionField::MarginRateByVolume)
            .def_readwrite("StrikeFrozen", &CThostFtdcSyncingInvestorPositionField::StrikeFrozen)
            .def_readwrite("StrikeFrozenAmount", &CThostFtdcSyncingInvestorPositionField::StrikeFrozenAmount)
            .def_readwrite("AbandonFrozen", &CThostFtdcSyncingInvestorPositionField::AbandonFrozen)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcSyncingInvestorPositionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcSyncingInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcSyncingInvestorPositionField::ExchangeID));
                    }
            )
            .def_readwrite("YdStrikeFrozen", &CThostFtdcSyncingInvestorPositionField::YdStrikeFrozen)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcSyncingInvestorPositionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcSyncingInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcSyncingInvestorPositionField::InvestUnitID));
                    }
            )
            .def_readwrite("PositionCostOffset", &CThostFtdcSyncingInvestorPositionField::PositionCostOffset)
            ;

    py::class_<CThostFtdcSyncingInstrumentMarginRateField>(structs, "CThostFtdcSyncingInstrumentMarginRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcSyncingInstrumentMarginRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcSyncingInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentMarginRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcSyncingInstrumentMarginRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingInstrumentMarginRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentMarginRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncingInstrumentMarginRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncingInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentMarginRateField::InvestorID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcSyncingInstrumentMarginRateField::HedgeFlag)
            .def_readwrite("LongMarginRatioByMoney", &CThostFtdcSyncingInstrumentMarginRateField::LongMarginRatioByMoney)
            .def_readwrite("LongMarginRatioByVolume", &CThostFtdcSyncingInstrumentMarginRateField::LongMarginRatioByVolume)
            .def_readwrite("ShortMarginRatioByMoney", &CThostFtdcSyncingInstrumentMarginRateField::ShortMarginRatioByMoney)
            .def_readwrite("ShortMarginRatioByVolume", &CThostFtdcSyncingInstrumentMarginRateField::ShortMarginRatioByVolume)
            .def_readwrite("IsRelative", &CThostFtdcSyncingInstrumentMarginRateField::IsRelative)
            ;

    py::class_<CThostFtdcSyncingInstrumentCommissionRateField>(structs, "CThostFtdcSyncingInstrumentCommissionRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcSyncingInstrumentCommissionRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcSyncingInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentCommissionRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcSyncingInstrumentCommissionRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingInstrumentCommissionRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentCommissionRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncingInstrumentCommissionRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncingInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentCommissionRateField::InvestorID));
                    }
            )
            .def_readwrite("OpenRatioByMoney", &CThostFtdcSyncingInstrumentCommissionRateField::OpenRatioByMoney)
            .def_readwrite("OpenRatioByVolume", &CThostFtdcSyncingInstrumentCommissionRateField::OpenRatioByVolume)
            .def_readwrite("CloseRatioByMoney", &CThostFtdcSyncingInstrumentCommissionRateField::CloseRatioByMoney)
            .def_readwrite("CloseRatioByVolume", &CThostFtdcSyncingInstrumentCommissionRateField::CloseRatioByVolume)
            .def_readwrite("CloseTodayRatioByMoney", &CThostFtdcSyncingInstrumentCommissionRateField::CloseTodayRatioByMoney)
            .def_readwrite("CloseTodayRatioByVolume", &CThostFtdcSyncingInstrumentCommissionRateField::CloseTodayRatioByVolume)
            ;

    py::class_<CThostFtdcSyncingInstrumentTradingRightField>(structs, "CThostFtdcSyncingInstrumentTradingRightField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcSyncingInstrumentTradingRightField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcSyncingInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentTradingRightField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcSyncingInstrumentTradingRightField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncingInstrumentTradingRightField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncingInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentTradingRightField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncingInstrumentTradingRightField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncingInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncingInstrumentTradingRightField::InvestorID));
                    }
            )
            .def_readwrite("TradingRight", &CThostFtdcSyncingInstrumentTradingRightField::TradingRight)
            ;

    py::class_<CThostFtdcQryOrderField>(structs, "CThostFtdcQryOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcQryOrderField::OrderSysID));
                    }
            )
            .def_property(
                    "InsertTimeStart",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.InsertTimeStart);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeStart, value.c_str(), sizeof(CThostFtdcQryOrderField::InsertTimeStart));
                    }
            )
            .def_property(
                    "InsertTimeEnd",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.InsertTimeEnd);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeEnd, value.c_str(), sizeof(CThostFtdcQryOrderField::InsertTimeEnd));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryOrderField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryTradeField>(structs, "CThostFtdcQryTradeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryTradeField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryTradeField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryTradeField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryTradeField::ExchangeID));
                    }
            )
            .def_property(
                    "TradeID",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.TradeID);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeID, value.c_str(), sizeof(CThostFtdcQryTradeField::TradeID));
                    }
            )
            .def_property(
                    "TradeTimeStart",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.TradeTimeStart);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeTimeStart, value.c_str(), sizeof(CThostFtdcQryTradeField::TradeTimeStart));
                    }
            )
            .def_property(
                    "TradeTimeEnd",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.TradeTimeEnd);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.TradeTimeEnd, value.c_str(), sizeof(CThostFtdcQryTradeField::TradeTimeEnd));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryTradeField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryTradeField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryTradeField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInvestorPositionField>(structs, "CThostFtdcQryInvestorPositionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInvestorPositionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInvestorPositionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryInvestorPositionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInvestorPositionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryInvestorPositionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryInvestorPositionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryTradingAccountField>(structs, "CThostFtdcQryTradingAccountField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryTradingAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryTradingAccountField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryTradingAccountField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryTradingAccountField::InvestorID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQryTradingAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQryTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQryTradingAccountField::CurrencyID));
                    }
            )
            .def_readwrite("BizType", &CThostFtdcQryTradingAccountField::BizType)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQryTradingAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQryTradingAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQryTradingAccountField::AccountID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInvestorField>(structs, "CThostFtdcQryInvestorField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInvestorField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInvestorField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInvestorField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInvestorField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInvestorField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInvestorField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcQryTradingCodeField>(structs, "CThostFtdcQryTradingCodeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryTradingCodeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryTradingCodeField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryTradingCodeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryTradingCodeField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryTradingCodeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryTradingCodeField::ExchangeID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryTradingCodeField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryTradingCodeField::ClientID));
                    }
            )
            .def_readwrite("ClientIDType", &CThostFtdcQryTradingCodeField::ClientIDType)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryTradingCodeField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryTradingCodeField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryTradingCodeField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInvestorGroupField>(structs, "CThostFtdcQryInvestorGroupField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInvestorGroupField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInvestorGroupField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInvestorGroupField::BrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInstrumentMarginRateField>(structs, "CThostFtdcQryInstrumentMarginRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInstrumentMarginRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInstrumentMarginRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInstrumentMarginRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInstrumentMarginRateField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryInstrumentMarginRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryInstrumentMarginRateField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcQryInstrumentMarginRateField::HedgeFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInstrumentMarginRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInstrumentMarginRateField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryInstrumentMarginRateField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryInstrumentMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryInstrumentMarginRateField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInstrumentCommissionRateField>(structs, "CThostFtdcQryInstrumentCommissionRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInstrumentCommissionRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInstrumentCommissionRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInstrumentCommissionRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInstrumentCommissionRateField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryInstrumentCommissionRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryInstrumentCommissionRateField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInstrumentCommissionRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInstrumentCommissionRateField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryInstrumentCommissionRateField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryInstrumentCommissionRateField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInstrumentTradingRightField>(structs, "CThostFtdcQryInstrumentTradingRightField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInstrumentTradingRightField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInstrumentTradingRightField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInstrumentTradingRightField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInstrumentTradingRightField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryInstrumentTradingRightField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryInstrumentTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryInstrumentTradingRightField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcQryBrokerField>(structs, "CThostFtdcQryBrokerField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryBrokerField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryBrokerField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryBrokerField::BrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcQryTraderField>(structs, "CThostFtdcQryTraderField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryTraderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryTraderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryTraderField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryTraderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryTraderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryTraderField::ParticipantID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryTraderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryTraderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryTraderField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcQrySuperUserFunctionField>(structs, "CThostFtdcQrySuperUserFunctionField")
            .def(py::init<>())
            .def_property(
                    "UserID",
                    [](const CThostFtdcQrySuperUserFunctionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQrySuperUserFunctionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQrySuperUserFunctionField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcQryUserSessionField>(structs, "CThostFtdcQryUserSessionField")
            .def(py::init<>())
            .def_readwrite("FrontID", &CThostFtdcQryUserSessionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcQryUserSessionField::SessionID)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryUserSessionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryUserSessionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryUserSessionField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQryUserSessionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQryUserSessionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQryUserSessionField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcQryPartBrokerField>(structs, "CThostFtdcQryPartBrokerField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryPartBrokerField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryPartBrokerField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryPartBrokerField::ExchangeID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryPartBrokerField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryPartBrokerField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryPartBrokerField::BrokerID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryPartBrokerField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryPartBrokerField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryPartBrokerField::ParticipantID));
                    }
            )
            ;

    py::class_<CThostFtdcQryFrontStatusField>(structs, "CThostFtdcQryFrontStatusField")
            .def(py::init<>())
            .def_readwrite("FrontID", &CThostFtdcQryFrontStatusField::FrontID)
            ;

    py::class_<CThostFtdcQryExchangeOrderField>(structs, "CThostFtdcQryExchangeOrderField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeOrderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQryExchangeOrderField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQryExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderField::ExchangeInstID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeOrderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeOrderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcQryOrderActionField>(structs, "CThostFtdcQryOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryOrderActionField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryOrderActionField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeOrderActionField>(structs, "CThostFtdcQryExchangeOrderActionField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeOrderActionField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcQrySuperUserField>(structs, "CThostFtdcQrySuperUserField")
            .def(py::init<>())
            .def_property(
                    "UserID",
                    [](const CThostFtdcQrySuperUserField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQrySuperUserField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQrySuperUserField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeField>(structs, "CThostFtdcQryExchangeField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryProductField>(structs, "CThostFtdcQryProductField")
            .def(py::init<>())
            .def_property(
                    "ProductID",
                    [](const CThostFtdcQryProductField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcQryProductField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcQryProductField::ProductID));
                    }
            )
            .def_readwrite("ProductClass", &CThostFtdcQryProductField::ProductClass)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryProductField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryProductField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryProductField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInstrumentField>(structs, "CThostFtdcQryInstrumentField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryInstrumentField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryInstrumentField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryInstrumentField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInstrumentField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInstrumentField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInstrumentField::ExchangeID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQryInstrumentField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQryInstrumentField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQryInstrumentField::ExchangeInstID));
                    }
            )
            .def_property(
                    "ProductID",
                    [](const CThostFtdcQryInstrumentField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcQryInstrumentField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcQryInstrumentField::ProductID));
                    }
            )
            ;

    py::class_<CThostFtdcQryDepthMarketDataField>(structs, "CThostFtdcQryDepthMarketDataField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryDepthMarketDataField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryDepthMarketDataField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryDepthMarketDataField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryDepthMarketDataField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryDepthMarketDataField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryBrokerUserField>(structs, "CThostFtdcQryBrokerUserField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryBrokerUserField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryBrokerUserField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryBrokerUserField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQryBrokerUserField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQryBrokerUserField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQryBrokerUserField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcQryBrokerUserFunctionField>(structs, "CThostFtdcQryBrokerUserFunctionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryBrokerUserFunctionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryBrokerUserFunctionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryBrokerUserFunctionField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQryBrokerUserFunctionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQryBrokerUserFunctionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQryBrokerUserFunctionField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcQryTraderOfferField>(structs, "CThostFtdcQryTraderOfferField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryTraderOfferField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryTraderOfferField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryTraderOfferField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryTraderOfferField::ParticipantID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryTraderOfferField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryTraderOfferField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcQrySyncDepositField>(structs, "CThostFtdcQrySyncDepositField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySyncDepositField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySyncDepositField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySyncDepositField::BrokerID));
                    }
            )
            .def_property(
                    "DepositSeqNo",
                    [](const CThostFtdcQrySyncDepositField &self) {
                        return py::str(self.DepositSeqNo);
                    },
                    [](CThostFtdcQrySyncDepositField &self, const std::string &value) {
                        std::strncpy(self.DepositSeqNo, value.c_str(), sizeof(CThostFtdcQrySyncDepositField::DepositSeqNo));
                    }
            )
            ;

    py::class_<CThostFtdcQrySettlementInfoField>(structs, "CThostFtdcQrySettlementInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySettlementInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQrySettlementInfoField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQrySettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoField::InvestorID));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcQrySettlementInfoField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcQrySettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcQrySettlementInfoField::TradingDay));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQrySettlementInfoField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQrySettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQrySettlementInfoField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQrySettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeMarginRateField>(structs, "CThostFtdcQryExchangeMarginRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryExchangeMarginRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryExchangeMarginRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryExchangeMarginRateField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryExchangeMarginRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryExchangeMarginRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryExchangeMarginRateField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcQryExchangeMarginRateField::HedgeFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeMarginRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeMarginRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeMarginRateField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeMarginRateAdjustField>(structs, "CThostFtdcQryExchangeMarginRateAdjustField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryExchangeMarginRateAdjustField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryExchangeMarginRateAdjustField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryExchangeMarginRateAdjustField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryExchangeMarginRateAdjustField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryExchangeMarginRateAdjustField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryExchangeMarginRateAdjustField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcQryExchangeMarginRateAdjustField::HedgeFlag)
            ;

    py::class_<CThostFtdcQryExchangeRateField>(structs, "CThostFtdcQryExchangeRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryExchangeRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryExchangeRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryExchangeRateField::BrokerID));
                    }
            )
            .def_property(
                    "FromCurrencyID",
                    [](const CThostFtdcQryExchangeRateField &self) {
                        return py::str(self.FromCurrencyID);
                    },
                    [](CThostFtdcQryExchangeRateField &self, const std::string &value) {
                        std::strncpy(self.FromCurrencyID, value.c_str(), sizeof(CThostFtdcQryExchangeRateField::FromCurrencyID));
                    }
            )
            .def_property(
                    "ToCurrencyID",
                    [](const CThostFtdcQryExchangeRateField &self) {
                        return py::str(self.ToCurrencyID);
                    },
                    [](CThostFtdcQryExchangeRateField &self, const std::string &value) {
                        std::strncpy(self.ToCurrencyID, value.c_str(), sizeof(CThostFtdcQryExchangeRateField::ToCurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcQrySyncFundMortgageField>(structs, "CThostFtdcQrySyncFundMortgageField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySyncFundMortgageField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySyncFundMortgageField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySyncFundMortgageField::BrokerID));
                    }
            )
            .def_property(
                    "MortgageSeqNo",
                    [](const CThostFtdcQrySyncFundMortgageField &self) {
                        return py::str(self.MortgageSeqNo);
                    },
                    [](CThostFtdcQrySyncFundMortgageField &self, const std::string &value) {
                        std::strncpy(self.MortgageSeqNo, value.c_str(), sizeof(CThostFtdcQrySyncFundMortgageField::MortgageSeqNo));
                    }
            )
            ;

    py::class_<CThostFtdcQryHisOrderField>(structs, "CThostFtdcQryHisOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryHisOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryHisOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryHisOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryHisOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcQryHisOrderField::OrderSysID));
                    }
            )
            .def_property(
                    "InsertTimeStart",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.InsertTimeStart);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeStart, value.c_str(), sizeof(CThostFtdcQryHisOrderField::InsertTimeStart));
                    }
            )
            .def_property(
                    "InsertTimeEnd",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.InsertTimeEnd);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeEnd, value.c_str(), sizeof(CThostFtdcQryHisOrderField::InsertTimeEnd));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcQryHisOrderField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcQryHisOrderField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcQryHisOrderField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcQryHisOrderField::SettlementID)
            ;

    py::class_<CThostFtdcOptionInstrMiniMarginField>(structs, "CThostFtdcOptionInstrMiniMarginField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionInstrMiniMarginField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionInstrMiniMarginField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionInstrMiniMarginField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcOptionInstrMiniMarginField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionInstrMiniMarginField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionInstrMiniMarginField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionInstrMiniMarginField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionInstrMiniMarginField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionInstrMiniMarginField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionInstrMiniMarginField::InvestorID));
                    }
            )
            .def_readwrite("MinMargin", &CThostFtdcOptionInstrMiniMarginField::MinMargin)
            .def_readwrite("ValueMethod", &CThostFtdcOptionInstrMiniMarginField::ValueMethod)
            .def_readwrite("IsRelative", &CThostFtdcOptionInstrMiniMarginField::IsRelative)
            ;

    py::class_<CThostFtdcOptionInstrMarginAdjustField>(structs, "CThostFtdcOptionInstrMarginAdjustField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionInstrMarginAdjustField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionInstrMarginAdjustField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionInstrMarginAdjustField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcOptionInstrMarginAdjustField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionInstrMarginAdjustField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionInstrMarginAdjustField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionInstrMarginAdjustField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionInstrMarginAdjustField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionInstrMarginAdjustField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionInstrMarginAdjustField::InvestorID));
                    }
            )
            .def_readwrite("SShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::SShortMarginRatioByMoney)
            .def_readwrite("SShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::SShortMarginRatioByVolume)
            .def_readwrite("HShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::HShortMarginRatioByMoney)
            .def_readwrite("HShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::HShortMarginRatioByVolume)
            .def_readwrite("AShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::AShortMarginRatioByMoney)
            .def_readwrite("AShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::AShortMarginRatioByVolume)
            .def_readwrite("IsRelative", &CThostFtdcOptionInstrMarginAdjustField::IsRelative)
            .def_readwrite("MShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::MShortMarginRatioByMoney)
            .def_readwrite("MShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::MShortMarginRatioByVolume)
            ;

    py::class_<CThostFtdcOptionInstrCommRateField>(structs, "CThostFtdcOptionInstrCommRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionInstrCommRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionInstrCommRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcOptionInstrCommRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionInstrCommRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionInstrCommRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionInstrCommRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionInstrCommRateField::InvestorID));
                    }
            )
            .def_readwrite("OpenRatioByMoney", &CThostFtdcOptionInstrCommRateField::OpenRatioByMoney)
            .def_readwrite("OpenRatioByVolume", &CThostFtdcOptionInstrCommRateField::OpenRatioByVolume)
            .def_readwrite("CloseRatioByMoney", &CThostFtdcOptionInstrCommRateField::CloseRatioByMoney)
            .def_readwrite("CloseRatioByVolume", &CThostFtdcOptionInstrCommRateField::CloseRatioByVolume)
            .def_readwrite("CloseTodayRatioByMoney", &CThostFtdcOptionInstrCommRateField::CloseTodayRatioByMoney)
            .def_readwrite("CloseTodayRatioByVolume", &CThostFtdcOptionInstrCommRateField::CloseTodayRatioByVolume)
            .def_readwrite("StrikeRatioByMoney", &CThostFtdcOptionInstrCommRateField::StrikeRatioByMoney)
            .def_readwrite("StrikeRatioByVolume", &CThostFtdcOptionInstrCommRateField::StrikeRatioByVolume)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcOptionInstrCommRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcOptionInstrCommRateField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcOptionInstrCommRateField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcOptionInstrCommRateField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcOptionInstrTradeCostField>(structs, "CThostFtdcOptionInstrTradeCostField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionInstrTradeCostField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionInstrTradeCostField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionInstrTradeCostField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionInstrTradeCostField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionInstrTradeCostField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionInstrTradeCostField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcOptionInstrTradeCostField::HedgeFlag)
            .def_readwrite("FixedMargin", &CThostFtdcOptionInstrTradeCostField::FixedMargin)
            .def_readwrite("MiniMargin", &CThostFtdcOptionInstrTradeCostField::MiniMargin)
            .def_readwrite("Royalty", &CThostFtdcOptionInstrTradeCostField::Royalty)
            .def_readwrite("ExchFixedMargin", &CThostFtdcOptionInstrTradeCostField::ExchFixedMargin)
            .def_readwrite("ExchMiniMargin", &CThostFtdcOptionInstrTradeCostField::ExchMiniMargin)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcOptionInstrTradeCostField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcOptionInstrTradeCostField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcOptionInstrTradeCostField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcOptionInstrTradeCostField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryOptionInstrTradeCostField>(structs, "CThostFtdcQryOptionInstrTradeCostField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryOptionInstrTradeCostField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradeCostField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryOptionInstrTradeCostField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradeCostField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryOptionInstrTradeCostField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradeCostField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcQryOptionInstrTradeCostField::HedgeFlag)
            .def_readwrite("InputPrice", &CThostFtdcQryOptionInstrTradeCostField::InputPrice)
            .def_readwrite("UnderlyingPrice", &CThostFtdcQryOptionInstrTradeCostField::UnderlyingPrice)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryOptionInstrTradeCostField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradeCostField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryOptionInstrTradeCostField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryOptionInstrTradeCostField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradeCostField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryOptionInstrCommRateField>(structs, "CThostFtdcQryOptionInstrCommRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryOptionInstrCommRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryOptionInstrCommRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryOptionInstrCommRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryOptionInstrCommRateField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryOptionInstrCommRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryOptionInstrCommRateField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryOptionInstrCommRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryOptionInstrCommRateField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryOptionInstrCommRateField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryOptionInstrCommRateField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcIndexPriceField>(structs, "CThostFtdcIndexPriceField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcIndexPriceField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcIndexPriceField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcIndexPriceField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcIndexPriceField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcIndexPriceField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcIndexPriceField::InstrumentID));
                    }
            )
            .def_readwrite("ClosePrice", &CThostFtdcIndexPriceField::ClosePrice)
            ;

    py::class_<CThostFtdcInputExecOrderField>(structs, "CThostFtdcInputExecOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "ExecOrderRef",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.ExecOrderRef);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderRef, value.c_str(), sizeof(CThostFtdcInputExecOrderField::ExecOrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::UserID));
                    }
            )
            .def_readwrite("Volume", &CThostFtdcInputExecOrderField::Volume)
            .def_readwrite("RequestID", &CThostFtdcInputExecOrderField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcInputExecOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("OffsetFlag", &CThostFtdcInputExecOrderField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcInputExecOrderField::HedgeFlag)
            .def_readwrite("ActionType", &CThostFtdcInputExecOrderField::ActionType)
            .def_readwrite("PosiDirection", &CThostFtdcInputExecOrderField::PosiDirection)
            .def_readwrite("ReservePositionFlag", &CThostFtdcInputExecOrderField::ReservePositionFlag)
            .def_readwrite("CloseFlag", &CThostFtdcInputExecOrderField::CloseFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcInputExecOrderField::ClientID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputExecOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputExecOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputExecOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputExecOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcInputExecOrderActionField>(structs, "CThostFtdcInputExecOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("ExecOrderActionRef", &CThostFtdcInputExecOrderActionField::ExecOrderActionRef)
            .def_property(
                    "ExecOrderRef",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.ExecOrderRef);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderRef, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::ExecOrderRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcInputExecOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcInputExecOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcInputExecOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ExecOrderSysID",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.ExecOrderSysID);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderSysID, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::ExecOrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcInputExecOrderActionField::ActionFlag)
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::UserID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputExecOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputExecOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcExecOrderField>(structs, "CThostFtdcExecOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcExecOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcExecOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcExecOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "ExecOrderRef",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ExecOrderRef);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderRef, value.c_str(), sizeof(CThostFtdcExecOrderField::ExecOrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcExecOrderField::UserID));
                    }
            )
            .def_readwrite("Volume", &CThostFtdcExecOrderField::Volume)
            .def_readwrite("RequestID", &CThostFtdcExecOrderField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExecOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("OffsetFlag", &CThostFtdcExecOrderField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcExecOrderField::HedgeFlag)
            .def_readwrite("ActionType", &CThostFtdcExecOrderField::ActionType)
            .def_readwrite("PosiDirection", &CThostFtdcExecOrderField::PosiDirection)
            .def_readwrite("ReservePositionFlag", &CThostFtdcExecOrderField::ReservePositionFlag)
            .def_readwrite("CloseFlag", &CThostFtdcExecOrderField::CloseFlag)
            .def_property(
                    "ExecOrderLocalID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ExecOrderLocalID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderLocalID, value.c_str(), sizeof(CThostFtdcExecOrderField::ExecOrderLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExecOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExecOrderField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExecOrderField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExecOrderField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExecOrderField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExecOrderField::InstallID)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcExecOrderField::OrderSubmitStatus)
            .def_readwrite("NotifySequence", &CThostFtdcExecOrderField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcExecOrderField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcExecOrderField::SettlementID)
            .def_property(
                    "ExecOrderSysID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ExecOrderSysID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderSysID, value.c_str(), sizeof(CThostFtdcExecOrderField::ExecOrderSysID));
                    }
            )
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcExecOrderField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcExecOrderField::InsertTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcExecOrderField::CancelTime));
                    }
            )
            .def_readwrite("ExecResult", &CThostFtdcExecOrderField::ExecResult)
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcExecOrderField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcExecOrderField::SequenceNo)
            .def_readwrite("FrontID", &CThostFtdcExecOrderField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcExecOrderField::SessionID)
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcExecOrderField::UserProductInfo));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcExecOrderField::StatusMsg));
                    }
            )
            .def_property(
                    "ActiveUserID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.ActiveUserID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveUserID, value.c_str(), sizeof(CThostFtdcExecOrderField::ActiveUserID));
                    }
            )
            .def_readwrite("BrokerExecOrderSeq", &CThostFtdcExecOrderField::BrokerExecOrderSeq)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExecOrderField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcExecOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcExecOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcExecOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExecOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExecOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExecOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExecOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcExecOrderActionField>(structs, "CThostFtdcExecOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("ExecOrderActionRef", &CThostFtdcExecOrderActionField::ExecOrderActionRef)
            .def_property(
                    "ExecOrderRef",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ExecOrderRef);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderRef, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ExecOrderRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcExecOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcExecOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcExecOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ExecOrderSysID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ExecOrderSysID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderSysID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ExecOrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcExecOrderActionField::ActionFlag)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExecOrderActionField::InstallID)
            .def_property(
                    "ExecOrderLocalID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ExecOrderLocalID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderLocalID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ExecOrderLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExecOrderActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcExecOrderActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::UserID));
                    }
            )
            .def_readwrite("ActionType", &CThostFtdcExecOrderActionField::ActionType)
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcExecOrderActionField::StatusMsg));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcExecOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExecOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExecOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExecOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryExecOrderField>(structs, "CThostFtdcQryExecOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryExecOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryExecOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryExecOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryExecOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryExecOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryExecOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExecOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExecOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "ExecOrderSysID",
                    [](const CThostFtdcQryExecOrderField &self) {
                        return py::str(self.ExecOrderSysID);
                    },
                    [](CThostFtdcQryExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderSysID, value.c_str(), sizeof(CThostFtdcQryExecOrderField::ExecOrderSysID));
                    }
            )
            .def_property(
                    "InsertTimeStart",
                    [](const CThostFtdcQryExecOrderField &self) {
                        return py::str(self.InsertTimeStart);
                    },
                    [](CThostFtdcQryExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeStart, value.c_str(), sizeof(CThostFtdcQryExecOrderField::InsertTimeStart));
                    }
            )
            .def_property(
                    "InsertTimeEnd",
                    [](const CThostFtdcQryExecOrderField &self) {
                        return py::str(self.InsertTimeEnd);
                    },
                    [](CThostFtdcQryExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeEnd, value.c_str(), sizeof(CThostFtdcQryExecOrderField::InsertTimeEnd));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeExecOrderField>(structs, "CThostFtdcExchangeExecOrderField")
            .def(py::init<>())
            .def_readwrite("Volume", &CThostFtdcExchangeExecOrderField::Volume)
            .def_readwrite("RequestID", &CThostFtdcExchangeExecOrderField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("OffsetFlag", &CThostFtdcExchangeExecOrderField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcExchangeExecOrderField::HedgeFlag)
            .def_readwrite("ActionType", &CThostFtdcExchangeExecOrderField::ActionType)
            .def_readwrite("PosiDirection", &CThostFtdcExchangeExecOrderField::PosiDirection)
            .def_readwrite("ReservePositionFlag", &CThostFtdcExchangeExecOrderField::ReservePositionFlag)
            .def_readwrite("CloseFlag", &CThostFtdcExchangeExecOrderField::CloseFlag)
            .def_property(
                    "ExecOrderLocalID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.ExecOrderLocalID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderLocalID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::ExecOrderLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeExecOrderField::InstallID)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeExecOrderField::OrderSubmitStatus)
            .def_readwrite("NotifySequence", &CThostFtdcExchangeExecOrderField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcExchangeExecOrderField::SettlementID)
            .def_property(
                    "ExecOrderSysID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.ExecOrderSysID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderSysID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::ExecOrderSysID));
                    }
            )
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::InsertTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::CancelTime));
                    }
            )
            .def_readwrite("ExecResult", &CThostFtdcExchangeExecOrderField::ExecResult)
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcExchangeExecOrderField::SequenceNo)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::BranchID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeExecOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeExecOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeExecOrderField>(structs, "CThostFtdcQryExchangeExecOrderField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeExecOrderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeExecOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQryExchangeExecOrderField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQryExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderField::ExchangeInstID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeExecOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeExecOrderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeExecOrderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcQryExecOrderActionField>(structs, "CThostFtdcQryExecOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryExecOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryExecOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryExecOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryExecOrderActionField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExecOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExecOrderActionField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeExecOrderActionField>(structs, "CThostFtdcExchangeExecOrderActionField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ExecOrderSysID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ExecOrderSysID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderSysID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ExecOrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcExchangeExecOrderActionField::ActionFlag)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeExecOrderActionField::InstallID)
            .def_property(
                    "ExecOrderLocalID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ExecOrderLocalID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderLocalID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ExecOrderLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcExchangeExecOrderActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::UserID));
                    }
            )
            .def_readwrite("ActionType", &CThostFtdcExchangeExecOrderActionField::ActionType)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::BranchID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::MacAddress));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeExecOrderActionField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeExecOrderActionField::ExchangeInstID));
                    }
            )
            .def_readwrite("Volume", &CThostFtdcExchangeExecOrderActionField::Volume)
            ;

    py::class_<CThostFtdcQryExchangeExecOrderActionField>(structs, "CThostFtdcQryExchangeExecOrderActionField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeExecOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeExecOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeExecOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeExecOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeExecOrderActionField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcErrExecOrderField>(structs, "CThostFtdcErrExecOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "ExecOrderRef",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.ExecOrderRef);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderRef, value.c_str(), sizeof(CThostFtdcErrExecOrderField::ExecOrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::UserID));
                    }
            )
            .def_readwrite("Volume", &CThostFtdcErrExecOrderField::Volume)
            .def_readwrite("RequestID", &CThostFtdcErrExecOrderField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcErrExecOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("OffsetFlag", &CThostFtdcErrExecOrderField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcErrExecOrderField::HedgeFlag)
            .def_readwrite("ActionType", &CThostFtdcErrExecOrderField::ActionType)
            .def_readwrite("PosiDirection", &CThostFtdcErrExecOrderField::PosiDirection)
            .def_readwrite("ReservePositionFlag", &CThostFtdcErrExecOrderField::ReservePositionFlag)
            .def_readwrite("CloseFlag", &CThostFtdcErrExecOrderField::CloseFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcErrExecOrderField::ClientID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcErrExecOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcErrExecOrderField::MacAddress));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcErrExecOrderField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcErrExecOrderField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcErrExecOrderField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcQryErrExecOrderField>(structs, "CThostFtdcQryErrExecOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryErrExecOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryErrExecOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryErrExecOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryErrExecOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryErrExecOrderField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcErrExecOrderActionField>(structs, "CThostFtdcErrExecOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("ExecOrderActionRef", &CThostFtdcErrExecOrderActionField::ExecOrderActionRef)
            .def_property(
                    "ExecOrderRef",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.ExecOrderRef);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderRef, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::ExecOrderRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcErrExecOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcErrExecOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcErrExecOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ExecOrderSysID",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.ExecOrderSysID);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExecOrderSysID, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::ExecOrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcErrExecOrderActionField::ActionFlag)
            .def_property(
                    "UserID",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::UserID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::MacAddress));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcErrExecOrderActionField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcErrExecOrderActionField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcErrExecOrderActionField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcQryErrExecOrderActionField>(structs, "CThostFtdcQryErrExecOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryErrExecOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryErrExecOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryErrExecOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryErrExecOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryErrExecOrderActionField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcOptionInstrTradingRightField>(structs, "CThostFtdcOptionInstrTradingRightField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionInstrTradingRightField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionInstrTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionInstrTradingRightField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcOptionInstrTradingRightField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionInstrTradingRightField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionInstrTradingRightField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionInstrTradingRightField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionInstrTradingRightField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionInstrTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionInstrTradingRightField::InvestorID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcOptionInstrTradingRightField::Direction)
            .def_readwrite("TradingRight", &CThostFtdcOptionInstrTradingRightField::TradingRight)
            ;

    py::class_<CThostFtdcQryOptionInstrTradingRightField>(structs, "CThostFtdcQryOptionInstrTradingRightField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryOptionInstrTradingRightField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryOptionInstrTradingRightField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradingRightField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryOptionInstrTradingRightField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryOptionInstrTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradingRightField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryOptionInstrTradingRightField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryOptionInstrTradingRightField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryOptionInstrTradingRightField::InstrumentID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcQryOptionInstrTradingRightField::Direction)
            ;

    py::class_<CThostFtdcInputForQuoteField>(structs, "CThostFtdcInputForQuoteField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputForQuoteField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputForQuoteField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputForQuoteField::InstrumentID));
                    }
            )
            .def_property(
                    "ForQuoteRef",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.ForQuoteRef);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteRef, value.c_str(), sizeof(CThostFtdcInputForQuoteField::ForQuoteRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputForQuoteField::UserID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputForQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputForQuoteField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputForQuoteField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputForQuoteField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputForQuoteField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputForQuoteField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcForQuoteField>(structs, "CThostFtdcForQuoteField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcForQuoteField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcForQuoteField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcForQuoteField::InstrumentID));
                    }
            )
            .def_property(
                    "ForQuoteRef",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.ForQuoteRef);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteRef, value.c_str(), sizeof(CThostFtdcForQuoteField::ForQuoteRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcForQuoteField::UserID));
                    }
            )
            .def_property(
                    "ForQuoteLocalID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.ForQuoteLocalID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteLocalID, value.c_str(), sizeof(CThostFtdcForQuoteField::ForQuoteLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcForQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcForQuoteField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcForQuoteField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcForQuoteField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcForQuoteField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcForQuoteField::InstallID)
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcForQuoteField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcForQuoteField::InsertTime));
                    }
            )
            .def_readwrite("ForQuoteStatus", &CThostFtdcForQuoteField::ForQuoteStatus)
            .def_readwrite("FrontID", &CThostFtdcForQuoteField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcForQuoteField::SessionID)
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcForQuoteField::StatusMsg));
                    }
            )
            .def_property(
                    "ActiveUserID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.ActiveUserID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ActiveUserID, value.c_str(), sizeof(CThostFtdcForQuoteField::ActiveUserID));
                    }
            )
            .def_readwrite("BrokerForQutoSeq", &CThostFtdcForQuoteField::BrokerForQutoSeq)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcForQuoteField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcForQuoteField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcForQuoteField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcForQuoteField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcForQuoteField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryForQuoteField>(structs, "CThostFtdcQryForQuoteField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryForQuoteField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryForQuoteField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryForQuoteField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryForQuoteField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryForQuoteField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryForQuoteField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryForQuoteField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryForQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryForQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "InsertTimeStart",
                    [](const CThostFtdcQryForQuoteField &self) {
                        return py::str(self.InsertTimeStart);
                    },
                    [](CThostFtdcQryForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeStart, value.c_str(), sizeof(CThostFtdcQryForQuoteField::InsertTimeStart));
                    }
            )
            .def_property(
                    "InsertTimeEnd",
                    [](const CThostFtdcQryForQuoteField &self) {
                        return py::str(self.InsertTimeEnd);
                    },
                    [](CThostFtdcQryForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeEnd, value.c_str(), sizeof(CThostFtdcQryForQuoteField::InsertTimeEnd));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryForQuoteField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryForQuoteField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeForQuoteField>(structs, "CThostFtdcExchangeForQuoteField")
            .def(py::init<>())
            .def_property(
                    "ForQuoteLocalID",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.ForQuoteLocalID);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteLocalID, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::ForQuoteLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeForQuoteField::InstallID)
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::InsertTime));
                    }
            )
            .def_readwrite("ForQuoteStatus", &CThostFtdcExchangeForQuoteField::ForQuoteStatus)
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeForQuoteField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeForQuoteField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeForQuoteField>(structs, "CThostFtdcQryExchangeForQuoteField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeForQuoteField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeForQuoteField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeForQuoteField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeForQuoteField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQryExchangeForQuoteField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQryExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQryExchangeForQuoteField::ExchangeInstID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeForQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeForQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeForQuoteField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeForQuoteField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeForQuoteField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcInputQuoteField>(structs, "CThostFtdcInputQuoteField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputQuoteField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputQuoteField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputQuoteField::InstrumentID));
                    }
            )
            .def_property(
                    "QuoteRef",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.QuoteRef);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.QuoteRef, value.c_str(), sizeof(CThostFtdcInputQuoteField::QuoteRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputQuoteField::UserID));
                    }
            )
            .def_readwrite("AskPrice", &CThostFtdcInputQuoteField::AskPrice)
            .def_readwrite("BidPrice", &CThostFtdcInputQuoteField::BidPrice)
            .def_readwrite("AskVolume", &CThostFtdcInputQuoteField::AskVolume)
            .def_readwrite("BidVolume", &CThostFtdcInputQuoteField::BidVolume)
            .def_readwrite("RequestID", &CThostFtdcInputQuoteField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcInputQuoteField::BusinessUnit));
                    }
            )
            .def_readwrite("AskOffsetFlag", &CThostFtdcInputQuoteField::AskOffsetFlag)
            .def_readwrite("BidOffsetFlag", &CThostFtdcInputQuoteField::BidOffsetFlag)
            .def_readwrite("AskHedgeFlag", &CThostFtdcInputQuoteField::AskHedgeFlag)
            .def_readwrite("BidHedgeFlag", &CThostFtdcInputQuoteField::BidHedgeFlag)
            .def_property(
                    "AskOrderRef",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.AskOrderRef);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.AskOrderRef, value.c_str(), sizeof(CThostFtdcInputQuoteField::AskOrderRef));
                    }
            )
            .def_property(
                    "BidOrderRef",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.BidOrderRef);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.BidOrderRef, value.c_str(), sizeof(CThostFtdcInputQuoteField::BidOrderRef));
                    }
            )
            .def_property(
                    "ForQuoteSysID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.ForQuoteSysID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteSysID, value.c_str(), sizeof(CThostFtdcInputQuoteField::ForQuoteSysID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputQuoteField::InvestUnitID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcInputQuoteField::ClientID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputQuoteField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputQuoteField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputQuoteField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputQuoteField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcInputQuoteActionField>(structs, "CThostFtdcInputQuoteActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::InvestorID));
                    }
            )
            .def_readwrite("QuoteActionRef", &CThostFtdcInputQuoteActionField::QuoteActionRef)
            .def_property(
                    "QuoteRef",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.QuoteRef);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.QuoteRef, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::QuoteRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcInputQuoteActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcInputQuoteActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcInputQuoteActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::ExchangeID));
                    }
            )
            .def_property(
                    "QuoteSysID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.QuoteSysID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.QuoteSysID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::QuoteSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcInputQuoteActionField::ActionFlag)
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::UserID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::InstrumentID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::ClientID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputQuoteActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputQuoteActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQuoteField>(structs, "CThostFtdcQuoteField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQuoteField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQuoteField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQuoteField::InstrumentID));
                    }
            )
            .def_property(
                    "QuoteRef",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.QuoteRef);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.QuoteRef, value.c_str(), sizeof(CThostFtdcQuoteField::QuoteRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQuoteField::UserID));
                    }
            )
            .def_readwrite("AskPrice", &CThostFtdcQuoteField::AskPrice)
            .def_readwrite("BidPrice", &CThostFtdcQuoteField::BidPrice)
            .def_readwrite("AskVolume", &CThostFtdcQuoteField::AskVolume)
            .def_readwrite("BidVolume", &CThostFtdcQuoteField::BidVolume)
            .def_readwrite("RequestID", &CThostFtdcQuoteField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcQuoteField::BusinessUnit));
                    }
            )
            .def_readwrite("AskOffsetFlag", &CThostFtdcQuoteField::AskOffsetFlag)
            .def_readwrite("BidOffsetFlag", &CThostFtdcQuoteField::BidOffsetFlag)
            .def_readwrite("AskHedgeFlag", &CThostFtdcQuoteField::AskHedgeFlag)
            .def_readwrite("BidHedgeFlag", &CThostFtdcQuoteField::BidHedgeFlag)
            .def_property(
                    "QuoteLocalID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.QuoteLocalID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.QuoteLocalID, value.c_str(), sizeof(CThostFtdcQuoteField::QuoteLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQuoteField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQuoteField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQuoteField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQuoteField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcQuoteField::InstallID)
            .def_readwrite("NotifySequence", &CThostFtdcQuoteField::NotifySequence)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcQuoteField::OrderSubmitStatus)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcQuoteField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcQuoteField::SettlementID)
            .def_property(
                    "QuoteSysID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.QuoteSysID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.QuoteSysID, value.c_str(), sizeof(CThostFtdcQuoteField::QuoteSysID));
                    }
            )
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcQuoteField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcQuoteField::InsertTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcQuoteField::CancelTime));
                    }
            )
            .def_readwrite("QuoteStatus", &CThostFtdcQuoteField::QuoteStatus)
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcQuoteField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcQuoteField::SequenceNo)
            .def_property(
                    "AskOrderSysID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.AskOrderSysID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.AskOrderSysID, value.c_str(), sizeof(CThostFtdcQuoteField::AskOrderSysID));
                    }
            )
            .def_property(
                    "BidOrderSysID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.BidOrderSysID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.BidOrderSysID, value.c_str(), sizeof(CThostFtdcQuoteField::BidOrderSysID));
                    }
            )
            .def_readwrite("FrontID", &CThostFtdcQuoteField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcQuoteField::SessionID)
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcQuoteField::UserProductInfo));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcQuoteField::StatusMsg));
                    }
            )
            .def_property(
                    "ActiveUserID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.ActiveUserID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.ActiveUserID, value.c_str(), sizeof(CThostFtdcQuoteField::ActiveUserID));
                    }
            )
            .def_readwrite("BrokerQuoteSeq", &CThostFtdcQuoteField::BrokerQuoteSeq)
            .def_property(
                    "AskOrderRef",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.AskOrderRef);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.AskOrderRef, value.c_str(), sizeof(CThostFtdcQuoteField::AskOrderRef));
                    }
            )
            .def_property(
                    "BidOrderRef",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.BidOrderRef);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.BidOrderRef, value.c_str(), sizeof(CThostFtdcQuoteField::BidOrderRef));
                    }
            )
            .def_property(
                    "ForQuoteSysID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.ForQuoteSysID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteSysID, value.c_str(), sizeof(CThostFtdcQuoteField::ForQuoteSysID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcQuoteField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQuoteField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQuoteField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQuoteField::CurrencyID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcQuoteField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcQuoteField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcQuoteField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcQuoteField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQuoteActionField>(structs, "CThostFtdcQuoteActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQuoteActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQuoteActionField::InvestorID));
                    }
            )
            .def_readwrite("QuoteActionRef", &CThostFtdcQuoteActionField::QuoteActionRef)
            .def_property(
                    "QuoteRef",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.QuoteRef);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.QuoteRef, value.c_str(), sizeof(CThostFtdcQuoteActionField::QuoteRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcQuoteActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcQuoteActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcQuoteActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQuoteActionField::ExchangeID));
                    }
            )
            .def_property(
                    "QuoteSysID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.QuoteSysID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.QuoteSysID, value.c_str(), sizeof(CThostFtdcQuoteActionField::QuoteSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcQuoteActionField::ActionFlag)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcQuoteActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcQuoteActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQuoteActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcQuoteActionField::InstallID)
            .def_property(
                    "QuoteLocalID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.QuoteLocalID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.QuoteLocalID, value.c_str(), sizeof(CThostFtdcQuoteActionField::QuoteLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcQuoteActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQuoteActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQuoteActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcQuoteActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcQuoteActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQuoteActionField::UserID));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcQuoteActionField::StatusMsg));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQuoteActionField::InstrumentID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcQuoteActionField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQuoteActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcQuoteActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcQuoteActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcQuoteActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryQuoteField>(structs, "CThostFtdcQryQuoteField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryQuoteField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryQuoteField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryQuoteField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "QuoteSysID",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.QuoteSysID);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.QuoteSysID, value.c_str(), sizeof(CThostFtdcQryQuoteField::QuoteSysID));
                    }
            )
            .def_property(
                    "InsertTimeStart",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.InsertTimeStart);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeStart, value.c_str(), sizeof(CThostFtdcQryQuoteField::InsertTimeStart));
                    }
            )
            .def_property(
                    "InsertTimeEnd",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.InsertTimeEnd);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeEnd, value.c_str(), sizeof(CThostFtdcQryQuoteField::InsertTimeEnd));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryQuoteField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryQuoteField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryQuoteField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeQuoteField>(structs, "CThostFtdcExchangeQuoteField")
            .def(py::init<>())
            .def_readwrite("AskPrice", &CThostFtdcExchangeQuoteField::AskPrice)
            .def_readwrite("BidPrice", &CThostFtdcExchangeQuoteField::BidPrice)
            .def_readwrite("AskVolume", &CThostFtdcExchangeQuoteField::AskVolume)
            .def_readwrite("BidVolume", &CThostFtdcExchangeQuoteField::BidVolume)
            .def_readwrite("RequestID", &CThostFtdcExchangeQuoteField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::BusinessUnit));
                    }
            )
            .def_readwrite("AskOffsetFlag", &CThostFtdcExchangeQuoteField::AskOffsetFlag)
            .def_readwrite("BidOffsetFlag", &CThostFtdcExchangeQuoteField::BidOffsetFlag)
            .def_readwrite("AskHedgeFlag", &CThostFtdcExchangeQuoteField::AskHedgeFlag)
            .def_readwrite("BidHedgeFlag", &CThostFtdcExchangeQuoteField::BidHedgeFlag)
            .def_property(
                    "QuoteLocalID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.QuoteLocalID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.QuoteLocalID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::QuoteLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeQuoteField::InstallID)
            .def_readwrite("NotifySequence", &CThostFtdcExchangeQuoteField::NotifySequence)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeQuoteField::OrderSubmitStatus)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcExchangeQuoteField::SettlementID)
            .def_property(
                    "QuoteSysID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.QuoteSysID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.QuoteSysID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::QuoteSysID));
                    }
            )
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::InsertTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::CancelTime));
                    }
            )
            .def_readwrite("QuoteStatus", &CThostFtdcExchangeQuoteField::QuoteStatus)
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcExchangeQuoteField::SequenceNo)
            .def_property(
                    "AskOrderSysID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.AskOrderSysID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.AskOrderSysID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::AskOrderSysID));
                    }
            )
            .def_property(
                    "BidOrderSysID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.BidOrderSysID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.BidOrderSysID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::BidOrderSysID));
                    }
            )
            .def_property(
                    "ForQuoteSysID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.ForQuoteSysID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteSysID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::ForQuoteSysID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::BranchID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeQuoteField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeQuoteField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeQuoteField>(structs, "CThostFtdcQryExchangeQuoteField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeQuoteField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeQuoteField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQryExchangeQuoteField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQryExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteField::ExchangeInstID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeQuoteField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeQuoteField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeQuoteField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcQryQuoteActionField>(structs, "CThostFtdcQryQuoteActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryQuoteActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryQuoteActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryQuoteActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryQuoteActionField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryQuoteActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryQuoteActionField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeQuoteActionField>(structs, "CThostFtdcExchangeQuoteActionField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::ExchangeID));
                    }
            )
            .def_property(
                    "QuoteSysID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.QuoteSysID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.QuoteSysID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::QuoteSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcExchangeQuoteActionField::ActionFlag)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeQuoteActionField::InstallID)
            .def_property(
                    "QuoteLocalID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.QuoteLocalID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.QuoteLocalID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::QuoteLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcExchangeQuoteActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::UserID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeQuoteActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeQuoteActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeQuoteActionField>(structs, "CThostFtdcQryExchangeQuoteActionField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeQuoteActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeQuoteActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteActionField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeQuoteActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteActionField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeQuoteActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeQuoteActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeQuoteActionField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcOptionInstrDeltaField>(structs, "CThostFtdcOptionInstrDeltaField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionInstrDeltaField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionInstrDeltaField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionInstrDeltaField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcOptionInstrDeltaField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionInstrDeltaField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionInstrDeltaField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionInstrDeltaField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionInstrDeltaField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionInstrDeltaField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionInstrDeltaField::InvestorID));
                    }
            )
            .def_readwrite("Delta", &CThostFtdcOptionInstrDeltaField::Delta)
            ;

    py::class_<CThostFtdcForQuoteRspField>(structs, "CThostFtdcForQuoteRspField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcForQuoteRspField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcForQuoteRspField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcForQuoteRspField::TradingDay));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcForQuoteRspField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcForQuoteRspField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcForQuoteRspField::InstrumentID));
                    }
            )
            .def_property(
                    "ForQuoteSysID",
                    [](const CThostFtdcForQuoteRspField &self) {
                        return py::str(self.ForQuoteSysID);
                    },
                    [](CThostFtdcForQuoteRspField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteSysID, value.c_str(), sizeof(CThostFtdcForQuoteRspField::ForQuoteSysID));
                    }
            )
            .def_property(
                    "ForQuoteTime",
                    [](const CThostFtdcForQuoteRspField &self) {
                        return py::str(self.ForQuoteTime);
                    },
                    [](CThostFtdcForQuoteRspField &self, const std::string &value) {
                        std::strncpy(self.ForQuoteTime, value.c_str(), sizeof(CThostFtdcForQuoteRspField::ForQuoteTime));
                    }
            )
            .def_property(
                    "ActionDay",
                    [](const CThostFtdcForQuoteRspField &self) {
                        return py::str(self.ActionDay);
                    },
                    [](CThostFtdcForQuoteRspField &self, const std::string &value) {
                        std::strncpy(self.ActionDay, value.c_str(), sizeof(CThostFtdcForQuoteRspField::ActionDay));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcForQuoteRspField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcForQuoteRspField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcForQuoteRspField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcStrikeOffsetField>(structs, "CThostFtdcStrikeOffsetField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcStrikeOffsetField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcStrikeOffsetField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcStrikeOffsetField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcStrikeOffsetField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcStrikeOffsetField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcStrikeOffsetField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcStrikeOffsetField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcStrikeOffsetField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcStrikeOffsetField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcStrikeOffsetField::InvestorID));
                    }
            )
            .def_readwrite("Offset", &CThostFtdcStrikeOffsetField::Offset)
            .def_readwrite("OffsetType", &CThostFtdcStrikeOffsetField::OffsetType)
            ;

    py::class_<CThostFtdcQryStrikeOffsetField>(structs, "CThostFtdcQryStrikeOffsetField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryStrikeOffsetField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryStrikeOffsetField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryStrikeOffsetField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryStrikeOffsetField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryStrikeOffsetField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryStrikeOffsetField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryStrikeOffsetField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryStrikeOffsetField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryStrikeOffsetField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcInputBatchOrderActionField>(structs, "CThostFtdcInputBatchOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputBatchOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputBatchOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputBatchOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputBatchOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("OrderActionRef", &CThostFtdcInputBatchOrderActionField::OrderActionRef)
            .def_readwrite("RequestID", &CThostFtdcInputBatchOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcInputBatchOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcInputBatchOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputBatchOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputBatchOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputBatchOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputBatchOrderActionField::UserID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputBatchOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputBatchOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputBatchOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputBatchOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputBatchOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputBatchOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcBatchOrderActionField>(structs, "CThostFtdcBatchOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("OrderActionRef", &CThostFtdcBatchOrderActionField::OrderActionRef)
            .def_readwrite("RequestID", &CThostFtdcBatchOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcBatchOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcBatchOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcBatchOrderActionField::InstallID)
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcBatchOrderActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::UserID));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::StatusMsg));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcBatchOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcBatchOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeBatchOrderActionField>(structs, "CThostFtdcExchangeBatchOrderActionField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeBatchOrderActionField::InstallID)
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcExchangeBatchOrderActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::UserID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeBatchOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeBatchOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryBatchOrderActionField>(structs, "CThostFtdcQryBatchOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryBatchOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryBatchOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryBatchOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryBatchOrderActionField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryBatchOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryBatchOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryBatchOrderActionField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcCombInstrumentGuardField>(structs, "CThostFtdcCombInstrumentGuardField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcCombInstrumentGuardField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcCombInstrumentGuardField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcCombInstrumentGuardField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcCombInstrumentGuardField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcCombInstrumentGuardField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcCombInstrumentGuardField::InstrumentID));
                    }
            )
            .def_readwrite("GuarantRatio", &CThostFtdcCombInstrumentGuardField::GuarantRatio)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcCombInstrumentGuardField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcCombInstrumentGuardField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcCombInstrumentGuardField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryCombInstrumentGuardField>(structs, "CThostFtdcQryCombInstrumentGuardField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryCombInstrumentGuardField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryCombInstrumentGuardField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryCombInstrumentGuardField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryCombInstrumentGuardField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryCombInstrumentGuardField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryCombInstrumentGuardField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryCombInstrumentGuardField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryCombInstrumentGuardField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryCombInstrumentGuardField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcInputCombActionField>(structs, "CThostFtdcInputCombActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputCombActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputCombActionField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputCombActionField::InstrumentID));
                    }
            )
            .def_property(
                    "CombActionRef",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.CombActionRef);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.CombActionRef, value.c_str(), sizeof(CThostFtdcInputCombActionField::CombActionRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputCombActionField::UserID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcInputCombActionField::Direction)
            .def_readwrite("Volume", &CThostFtdcInputCombActionField::Volume)
            .def_readwrite("CombDirection", &CThostFtdcInputCombActionField::CombDirection)
            .def_readwrite("HedgeFlag", &CThostFtdcInputCombActionField::HedgeFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputCombActionField::ExchangeID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputCombActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputCombActionField::MacAddress));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputCombActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputCombActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputCombActionField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcCombActionField>(structs, "CThostFtdcCombActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcCombActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcCombActionField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcCombActionField::InstrumentID));
                    }
            )
            .def_property(
                    "CombActionRef",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.CombActionRef);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.CombActionRef, value.c_str(), sizeof(CThostFtdcCombActionField::CombActionRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcCombActionField::UserID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcCombActionField::Direction)
            .def_readwrite("Volume", &CThostFtdcCombActionField::Volume)
            .def_readwrite("CombDirection", &CThostFtdcCombActionField::CombDirection)
            .def_readwrite("HedgeFlag", &CThostFtdcCombActionField::HedgeFlag)
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcCombActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcCombActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcCombActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcCombActionField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcCombActionField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcCombActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcCombActionField::InstallID)
            .def_readwrite("ActionStatus", &CThostFtdcCombActionField::ActionStatus)
            .def_readwrite("NotifySequence", &CThostFtdcCombActionField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcCombActionField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcCombActionField::SettlementID)
            .def_readwrite("SequenceNo", &CThostFtdcCombActionField::SequenceNo)
            .def_readwrite("FrontID", &CThostFtdcCombActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcCombActionField::SessionID)
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcCombActionField::UserProductInfo));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcCombActionField::StatusMsg));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcCombActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcCombActionField::MacAddress));
                    }
            )
            .def_property(
                    "ComTradeID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.ComTradeID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.ComTradeID, value.c_str(), sizeof(CThostFtdcCombActionField::ComTradeID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcCombActionField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcCombActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcCombActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcCombActionField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryCombActionField>(structs, "CThostFtdcQryCombActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryCombActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryCombActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryCombActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryCombActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryCombActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryCombActionField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryCombActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryCombActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryCombActionField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryCombActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryCombActionField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryCombActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryCombActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryCombActionField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeCombActionField>(structs, "CThostFtdcExchangeCombActionField")
            .def(py::init<>())
            .def_readwrite("Direction", &CThostFtdcExchangeCombActionField::Direction)
            .def_readwrite("Volume", &CThostFtdcExchangeCombActionField::Volume)
            .def_readwrite("CombDirection", &CThostFtdcExchangeCombActionField::CombDirection)
            .def_readwrite("HedgeFlag", &CThostFtdcExchangeCombActionField::HedgeFlag)
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeCombActionField::InstallID)
            .def_readwrite("ActionStatus", &CThostFtdcExchangeCombActionField::ActionStatus)
            .def_readwrite("NotifySequence", &CThostFtdcExchangeCombActionField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcExchangeCombActionField::SettlementID)
            .def_readwrite("SequenceNo", &CThostFtdcExchangeCombActionField::SequenceNo)
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::MacAddress));
                    }
            )
            .def_property(
                    "ComTradeID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.ComTradeID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ComTradeID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::ComTradeID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeCombActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeCombActionField::BranchID));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeCombActionField>(structs, "CThostFtdcQryExchangeCombActionField")
            .def(py::init<>())
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryExchangeCombActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryExchangeCombActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcQryExchangeCombActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcQryExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcQryExchangeCombActionField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQryExchangeCombActionField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQryExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQryExchangeCombActionField::ExchangeInstID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeCombActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeCombActionField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryExchangeCombActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryExchangeCombActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryExchangeCombActionField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcProductExchRateField>(structs, "CThostFtdcProductExchRateField")
            .def(py::init<>())
            .def_property(
                    "ProductID",
                    [](const CThostFtdcProductExchRateField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcProductExchRateField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcProductExchRateField::ProductID));
                    }
            )
            .def_property(
                    "QuoteCurrencyID",
                    [](const CThostFtdcProductExchRateField &self) {
                        return py::str(self.QuoteCurrencyID);
                    },
                    [](CThostFtdcProductExchRateField &self, const std::string &value) {
                        std::strncpy(self.QuoteCurrencyID, value.c_str(), sizeof(CThostFtdcProductExchRateField::QuoteCurrencyID));
                    }
            )
            .def_readwrite("ExchangeRate", &CThostFtdcProductExchRateField::ExchangeRate)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcProductExchRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcProductExchRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcProductExchRateField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryProductExchRateField>(structs, "CThostFtdcQryProductExchRateField")
            .def(py::init<>())
            .def_property(
                    "ProductID",
                    [](const CThostFtdcQryProductExchRateField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcQryProductExchRateField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcQryProductExchRateField::ProductID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryProductExchRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryProductExchRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryProductExchRateField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcQryForQuoteParamField>(structs, "CThostFtdcQryForQuoteParamField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryForQuoteParamField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryForQuoteParamField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryForQuoteParamField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryForQuoteParamField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryForQuoteParamField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryForQuoteParamField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryForQuoteParamField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryForQuoteParamField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryForQuoteParamField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcForQuoteParamField>(structs, "CThostFtdcForQuoteParamField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcForQuoteParamField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcForQuoteParamField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcForQuoteParamField::BrokerID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcForQuoteParamField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcForQuoteParamField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcForQuoteParamField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcForQuoteParamField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcForQuoteParamField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcForQuoteParamField::ExchangeID));
                    }
            )
            .def_readwrite("LastPrice", &CThostFtdcForQuoteParamField::LastPrice)
            .def_readwrite("PriceInterval", &CThostFtdcForQuoteParamField::PriceInterval)
            ;

    py::class_<CThostFtdcMMOptionInstrCommRateField>(structs, "CThostFtdcMMOptionInstrCommRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcMMOptionInstrCommRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcMMOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcMMOptionInstrCommRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcMMOptionInstrCommRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcMMOptionInstrCommRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcMMOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcMMOptionInstrCommRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcMMOptionInstrCommRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcMMOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcMMOptionInstrCommRateField::InvestorID));
                    }
            )
            .def_readwrite("OpenRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::OpenRatioByMoney)
            .def_readwrite("OpenRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::OpenRatioByVolume)
            .def_readwrite("CloseRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::CloseRatioByMoney)
            .def_readwrite("CloseRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::CloseRatioByVolume)
            .def_readwrite("CloseTodayRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::CloseTodayRatioByMoney)
            .def_readwrite("CloseTodayRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::CloseTodayRatioByVolume)
            .def_readwrite("StrikeRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::StrikeRatioByMoney)
            .def_readwrite("StrikeRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::StrikeRatioByVolume)
            ;

    py::class_<CThostFtdcQryMMOptionInstrCommRateField>(structs, "CThostFtdcQryMMOptionInstrCommRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryMMOptionInstrCommRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryMMOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryMMOptionInstrCommRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryMMOptionInstrCommRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryMMOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryMMOptionInstrCommRateField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryMMOptionInstrCommRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryMMOptionInstrCommRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryMMOptionInstrCommRateField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcMMInstrumentCommissionRateField>(structs, "CThostFtdcMMInstrumentCommissionRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcMMInstrumentCommissionRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcMMInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcMMInstrumentCommissionRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcMMInstrumentCommissionRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcMMInstrumentCommissionRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcMMInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcMMInstrumentCommissionRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcMMInstrumentCommissionRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcMMInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcMMInstrumentCommissionRateField::InvestorID));
                    }
            )
            .def_readwrite("OpenRatioByMoney", &CThostFtdcMMInstrumentCommissionRateField::OpenRatioByMoney)
            .def_readwrite("OpenRatioByVolume", &CThostFtdcMMInstrumentCommissionRateField::OpenRatioByVolume)
            .def_readwrite("CloseRatioByMoney", &CThostFtdcMMInstrumentCommissionRateField::CloseRatioByMoney)
            .def_readwrite("CloseRatioByVolume", &CThostFtdcMMInstrumentCommissionRateField::CloseRatioByVolume)
            .def_readwrite("CloseTodayRatioByMoney", &CThostFtdcMMInstrumentCommissionRateField::CloseTodayRatioByMoney)
            .def_readwrite("CloseTodayRatioByVolume", &CThostFtdcMMInstrumentCommissionRateField::CloseTodayRatioByVolume)
            ;

    py::class_<CThostFtdcQryMMInstrumentCommissionRateField>(structs, "CThostFtdcQryMMInstrumentCommissionRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryMMInstrumentCommissionRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryMMInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryMMInstrumentCommissionRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryMMInstrumentCommissionRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryMMInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryMMInstrumentCommissionRateField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryMMInstrumentCommissionRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryMMInstrumentCommissionRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryMMInstrumentCommissionRateField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcInstrumentOrderCommRateField>(structs, "CThostFtdcInstrumentOrderCommRateField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentOrderCommRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentOrderCommRateField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcInstrumentOrderCommRateField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInstrumentOrderCommRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInstrumentOrderCommRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInstrumentOrderCommRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInstrumentOrderCommRateField::InvestorID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcInstrumentOrderCommRateField::HedgeFlag)
            .def_readwrite("OrderCommByVolume", &CThostFtdcInstrumentOrderCommRateField::OrderCommByVolume)
            .def_readwrite("OrderActionCommByVolume", &CThostFtdcInstrumentOrderCommRateField::OrderActionCommByVolume)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInstrumentOrderCommRateField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInstrumentOrderCommRateField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInstrumentOrderCommRateField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInstrumentOrderCommRateField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInstrumentOrderCommRateField>(structs, "CThostFtdcQryInstrumentOrderCommRateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInstrumentOrderCommRateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInstrumentOrderCommRateField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInstrumentOrderCommRateField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInstrumentOrderCommRateField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryInstrumentOrderCommRateField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryInstrumentOrderCommRateField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryInstrumentOrderCommRateField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcTradeParamField>(structs, "CThostFtdcTradeParamField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradeParamField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradeParamField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradeParamField::BrokerID));
                    }
            )
            .def_readwrite("TradeParamID", &CThostFtdcTradeParamField::TradeParamID)
            .def_property(
                    "TradeParamValue",
                    [](const CThostFtdcTradeParamField &self) {
                        return py::str(self.TradeParamValue);
                    },
                    [](CThostFtdcTradeParamField &self, const std::string &value) {
                        std::strncpy(self.TradeParamValue, value.c_str(), sizeof(CThostFtdcTradeParamField::TradeParamValue));
                    }
            )
            .def_property(
                    "Memo",
                    [](const CThostFtdcTradeParamField &self) {
                        return py::str(self.Memo);
                    },
                    [](CThostFtdcTradeParamField &self, const std::string &value) {
                        std::strncpy(self.Memo, value.c_str(), sizeof(CThostFtdcTradeParamField::Memo));
                    }
            )
            ;

    py::class_<CThostFtdcInstrumentMarginRateULField>(structs, "CThostFtdcInstrumentMarginRateULField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentMarginRateULField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentMarginRateULField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateULField::InstrumentID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcInstrumentMarginRateULField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInstrumentMarginRateULField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInstrumentMarginRateULField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateULField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInstrumentMarginRateULField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInstrumentMarginRateULField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInstrumentMarginRateULField::InvestorID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcInstrumentMarginRateULField::HedgeFlag)
            .def_readwrite("LongMarginRatioByMoney", &CThostFtdcInstrumentMarginRateULField::LongMarginRatioByMoney)
            .def_readwrite("LongMarginRatioByVolume", &CThostFtdcInstrumentMarginRateULField::LongMarginRatioByVolume)
            .def_readwrite("ShortMarginRatioByMoney", &CThostFtdcInstrumentMarginRateULField::ShortMarginRatioByMoney)
            .def_readwrite("ShortMarginRatioByVolume", &CThostFtdcInstrumentMarginRateULField::ShortMarginRatioByVolume)
            ;

    py::class_<CThostFtdcFutureLimitPosiParamField>(structs, "CThostFtdcFutureLimitPosiParamField")
            .def(py::init<>())
            .def_readwrite("InvestorRange", &CThostFtdcFutureLimitPosiParamField::InvestorRange)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcFutureLimitPosiParamField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcFutureLimitPosiParamField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcFutureLimitPosiParamField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcFutureLimitPosiParamField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcFutureLimitPosiParamField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcFutureLimitPosiParamField::InvestorID));
                    }
            )
            .def_property(
                    "ProductID",
                    [](const CThostFtdcFutureLimitPosiParamField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcFutureLimitPosiParamField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcFutureLimitPosiParamField::ProductID));
                    }
            )
            .def_readwrite("SpecOpenVolume", &CThostFtdcFutureLimitPosiParamField::SpecOpenVolume)
            .def_readwrite("ArbiOpenVolume", &CThostFtdcFutureLimitPosiParamField::ArbiOpenVolume)
            .def_readwrite("OpenVolume", &CThostFtdcFutureLimitPosiParamField::OpenVolume)
            ;

    py::class_<CThostFtdcLoginForbiddenIPField>(structs, "CThostFtdcLoginForbiddenIPField")
            .def(py::init<>())
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcLoginForbiddenIPField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcLoginForbiddenIPField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcLoginForbiddenIPField::IPAddress));
                    }
            )
            ;

    py::class_<CThostFtdcIPListField>(structs, "CThostFtdcIPListField")
            .def(py::init<>())
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcIPListField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcIPListField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcIPListField::IPAddress));
                    }
            )
            .def_readwrite("IsWhite", &CThostFtdcIPListField::IsWhite)
            ;

    py::class_<CThostFtdcInputOptionSelfCloseField>(structs, "CThostFtdcInputOptionSelfCloseField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::InstrumentID));
                    }
            )
            .def_property(
                    "OptionSelfCloseRef",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.OptionSelfCloseRef);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseRef, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::OptionSelfCloseRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::UserID));
                    }
            )
            .def_readwrite("Volume", &CThostFtdcInputOptionSelfCloseField::Volume)
            .def_readwrite("RequestID", &CThostFtdcInputOptionSelfCloseField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::BusinessUnit));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcInputOptionSelfCloseField::HedgeFlag)
            .def_readwrite("OptSelfCloseFlag", &CThostFtdcInputOptionSelfCloseField::OptSelfCloseFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::CurrencyID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::ClientID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputOptionSelfCloseField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcInputOptionSelfCloseActionField>(structs, "CThostFtdcInputOptionSelfCloseActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::InvestorID));
                    }
            )
            .def_readwrite("OptionSelfCloseActionRef", &CThostFtdcInputOptionSelfCloseActionField::OptionSelfCloseActionRef)
            .def_property(
                    "OptionSelfCloseRef",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.OptionSelfCloseRef);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseRef, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::OptionSelfCloseRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcInputOptionSelfCloseActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcInputOptionSelfCloseActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcInputOptionSelfCloseActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OptionSelfCloseSysID",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.OptionSelfCloseSysID);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseSysID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::OptionSelfCloseSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcInputOptionSelfCloseActionField::ActionFlag)
            .def_property(
                    "UserID",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::UserID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::InstrumentID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcInputOptionSelfCloseActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcInputOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcInputOptionSelfCloseActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcOptionSelfCloseField>(structs, "CThostFtdcOptionSelfCloseField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::InstrumentID));
                    }
            )
            .def_property(
                    "OptionSelfCloseRef",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.OptionSelfCloseRef);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseRef, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::OptionSelfCloseRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::UserID));
                    }
            )
            .def_readwrite("Volume", &CThostFtdcOptionSelfCloseField::Volume)
            .def_readwrite("RequestID", &CThostFtdcOptionSelfCloseField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::BusinessUnit));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcOptionSelfCloseField::HedgeFlag)
            .def_readwrite("OptSelfCloseFlag", &CThostFtdcOptionSelfCloseField::OptSelfCloseFlag)
            .def_property(
                    "OptionSelfCloseLocalID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.OptionSelfCloseLocalID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseLocalID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::OptionSelfCloseLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcOptionSelfCloseField::InstallID)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcOptionSelfCloseField::OrderSubmitStatus)
            .def_readwrite("NotifySequence", &CThostFtdcOptionSelfCloseField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcOptionSelfCloseField::SettlementID)
            .def_property(
                    "OptionSelfCloseSysID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.OptionSelfCloseSysID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseSysID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::OptionSelfCloseSysID));
                    }
            )
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::InsertTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::CancelTime));
                    }
            )
            .def_readwrite("ExecResult", &CThostFtdcOptionSelfCloseField::ExecResult)
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcOptionSelfCloseField::SequenceNo)
            .def_readwrite("FrontID", &CThostFtdcOptionSelfCloseField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcOptionSelfCloseField::SessionID)
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::UserProductInfo));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::StatusMsg));
                    }
            )
            .def_property(
                    "ActiveUserID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.ActiveUserID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ActiveUserID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::ActiveUserID));
                    }
            )
            .def_readwrite("BrokerOptionSelfCloseSeq", &CThostFtdcOptionSelfCloseField::BrokerOptionSelfCloseSeq)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::CurrencyID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcOptionSelfCloseField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcOptionSelfCloseField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcOptionSelfCloseActionField>(structs, "CThostFtdcOptionSelfCloseActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::InvestorID));
                    }
            )
            .def_readwrite("OptionSelfCloseActionRef", &CThostFtdcOptionSelfCloseActionField::OptionSelfCloseActionRef)
            .def_property(
                    "OptionSelfCloseRef",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.OptionSelfCloseRef);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseRef, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::OptionSelfCloseRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcOptionSelfCloseActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcOptionSelfCloseActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcOptionSelfCloseActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OptionSelfCloseSysID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.OptionSelfCloseSysID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseSysID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::OptionSelfCloseSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcOptionSelfCloseActionField::ActionFlag)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcOptionSelfCloseActionField::InstallID)
            .def_property(
                    "OptionSelfCloseLocalID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.OptionSelfCloseLocalID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseLocalID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::OptionSelfCloseLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcOptionSelfCloseActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::UserID));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::StatusMsg));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::InstrumentID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcOptionSelfCloseActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcOptionSelfCloseActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryOptionSelfCloseField>(structs, "CThostFtdcQryOptionSelfCloseField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryOptionSelfCloseField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryOptionSelfCloseField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryOptionSelfCloseField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryOptionSelfCloseField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseField::ExchangeID));
                    }
            )
            .def_property(
                    "OptionSelfCloseSysID",
                    [](const CThostFtdcQryOptionSelfCloseField &self) {
                        return py::str(self.OptionSelfCloseSysID);
                    },
                    [](CThostFtdcQryOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseSysID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseField::OptionSelfCloseSysID));
                    }
            )
            .def_property(
                    "InsertTimeStart",
                    [](const CThostFtdcQryOptionSelfCloseField &self) {
                        return py::str(self.InsertTimeStart);
                    },
                    [](CThostFtdcQryOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeStart, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseField::InsertTimeStart));
                    }
            )
            .def_property(
                    "InsertTimeEnd",
                    [](const CThostFtdcQryOptionSelfCloseField &self) {
                        return py::str(self.InsertTimeEnd);
                    },
                    [](CThostFtdcQryOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InsertTimeEnd, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseField::InsertTimeEnd));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeOptionSelfCloseField>(structs, "CThostFtdcExchangeOptionSelfCloseField")
            .def(py::init<>())
            .def_readwrite("Volume", &CThostFtdcExchangeOptionSelfCloseField::Volume)
            .def_readwrite("RequestID", &CThostFtdcExchangeOptionSelfCloseField::RequestID)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::BusinessUnit));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcExchangeOptionSelfCloseField::HedgeFlag)
            .def_readwrite("OptSelfCloseFlag", &CThostFtdcExchangeOptionSelfCloseField::OptSelfCloseFlag)
            .def_property(
                    "OptionSelfCloseLocalID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.OptionSelfCloseLocalID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseLocalID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::OptionSelfCloseLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeOptionSelfCloseField::InstallID)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeOptionSelfCloseField::OrderSubmitStatus)
            .def_readwrite("NotifySequence", &CThostFtdcExchangeOptionSelfCloseField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcExchangeOptionSelfCloseField::SettlementID)
            .def_property(
                    "OptionSelfCloseSysID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.OptionSelfCloseSysID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseSysID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::OptionSelfCloseSysID));
                    }
            )
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::InsertTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::CancelTime));
                    }
            )
            .def_readwrite("ExecResult", &CThostFtdcExchangeOptionSelfCloseField::ExecResult)
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcExchangeOptionSelfCloseField::SequenceNo)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::BranchID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeOptionSelfCloseField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryOptionSelfCloseActionField>(structs, "CThostFtdcQryOptionSelfCloseActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryOptionSelfCloseActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryOptionSelfCloseActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseActionField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryOptionSelfCloseActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryOptionSelfCloseActionField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeOptionSelfCloseActionField>(structs, "CThostFtdcExchangeOptionSelfCloseActionField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OptionSelfCloseSysID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.OptionSelfCloseSysID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseSysID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::OptionSelfCloseSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcExchangeOptionSelfCloseActionField::ActionFlag)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcExchangeOptionSelfCloseActionField::InstallID)
            .def_property(
                    "OptionSelfCloseLocalID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.OptionSelfCloseLocalID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.OptionSelfCloseLocalID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::OptionSelfCloseLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcExchangeOptionSelfCloseActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::UserID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::BranchID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::MacAddress));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcExchangeOptionSelfCloseActionField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcExchangeOptionSelfCloseActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcExchangeOptionSelfCloseActionField::ExchangeInstID));
                    }
            )
            .def_readwrite("OptSelfCloseFlag", &CThostFtdcExchangeOptionSelfCloseActionField::OptSelfCloseFlag)
            ;

    py::class_<CThostFtdcSyncDelaySwapField>(structs, "CThostFtdcSyncDelaySwapField")
            .def(py::init<>())
            .def_property(
                    "DelaySwapSeqNo",
                    [](const CThostFtdcSyncDelaySwapField &self) {
                        return py::str(self.DelaySwapSeqNo);
                    },
                    [](CThostFtdcSyncDelaySwapField &self, const std::string &value) {
                        std::strncpy(self.DelaySwapSeqNo, value.c_str(), sizeof(CThostFtdcSyncDelaySwapField::DelaySwapSeqNo));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSyncDelaySwapField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSyncDelaySwapField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSyncDelaySwapField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSyncDelaySwapField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSyncDelaySwapField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSyncDelaySwapField::InvestorID));
                    }
            )
            .def_property(
                    "FromCurrencyID",
                    [](const CThostFtdcSyncDelaySwapField &self) {
                        return py::str(self.FromCurrencyID);
                    },
                    [](CThostFtdcSyncDelaySwapField &self, const std::string &value) {
                        std::strncpy(self.FromCurrencyID, value.c_str(), sizeof(CThostFtdcSyncDelaySwapField::FromCurrencyID));
                    }
            )
            .def_readwrite("FromAmount", &CThostFtdcSyncDelaySwapField::FromAmount)
            .def_readwrite("FromFrozenSwap", &CThostFtdcSyncDelaySwapField::FromFrozenSwap)
            .def_readwrite("FromRemainSwap", &CThostFtdcSyncDelaySwapField::FromRemainSwap)
            .def_property(
                    "ToCurrencyID",
                    [](const CThostFtdcSyncDelaySwapField &self) {
                        return py::str(self.ToCurrencyID);
                    },
                    [](CThostFtdcSyncDelaySwapField &self, const std::string &value) {
                        std::strncpy(self.ToCurrencyID, value.c_str(), sizeof(CThostFtdcSyncDelaySwapField::ToCurrencyID));
                    }
            )
            .def_readwrite("ToAmount", &CThostFtdcSyncDelaySwapField::ToAmount)
            ;

    py::class_<CThostFtdcQrySyncDelaySwapField>(structs, "CThostFtdcQrySyncDelaySwapField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySyncDelaySwapField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySyncDelaySwapField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySyncDelaySwapField::BrokerID));
                    }
            )
            .def_property(
                    "DelaySwapSeqNo",
                    [](const CThostFtdcQrySyncDelaySwapField &self) {
                        return py::str(self.DelaySwapSeqNo);
                    },
                    [](CThostFtdcQrySyncDelaySwapField &self, const std::string &value) {
                        std::strncpy(self.DelaySwapSeqNo, value.c_str(), sizeof(CThostFtdcQrySyncDelaySwapField::DelaySwapSeqNo));
                    }
            )
            ;

    py::class_<CThostFtdcInvestUnitField>(structs, "CThostFtdcInvestUnitField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestUnitField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestUnitField::InvestorID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInvestUnitField::InvestUnitID));
                    }
            )
            .def_property(
                    "InvestorUnitName",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.InvestorUnitName);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.InvestorUnitName, value.c_str(), sizeof(CThostFtdcInvestUnitField::InvestorUnitName));
                    }
            )
            .def_property(
                    "InvestorGroupID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.InvestorGroupID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.InvestorGroupID, value.c_str(), sizeof(CThostFtdcInvestUnitField::InvestorGroupID));
                    }
            )
            .def_property(
                    "CommModelID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.CommModelID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.CommModelID, value.c_str(), sizeof(CThostFtdcInvestUnitField::CommModelID));
                    }
            )
            .def_property(
                    "MarginModelID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.MarginModelID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.MarginModelID, value.c_str(), sizeof(CThostFtdcInvestUnitField::MarginModelID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcInvestUnitField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcInvestUnitField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcInvestUnitField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInvestUnitField>(structs, "CThostFtdcQryInvestUnitField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInvestUnitField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInvestUnitField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInvestUnitField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInvestUnitField::InvestorID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryInvestUnitField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryInvestUnitField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryInvestUnitField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcSecAgentCheckModeField>(structs, "CThostFtdcSecAgentCheckModeField")
            .def(py::init<>())
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSecAgentCheckModeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSecAgentCheckModeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSecAgentCheckModeField::InvestorID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSecAgentCheckModeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSecAgentCheckModeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSecAgentCheckModeField::BrokerID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcSecAgentCheckModeField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcSecAgentCheckModeField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcSecAgentCheckModeField::CurrencyID));
                    }
            )
            .def_property(
                    "BrokerSecAgentID",
                    [](const CThostFtdcSecAgentCheckModeField &self) {
                        return py::str(self.BrokerSecAgentID);
                    },
                    [](CThostFtdcSecAgentCheckModeField &self, const std::string &value) {
                        std::strncpy(self.BrokerSecAgentID, value.c_str(), sizeof(CThostFtdcSecAgentCheckModeField::BrokerSecAgentID));
                    }
            )
            .def_readwrite("CheckSelfAccount", &CThostFtdcSecAgentCheckModeField::CheckSelfAccount)
            ;

    py::class_<CThostFtdcSecAgentTradeInfoField>(structs, "CThostFtdcSecAgentTradeInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSecAgentTradeInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSecAgentTradeInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSecAgentTradeInfoField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerSecAgentID",
                    [](const CThostFtdcSecAgentTradeInfoField &self) {
                        return py::str(self.BrokerSecAgentID);
                    },
                    [](CThostFtdcSecAgentTradeInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerSecAgentID, value.c_str(), sizeof(CThostFtdcSecAgentTradeInfoField::BrokerSecAgentID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcSecAgentTradeInfoField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcSecAgentTradeInfoField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcSecAgentTradeInfoField::InvestorID));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcSecAgentTradeInfoField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcSecAgentTradeInfoField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcSecAgentTradeInfoField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcMarketDataField>(structs, "CThostFtdcMarketDataField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcMarketDataField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcMarketDataField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcMarketDataField::TradingDay));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcMarketDataField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcMarketDataField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcMarketDataField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcMarketDataField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcMarketDataField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcMarketDataField::ExchangeID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcMarketDataField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcMarketDataField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcMarketDataField::ExchangeInstID));
                    }
            )
            .def_readwrite("LastPrice", &CThostFtdcMarketDataField::LastPrice)
            .def_readwrite("PreSettlementPrice", &CThostFtdcMarketDataField::PreSettlementPrice)
            .def_readwrite("PreClosePrice", &CThostFtdcMarketDataField::PreClosePrice)
            .def_readwrite("PreOpenInterest", &CThostFtdcMarketDataField::PreOpenInterest)
            .def_readwrite("OpenPrice", &CThostFtdcMarketDataField::OpenPrice)
            .def_readwrite("HighestPrice", &CThostFtdcMarketDataField::HighestPrice)
            .def_readwrite("LowestPrice", &CThostFtdcMarketDataField::LowestPrice)
            .def_readwrite("Volume", &CThostFtdcMarketDataField::Volume)
            .def_readwrite("Turnover", &CThostFtdcMarketDataField::Turnover)
            .def_readwrite("OpenInterest", &CThostFtdcMarketDataField::OpenInterest)
            .def_readwrite("ClosePrice", &CThostFtdcMarketDataField::ClosePrice)
            .def_readwrite("SettlementPrice", &CThostFtdcMarketDataField::SettlementPrice)
            .def_readwrite("UpperLimitPrice", &CThostFtdcMarketDataField::UpperLimitPrice)
            .def_readwrite("LowerLimitPrice", &CThostFtdcMarketDataField::LowerLimitPrice)
            .def_readwrite("PreDelta", &CThostFtdcMarketDataField::PreDelta)
            .def_readwrite("CurrDelta", &CThostFtdcMarketDataField::CurrDelta)
            .def_property(
                    "UpdateTime",
                    [](const CThostFtdcMarketDataField &self) {
                        return py::str(self.UpdateTime);
                    },
                    [](CThostFtdcMarketDataField &self, const std::string &value) {
                        std::strncpy(self.UpdateTime, value.c_str(), sizeof(CThostFtdcMarketDataField::UpdateTime));
                    }
            )
            .def_readwrite("UpdateMillisec", &CThostFtdcMarketDataField::UpdateMillisec)
            .def_property(
                    "ActionDay",
                    [](const CThostFtdcMarketDataField &self) {
                        return py::str(self.ActionDay);
                    },
                    [](CThostFtdcMarketDataField &self, const std::string &value) {
                        std::strncpy(self.ActionDay, value.c_str(), sizeof(CThostFtdcMarketDataField::ActionDay));
                    }
            )
            ;

    py::class_<CThostFtdcMarketDataBaseField>(structs, "CThostFtdcMarketDataBaseField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcMarketDataBaseField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcMarketDataBaseField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcMarketDataBaseField::TradingDay));
                    }
            )
            .def_readwrite("PreSettlementPrice", &CThostFtdcMarketDataBaseField::PreSettlementPrice)
            .def_readwrite("PreClosePrice", &CThostFtdcMarketDataBaseField::PreClosePrice)
            .def_readwrite("PreOpenInterest", &CThostFtdcMarketDataBaseField::PreOpenInterest)
            .def_readwrite("PreDelta", &CThostFtdcMarketDataBaseField::PreDelta)
            ;

    py::class_<CThostFtdcMarketDataStaticField>(structs, "CThostFtdcMarketDataStaticField")
            .def(py::init<>())
            .def_readwrite("OpenPrice", &CThostFtdcMarketDataStaticField::OpenPrice)
            .def_readwrite("HighestPrice", &CThostFtdcMarketDataStaticField::HighestPrice)
            .def_readwrite("LowestPrice", &CThostFtdcMarketDataStaticField::LowestPrice)
            .def_readwrite("ClosePrice", &CThostFtdcMarketDataStaticField::ClosePrice)
            .def_readwrite("UpperLimitPrice", &CThostFtdcMarketDataStaticField::UpperLimitPrice)
            .def_readwrite("LowerLimitPrice", &CThostFtdcMarketDataStaticField::LowerLimitPrice)
            .def_readwrite("SettlementPrice", &CThostFtdcMarketDataStaticField::SettlementPrice)
            .def_readwrite("CurrDelta", &CThostFtdcMarketDataStaticField::CurrDelta)
            ;

    py::class_<CThostFtdcMarketDataLastMatchField>(structs, "CThostFtdcMarketDataLastMatchField")
            .def(py::init<>())
            .def_readwrite("LastPrice", &CThostFtdcMarketDataLastMatchField::LastPrice)
            .def_readwrite("Volume", &CThostFtdcMarketDataLastMatchField::Volume)
            .def_readwrite("Turnover", &CThostFtdcMarketDataLastMatchField::Turnover)
            .def_readwrite("OpenInterest", &CThostFtdcMarketDataLastMatchField::OpenInterest)
            ;

    py::class_<CThostFtdcMarketDataBestPriceField>(structs, "CThostFtdcMarketDataBestPriceField")
            .def(py::init<>())
            .def_readwrite("BidPrice1", &CThostFtdcMarketDataBestPriceField::BidPrice1)
            .def_readwrite("BidVolume1", &CThostFtdcMarketDataBestPriceField::BidVolume1)
            .def_readwrite("AskPrice1", &CThostFtdcMarketDataBestPriceField::AskPrice1)
            .def_readwrite("AskVolume1", &CThostFtdcMarketDataBestPriceField::AskVolume1)
            ;

    py::class_<CThostFtdcMarketDataBid23Field>(structs, "CThostFtdcMarketDataBid23Field")
            .def(py::init<>())
            .def_readwrite("BidPrice2", &CThostFtdcMarketDataBid23Field::BidPrice2)
            .def_readwrite("BidVolume2", &CThostFtdcMarketDataBid23Field::BidVolume2)
            .def_readwrite("BidPrice3", &CThostFtdcMarketDataBid23Field::BidPrice3)
            .def_readwrite("BidVolume3", &CThostFtdcMarketDataBid23Field::BidVolume3)
            ;

    py::class_<CThostFtdcMarketDataAsk23Field>(structs, "CThostFtdcMarketDataAsk23Field")
            .def(py::init<>())
            .def_readwrite("AskPrice2", &CThostFtdcMarketDataAsk23Field::AskPrice2)
            .def_readwrite("AskVolume2", &CThostFtdcMarketDataAsk23Field::AskVolume2)
            .def_readwrite("AskPrice3", &CThostFtdcMarketDataAsk23Field::AskPrice3)
            .def_readwrite("AskVolume3", &CThostFtdcMarketDataAsk23Field::AskVolume3)
            ;

    py::class_<CThostFtdcMarketDataBid45Field>(structs, "CThostFtdcMarketDataBid45Field")
            .def(py::init<>())
            .def_readwrite("BidPrice4", &CThostFtdcMarketDataBid45Field::BidPrice4)
            .def_readwrite("BidVolume4", &CThostFtdcMarketDataBid45Field::BidVolume4)
            .def_readwrite("BidPrice5", &CThostFtdcMarketDataBid45Field::BidPrice5)
            .def_readwrite("BidVolume5", &CThostFtdcMarketDataBid45Field::BidVolume5)
            ;

    py::class_<CThostFtdcMarketDataAsk45Field>(structs, "CThostFtdcMarketDataAsk45Field")
            .def(py::init<>())
            .def_readwrite("AskPrice4", &CThostFtdcMarketDataAsk45Field::AskPrice4)
            .def_readwrite("AskVolume4", &CThostFtdcMarketDataAsk45Field::AskVolume4)
            .def_readwrite("AskPrice5", &CThostFtdcMarketDataAsk45Field::AskPrice5)
            .def_readwrite("AskVolume5", &CThostFtdcMarketDataAsk45Field::AskVolume5)
            ;

    py::class_<CThostFtdcMarketDataUpdateTimeField>(structs, "CThostFtdcMarketDataUpdateTimeField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcMarketDataUpdateTimeField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcMarketDataUpdateTimeField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcMarketDataUpdateTimeField::InstrumentID));
                    }
            )
            .def_property(
                    "UpdateTime",
                    [](const CThostFtdcMarketDataUpdateTimeField &self) {
                        return py::str(self.UpdateTime);
                    },
                    [](CThostFtdcMarketDataUpdateTimeField &self, const std::string &value) {
                        std::strncpy(self.UpdateTime, value.c_str(), sizeof(CThostFtdcMarketDataUpdateTimeField::UpdateTime));
                    }
            )
            .def_readwrite("UpdateMillisec", &CThostFtdcMarketDataUpdateTimeField::UpdateMillisec)
            .def_property(
                    "ActionDay",
                    [](const CThostFtdcMarketDataUpdateTimeField &self) {
                        return py::str(self.ActionDay);
                    },
                    [](CThostFtdcMarketDataUpdateTimeField &self, const std::string &value) {
                        std::strncpy(self.ActionDay, value.c_str(), sizeof(CThostFtdcMarketDataUpdateTimeField::ActionDay));
                    }
            )
            ;

    py::class_<CThostFtdcMarketDataExchangeField>(structs, "CThostFtdcMarketDataExchangeField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcMarketDataExchangeField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcMarketDataExchangeField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcMarketDataExchangeField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcSpecificInstrumentField>(structs, "CThostFtdcSpecificInstrumentField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcSpecificInstrumentField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcSpecificInstrumentField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcSpecificInstrumentField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcInstrumentStatusField>(structs, "CThostFtdcInstrumentStatusField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInstrumentStatusField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInstrumentStatusField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInstrumentStatusField::ExchangeID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcInstrumentStatusField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcInstrumentStatusField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcInstrumentStatusField::ExchangeInstID));
                    }
            )
            .def_property(
                    "SettlementGroupID",
                    [](const CThostFtdcInstrumentStatusField &self) {
                        return py::str(self.SettlementGroupID);
                    },
                    [](CThostFtdcInstrumentStatusField &self, const std::string &value) {
                        std::strncpy(self.SettlementGroupID, value.c_str(), sizeof(CThostFtdcInstrumentStatusField::SettlementGroupID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInstrumentStatusField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInstrumentStatusField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInstrumentStatusField::InstrumentID));
                    }
            )
            .def_readwrite("InstrumentStatus", &CThostFtdcInstrumentStatusField::InstrumentStatus)
            .def_readwrite("TradingSegmentSN", &CThostFtdcInstrumentStatusField::TradingSegmentSN)
            .def_property(
                    "EnterTime",
                    [](const CThostFtdcInstrumentStatusField &self) {
                        return py::str(self.EnterTime);
                    },
                    [](CThostFtdcInstrumentStatusField &self, const std::string &value) {
                        std::strncpy(self.EnterTime, value.c_str(), sizeof(CThostFtdcInstrumentStatusField::EnterTime));
                    }
            )
            .def_readwrite("EnterReason", &CThostFtdcInstrumentStatusField::EnterReason)
            ;

    py::class_<CThostFtdcQryInstrumentStatusField>(structs, "CThostFtdcQryInstrumentStatusField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInstrumentStatusField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInstrumentStatusField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInstrumentStatusField::ExchangeID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcQryInstrumentStatusField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcQryInstrumentStatusField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcQryInstrumentStatusField::ExchangeInstID));
                    }
            )
            ;

    py::class_<CThostFtdcInvestorAccountField>(structs, "CThostFtdcInvestorAccountField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorAccountField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestorAccountField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestorAccountField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestorAccountField::InvestorID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcInvestorAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcInvestorAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcInvestorAccountField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcInvestorAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcInvestorAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcInvestorAccountField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcPositionProfitAlgorithmField>(structs, "CThostFtdcPositionProfitAlgorithmField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcPositionProfitAlgorithmField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcPositionProfitAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcPositionProfitAlgorithmField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcPositionProfitAlgorithmField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcPositionProfitAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcPositionProfitAlgorithmField::AccountID));
                    }
            )
            .def_readwrite("Algorithm", &CThostFtdcPositionProfitAlgorithmField::Algorithm)
            .def_property(
                    "Memo",
                    [](const CThostFtdcPositionProfitAlgorithmField &self) {
                        return py::str(self.Memo);
                    },
                    [](CThostFtdcPositionProfitAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.Memo, value.c_str(), sizeof(CThostFtdcPositionProfitAlgorithmField::Memo));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcPositionProfitAlgorithmField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcPositionProfitAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcPositionProfitAlgorithmField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcDiscountField>(structs, "CThostFtdcDiscountField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcDiscountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcDiscountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcDiscountField::BrokerID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcDiscountField::InvestorRange)
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcDiscountField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcDiscountField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcDiscountField::InvestorID));
                    }
            )
            .def_readwrite("Discount", &CThostFtdcDiscountField::Discount)
            ;

    py::class_<CThostFtdcQryTransferBankField>(structs, "CThostFtdcQryTransferBankField")
            .def(py::init<>())
            .def_property(
                    "BankID",
                    [](const CThostFtdcQryTransferBankField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcQryTransferBankField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcQryTransferBankField::BankID));
                    }
            )
            .def_property(
                    "BankBrchID",
                    [](const CThostFtdcQryTransferBankField &self) {
                        return py::str(self.BankBrchID);
                    },
                    [](CThostFtdcQryTransferBankField &self, const std::string &value) {
                        std::strncpy(self.BankBrchID, value.c_str(), sizeof(CThostFtdcQryTransferBankField::BankBrchID));
                    }
            )
            ;

    py::class_<CThostFtdcTransferBankField>(structs, "CThostFtdcTransferBankField")
            .def(py::init<>())
            .def_property(
                    "BankID",
                    [](const CThostFtdcTransferBankField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcTransferBankField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcTransferBankField::BankID));
                    }
            )
            .def_property(
                    "BankBrchID",
                    [](const CThostFtdcTransferBankField &self) {
                        return py::str(self.BankBrchID);
                    },
                    [](CThostFtdcTransferBankField &self, const std::string &value) {
                        std::strncpy(self.BankBrchID, value.c_str(), sizeof(CThostFtdcTransferBankField::BankBrchID));
                    }
            )
            .def_property(
                    "BankName",
                    [](const CThostFtdcTransferBankField &self) {
                        return py::str(self.BankName);
                    },
                    [](CThostFtdcTransferBankField &self, const std::string &value) {
                        std::strncpy(self.BankName, value.c_str(), sizeof(CThostFtdcTransferBankField::BankName));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcTransferBankField::IsActive)
            ;

    py::class_<CThostFtdcQryInvestorPositionDetailField>(structs, "CThostFtdcQryInvestorPositionDetailField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInvestorPositionDetailField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionDetailField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInvestorPositionDetailField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionDetailField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryInvestorPositionDetailField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionDetailField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInvestorPositionDetailField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionDetailField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryInvestorPositionDetailField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionDetailField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcInvestorPositionDetailField>(structs, "CThostFtdcInvestorPositionDetailField")
            .def(py::init<>())
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::InstrumentID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::InvestorID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcInvestorPositionDetailField::HedgeFlag)
            .def_readwrite("Direction", &CThostFtdcInvestorPositionDetailField::Direction)
            .def_property(
                    "OpenDate",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.OpenDate);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.OpenDate, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::OpenDate));
                    }
            )
            .def_property(
                    "TradeID",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.TradeID);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.TradeID, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::TradeID));
                    }
            )
            .def_readwrite("Volume", &CThostFtdcInvestorPositionDetailField::Volume)
            .def_readwrite("OpenPrice", &CThostFtdcInvestorPositionDetailField::OpenPrice)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcInvestorPositionDetailField::SettlementID)
            .def_readwrite("TradeType", &CThostFtdcInvestorPositionDetailField::TradeType)
            .def_property(
                    "CombInstrumentID",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.CombInstrumentID);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.CombInstrumentID, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::CombInstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::ExchangeID));
                    }
            )
            .def_readwrite("CloseProfitByDate", &CThostFtdcInvestorPositionDetailField::CloseProfitByDate)
            .def_readwrite("CloseProfitByTrade", &CThostFtdcInvestorPositionDetailField::CloseProfitByTrade)
            .def_readwrite("PositionProfitByDate", &CThostFtdcInvestorPositionDetailField::PositionProfitByDate)
            .def_readwrite("PositionProfitByTrade", &CThostFtdcInvestorPositionDetailField::PositionProfitByTrade)
            .def_readwrite("Margin", &CThostFtdcInvestorPositionDetailField::Margin)
            .def_readwrite("ExchMargin", &CThostFtdcInvestorPositionDetailField::ExchMargin)
            .def_readwrite("MarginRateByMoney", &CThostFtdcInvestorPositionDetailField::MarginRateByMoney)
            .def_readwrite("MarginRateByVolume", &CThostFtdcInvestorPositionDetailField::MarginRateByVolume)
            .def_readwrite("LastSettlementPrice", &CThostFtdcInvestorPositionDetailField::LastSettlementPrice)
            .def_readwrite("SettlementPrice", &CThostFtdcInvestorPositionDetailField::SettlementPrice)
            .def_readwrite("CloseVolume", &CThostFtdcInvestorPositionDetailField::CloseVolume)
            .def_readwrite("CloseAmount", &CThostFtdcInvestorPositionDetailField::CloseAmount)
            .def_readwrite("TimeFirstVolume", &CThostFtdcInvestorPositionDetailField::TimeFirstVolume)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInvestorPositionDetailField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInvestorPositionDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInvestorPositionDetailField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcTradingAccountPasswordField>(structs, "CThostFtdcTradingAccountPasswordField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingAccountPasswordField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingAccountPasswordField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcTradingAccountPasswordField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcTradingAccountPasswordField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcTradingAccountPasswordField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcTradingAccountPasswordField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordField::Password));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcTradingAccountPasswordField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcTradingAccountPasswordField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcMDTraderOfferField>(structs, "CThostFtdcMDTraderOfferField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::ExchangeID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::TraderID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::ParticipantID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcMDTraderOfferField::InstallID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::OrderLocalID));
                    }
            )
            .def_readwrite("TraderConnectStatus", &CThostFtdcMDTraderOfferField::TraderConnectStatus)
            .def_property(
                    "ConnectRequestDate",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.ConnectRequestDate);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectRequestDate, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::ConnectRequestDate));
                    }
            )
            .def_property(
                    "ConnectRequestTime",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.ConnectRequestTime);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectRequestTime, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::ConnectRequestTime));
                    }
            )
            .def_property(
                    "LastReportDate",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.LastReportDate);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.LastReportDate, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::LastReportDate));
                    }
            )
            .def_property(
                    "LastReportTime",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.LastReportTime);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.LastReportTime, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::LastReportTime));
                    }
            )
            .def_property(
                    "ConnectDate",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.ConnectDate);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectDate, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::ConnectDate));
                    }
            )
            .def_property(
                    "ConnectTime",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.ConnectTime);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ConnectTime, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::ConnectTime));
                    }
            )
            .def_property(
                    "StartDate",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.StartDate);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.StartDate, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::StartDate));
                    }
            )
            .def_property(
                    "StartTime",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.StartTime);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.StartTime, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::StartTime));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::BrokerID));
                    }
            )
            .def_property(
                    "MaxTradeID",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.MaxTradeID);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.MaxTradeID, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::MaxTradeID));
                    }
            )
            .def_property(
                    "MaxOrderMessageReference",
                    [](const CThostFtdcMDTraderOfferField &self) {
                        return py::str(self.MaxOrderMessageReference);
                    },
                    [](CThostFtdcMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.MaxOrderMessageReference, value.c_str(), sizeof(CThostFtdcMDTraderOfferField::MaxOrderMessageReference));
                    }
            )
            ;

    py::class_<CThostFtdcQryMDTraderOfferField>(structs, "CThostFtdcQryMDTraderOfferField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryMDTraderOfferField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryMDTraderOfferField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcQryMDTraderOfferField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcQryMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcQryMDTraderOfferField::ParticipantID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcQryMDTraderOfferField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcQryMDTraderOfferField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcQryMDTraderOfferField::TraderID));
                    }
            )
            ;

    py::class_<CThostFtdcQryNoticeField>(structs, "CThostFtdcQryNoticeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryNoticeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryNoticeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryNoticeField::BrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcNoticeField>(structs, "CThostFtdcNoticeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcNoticeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcNoticeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcNoticeField::BrokerID));
                    }
            )
            .def_property(
                    "Content",
                    [](const CThostFtdcNoticeField &self) {
                        return py::str(self.Content);
                    },
                    [](CThostFtdcNoticeField &self, const std::string &value) {
                        std::strncpy(self.Content, value.c_str(), sizeof(CThostFtdcNoticeField::Content));
                    }
            )
            .def_property(
                    "SequenceLabel",
                    [](const CThostFtdcNoticeField &self) {
                        return py::str(self.SequenceLabel);
                    },
                    [](CThostFtdcNoticeField &self, const std::string &value) {
                        std::strncpy(self.SequenceLabel, value.c_str(), sizeof(CThostFtdcNoticeField::SequenceLabel));
                    }
            )
            ;

    py::class_<CThostFtdcUserRightField>(structs, "CThostFtdcUserRightField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcUserRightField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcUserRightField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcUserRightField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcUserRightField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcUserRightField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcUserRightField::UserID));
                    }
            )
            .def_readwrite("UserRightType", &CThostFtdcUserRightField::UserRightType)
            .def_readwrite("IsForbidden", &CThostFtdcUserRightField::IsForbidden)
            ;

    py::class_<CThostFtdcQrySettlementInfoConfirmField>(structs, "CThostFtdcQrySettlementInfoConfirmField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySettlementInfoConfirmField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoConfirmField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQrySettlementInfoConfirmField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQrySettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoConfirmField::InvestorID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQrySettlementInfoConfirmField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQrySettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoConfirmField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQrySettlementInfoConfirmField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQrySettlementInfoConfirmField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQrySettlementInfoConfirmField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcLoadSettlementInfoField>(structs, "CThostFtdcLoadSettlementInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcLoadSettlementInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcLoadSettlementInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcLoadSettlementInfoField::BrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcBrokerWithdrawAlgorithmField>(structs, "CThostFtdcBrokerWithdrawAlgorithmField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerWithdrawAlgorithmField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerWithdrawAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerWithdrawAlgorithmField::BrokerID));
                    }
            )
            .def_readwrite("WithdrawAlgorithm", &CThostFtdcBrokerWithdrawAlgorithmField::WithdrawAlgorithm)
            .def_readwrite("UsingRatio", &CThostFtdcBrokerWithdrawAlgorithmField::UsingRatio)
            .def_readwrite("IncludeCloseProfit", &CThostFtdcBrokerWithdrawAlgorithmField::IncludeCloseProfit)
            .def_readwrite("AllWithoutTrade", &CThostFtdcBrokerWithdrawAlgorithmField::AllWithoutTrade)
            .def_readwrite("AvailIncludeCloseProfit", &CThostFtdcBrokerWithdrawAlgorithmField::AvailIncludeCloseProfit)
            .def_readwrite("IsBrokerUserEvent", &CThostFtdcBrokerWithdrawAlgorithmField::IsBrokerUserEvent)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcBrokerWithdrawAlgorithmField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcBrokerWithdrawAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcBrokerWithdrawAlgorithmField::CurrencyID));
                    }
            )
            .def_readwrite("FundMortgageRatio", &CThostFtdcBrokerWithdrawAlgorithmField::FundMortgageRatio)
            .def_readwrite("BalanceAlgorithm", &CThostFtdcBrokerWithdrawAlgorithmField::BalanceAlgorithm)
            ;

    py::class_<CThostFtdcTradingAccountPasswordUpdateV1Field>(structs, "CThostFtdcTradingAccountPasswordUpdateV1Field")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingAccountPasswordUpdateV1Field &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateV1Field &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateV1Field::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcTradingAccountPasswordUpdateV1Field &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateV1Field &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateV1Field::InvestorID));
                    }
            )
            .def_property(
                    "OldPassword",
                    [](const CThostFtdcTradingAccountPasswordUpdateV1Field &self) {
                        return py::str(self.OldPassword);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateV1Field &self, const std::string &value) {
                        std::strncpy(self.OldPassword, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateV1Field::OldPassword));
                    }
            )
            .def_property(
                    "NewPassword",
                    [](const CThostFtdcTradingAccountPasswordUpdateV1Field &self) {
                        return py::str(self.NewPassword);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateV1Field &self, const std::string &value) {
                        std::strncpy(self.NewPassword, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateV1Field::NewPassword));
                    }
            )
            ;

    py::class_<CThostFtdcTradingAccountPasswordUpdateField>(structs, "CThostFtdcTradingAccountPasswordUpdateField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingAccountPasswordUpdateField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcTradingAccountPasswordUpdateField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateField::AccountID));
                    }
            )
            .def_property(
                    "OldPassword",
                    [](const CThostFtdcTradingAccountPasswordUpdateField &self) {
                        return py::str(self.OldPassword);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.OldPassword, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateField::OldPassword));
                    }
            )
            .def_property(
                    "NewPassword",
                    [](const CThostFtdcTradingAccountPasswordUpdateField &self) {
                        return py::str(self.NewPassword);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.NewPassword, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateField::NewPassword));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcTradingAccountPasswordUpdateField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcTradingAccountPasswordUpdateField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcTradingAccountPasswordUpdateField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcQryCombinationLegField>(structs, "CThostFtdcQryCombinationLegField")
            .def(py::init<>())
            .def_property(
                    "CombInstrumentID",
                    [](const CThostFtdcQryCombinationLegField &self) {
                        return py::str(self.CombInstrumentID);
                    },
                    [](CThostFtdcQryCombinationLegField &self, const std::string &value) {
                        std::strncpy(self.CombInstrumentID, value.c_str(), sizeof(CThostFtdcQryCombinationLegField::CombInstrumentID));
                    }
            )
            .def_readwrite("LegID", &CThostFtdcQryCombinationLegField::LegID)
            .def_property(
                    "LegInstrumentID",
                    [](const CThostFtdcQryCombinationLegField &self) {
                        return py::str(self.LegInstrumentID);
                    },
                    [](CThostFtdcQryCombinationLegField &self, const std::string &value) {
                        std::strncpy(self.LegInstrumentID, value.c_str(), sizeof(CThostFtdcQryCombinationLegField::LegInstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcQrySyncStatusField>(structs, "CThostFtdcQrySyncStatusField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcQrySyncStatusField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcQrySyncStatusField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcQrySyncStatusField::TradingDay));
                    }
            )
            ;

    py::class_<CThostFtdcCombinationLegField>(structs, "CThostFtdcCombinationLegField")
            .def(py::init<>())
            .def_property(
                    "CombInstrumentID",
                    [](const CThostFtdcCombinationLegField &self) {
                        return py::str(self.CombInstrumentID);
                    },
                    [](CThostFtdcCombinationLegField &self, const std::string &value) {
                        std::strncpy(self.CombInstrumentID, value.c_str(), sizeof(CThostFtdcCombinationLegField::CombInstrumentID));
                    }
            )
            .def_readwrite("LegID", &CThostFtdcCombinationLegField::LegID)
            .def_property(
                    "LegInstrumentID",
                    [](const CThostFtdcCombinationLegField &self) {
                        return py::str(self.LegInstrumentID);
                    },
                    [](CThostFtdcCombinationLegField &self, const std::string &value) {
                        std::strncpy(self.LegInstrumentID, value.c_str(), sizeof(CThostFtdcCombinationLegField::LegInstrumentID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcCombinationLegField::Direction)
            .def_readwrite("LegMultiple", &CThostFtdcCombinationLegField::LegMultiple)
            .def_readwrite("ImplyLevel", &CThostFtdcCombinationLegField::ImplyLevel)
            ;

    py::class_<CThostFtdcSyncStatusField>(structs, "CThostFtdcSyncStatusField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcSyncStatusField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcSyncStatusField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcSyncStatusField::TradingDay));
                    }
            )
            .def_readwrite("DataSyncStatus", &CThostFtdcSyncStatusField::DataSyncStatus)
            ;

    py::class_<CThostFtdcQryLinkManField>(structs, "CThostFtdcQryLinkManField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryLinkManField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryLinkManField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryLinkManField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryLinkManField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryLinkManField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryLinkManField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcLinkManField>(structs, "CThostFtdcLinkManField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcLinkManField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcLinkManField::InvestorID));
                    }
            )
            .def_readwrite("PersonType", &CThostFtdcLinkManField::PersonType)
            .def_readwrite("IdentifiedCardType", &CThostFtdcLinkManField::IdentifiedCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcLinkManField::IdentifiedCardNo));
                    }
            )
            .def_property(
                    "PersonName",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.PersonName);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.PersonName, value.c_str(), sizeof(CThostFtdcLinkManField::PersonName));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcLinkManField::Telephone));
                    }
            )
            .def_property(
                    "Address",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcLinkManField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcLinkManField::ZipCode));
                    }
            )
            .def_readwrite("Priority", &CThostFtdcLinkManField::Priority)
            .def_property(
                    "UOAZipCode",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.UOAZipCode);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.UOAZipCode, value.c_str(), sizeof(CThostFtdcLinkManField::UOAZipCode));
                    }
            )
            .def_property(
                    "PersonFullName",
                    [](const CThostFtdcLinkManField &self) {
                        return py::str(self.PersonFullName);
                    },
                    [](CThostFtdcLinkManField &self, const std::string &value) {
                        std::strncpy(self.PersonFullName, value.c_str(), sizeof(CThostFtdcLinkManField::PersonFullName));
                    }
            )
            ;

    py::class_<CThostFtdcQryBrokerUserEventField>(structs, "CThostFtdcQryBrokerUserEventField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryBrokerUserEventField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryBrokerUserEventField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQryBrokerUserEventField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQryBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQryBrokerUserEventField::UserID));
                    }
            )
            .def_readwrite("UserEventType", &CThostFtdcQryBrokerUserEventField::UserEventType)
            ;

    py::class_<CThostFtdcBrokerUserEventField>(structs, "CThostFtdcBrokerUserEventField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerUserEventField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerUserEventField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcBrokerUserEventField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcBrokerUserEventField::UserID));
                    }
            )
            .def_readwrite("UserEventType", &CThostFtdcBrokerUserEventField::UserEventType)
            .def_readwrite("EventSequenceNo", &CThostFtdcBrokerUserEventField::EventSequenceNo)
            .def_property(
                    "EventDate",
                    [](const CThostFtdcBrokerUserEventField &self) {
                        return py::str(self.EventDate);
                    },
                    [](CThostFtdcBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.EventDate, value.c_str(), sizeof(CThostFtdcBrokerUserEventField::EventDate));
                    }
            )
            .def_property(
                    "EventTime",
                    [](const CThostFtdcBrokerUserEventField &self) {
                        return py::str(self.EventTime);
                    },
                    [](CThostFtdcBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.EventTime, value.c_str(), sizeof(CThostFtdcBrokerUserEventField::EventTime));
                    }
            )
            .def_property(
                    "UserEventInfo",
                    [](const CThostFtdcBrokerUserEventField &self) {
                        return py::str(self.UserEventInfo);
                    },
                    [](CThostFtdcBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.UserEventInfo, value.c_str(), sizeof(CThostFtdcBrokerUserEventField::UserEventInfo));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcBrokerUserEventField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcBrokerUserEventField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcBrokerUserEventField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcBrokerUserEventField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcBrokerUserEventField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcQryContractBankField>(structs, "CThostFtdcQryContractBankField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryContractBankField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryContractBankField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryContractBankField::BrokerID));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcQryContractBankField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcQryContractBankField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcQryContractBankField::BankID));
                    }
            )
            .def_property(
                    "BankBrchID",
                    [](const CThostFtdcQryContractBankField &self) {
                        return py::str(self.BankBrchID);
                    },
                    [](CThostFtdcQryContractBankField &self, const std::string &value) {
                        std::strncpy(self.BankBrchID, value.c_str(), sizeof(CThostFtdcQryContractBankField::BankBrchID));
                    }
            )
            ;

    py::class_<CThostFtdcContractBankField>(structs, "CThostFtdcContractBankField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcContractBankField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcContractBankField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcContractBankField::BrokerID));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcContractBankField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcContractBankField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcContractBankField::BankID));
                    }
            )
            .def_property(
                    "BankBrchID",
                    [](const CThostFtdcContractBankField &self) {
                        return py::str(self.BankBrchID);
                    },
                    [](CThostFtdcContractBankField &self, const std::string &value) {
                        std::strncpy(self.BankBrchID, value.c_str(), sizeof(CThostFtdcContractBankField::BankBrchID));
                    }
            )
            .def_property(
                    "BankName",
                    [](const CThostFtdcContractBankField &self) {
                        return py::str(self.BankName);
                    },
                    [](CThostFtdcContractBankField &self, const std::string &value) {
                        std::strncpy(self.BankName, value.c_str(), sizeof(CThostFtdcContractBankField::BankName));
                    }
            )
            ;

    py::class_<CThostFtdcInvestorPositionCombineDetailField>(structs, "CThostFtdcInvestorPositionCombineDetailField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::TradingDay));
                    }
            )
            .def_property(
                    "OpenDate",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.OpenDate);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.OpenDate, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::OpenDate));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::ExchangeID));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcInvestorPositionCombineDetailField::SettlementID)
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::InvestorID));
                    }
            )
            .def_property(
                    "ComTradeID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.ComTradeID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.ComTradeID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::ComTradeID));
                    }
            )
            .def_property(
                    "TradeID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.TradeID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.TradeID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::TradeID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::InstrumentID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcInvestorPositionCombineDetailField::HedgeFlag)
            .def_readwrite("Direction", &CThostFtdcInvestorPositionCombineDetailField::Direction)
            .def_readwrite("TotalAmt", &CThostFtdcInvestorPositionCombineDetailField::TotalAmt)
            .def_readwrite("Margin", &CThostFtdcInvestorPositionCombineDetailField::Margin)
            .def_readwrite("ExchMargin", &CThostFtdcInvestorPositionCombineDetailField::ExchMargin)
            .def_readwrite("MarginRateByMoney", &CThostFtdcInvestorPositionCombineDetailField::MarginRateByMoney)
            .def_readwrite("MarginRateByVolume", &CThostFtdcInvestorPositionCombineDetailField::MarginRateByVolume)
            .def_readwrite("LegID", &CThostFtdcInvestorPositionCombineDetailField::LegID)
            .def_readwrite("LegMultiple", &CThostFtdcInvestorPositionCombineDetailField::LegMultiple)
            .def_property(
                    "CombInstrumentID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.CombInstrumentID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.CombInstrumentID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::CombInstrumentID));
                    }
            )
            .def_readwrite("TradeGroupID", &CThostFtdcInvestorPositionCombineDetailField::TradeGroupID)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInvestorPositionCombineDetailField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInvestorPositionCombineDetailField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcParkedOrderField>(structs, "CThostFtdcParkedOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcParkedOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcParkedOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcParkedOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcParkedOrderField::OrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcParkedOrderField::UserID));
                    }
            )
            .def_readwrite("OrderPriceType", &CThostFtdcParkedOrderField::OrderPriceType)
            .def_readwrite("Direction", &CThostFtdcParkedOrderField::Direction)
            .def_property(
                    "CombOffsetFlag",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.CombOffsetFlag);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.CombOffsetFlag, value.c_str(), sizeof(CThostFtdcParkedOrderField::CombOffsetFlag));
                    }
            )
            .def_property(
                    "CombHedgeFlag",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.CombHedgeFlag);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.CombHedgeFlag, value.c_str(), sizeof(CThostFtdcParkedOrderField::CombHedgeFlag));
                    }
            )
            .def_readwrite("LimitPrice", &CThostFtdcParkedOrderField::LimitPrice)
            .def_readwrite("VolumeTotalOriginal", &CThostFtdcParkedOrderField::VolumeTotalOriginal)
            .def_readwrite("TimeCondition", &CThostFtdcParkedOrderField::TimeCondition)
            .def_property(
                    "GTDDate",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.GTDDate);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.GTDDate, value.c_str(), sizeof(CThostFtdcParkedOrderField::GTDDate));
                    }
            )
            .def_readwrite("VolumeCondition", &CThostFtdcParkedOrderField::VolumeCondition)
            .def_readwrite("MinVolume", &CThostFtdcParkedOrderField::MinVolume)
            .def_readwrite("ContingentCondition", &CThostFtdcParkedOrderField::ContingentCondition)
            .def_readwrite("StopPrice", &CThostFtdcParkedOrderField::StopPrice)
            .def_readwrite("ForceCloseReason", &CThostFtdcParkedOrderField::ForceCloseReason)
            .def_readwrite("IsAutoSuspend", &CThostFtdcParkedOrderField::IsAutoSuspend)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcParkedOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcParkedOrderField::RequestID)
            .def_readwrite("UserForceClose", &CThostFtdcParkedOrderField::UserForceClose)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcParkedOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "ParkedOrderID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.ParkedOrderID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.ParkedOrderID, value.c_str(), sizeof(CThostFtdcParkedOrderField::ParkedOrderID));
                    }
            )
            .def_readwrite("UserType", &CThostFtdcParkedOrderField::UserType)
            .def_readwrite("Status", &CThostFtdcParkedOrderField::Status)
            .def_readwrite("ErrorID", &CThostFtdcParkedOrderField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcParkedOrderField::ErrorMsg));
                    }
            )
            .def_readwrite("IsSwapOrder", &CThostFtdcParkedOrderField::IsSwapOrder)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcParkedOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcParkedOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcParkedOrderField::ClientID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcParkedOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcParkedOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcParkedOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcParkedOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcParkedOrderActionField>(structs, "CThostFtdcParkedOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("OrderActionRef", &CThostFtdcParkedOrderActionField::OrderActionRef)
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::OrderRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcParkedOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcParkedOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcParkedOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::OrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcParkedOrderActionField::ActionFlag)
            .def_readwrite("LimitPrice", &CThostFtdcParkedOrderActionField::LimitPrice)
            .def_readwrite("VolumeChange", &CThostFtdcParkedOrderActionField::VolumeChange)
            .def_property(
                    "UserID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::UserID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "ParkedOrderActionID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.ParkedOrderActionID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParkedOrderActionID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::ParkedOrderActionID));
                    }
            )
            .def_readwrite("UserType", &CThostFtdcParkedOrderActionField::UserType)
            .def_readwrite("Status", &CThostFtdcParkedOrderActionField::Status)
            .def_readwrite("ErrorID", &CThostFtdcParkedOrderActionField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::ErrorMsg));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcParkedOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcParkedOrderActionField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryParkedOrderField>(structs, "CThostFtdcQryParkedOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryParkedOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryParkedOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryParkedOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryParkedOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryParkedOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryParkedOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryParkedOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryParkedOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryParkedOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryParkedOrderField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryParkedOrderActionField>(structs, "CThostFtdcQryParkedOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryParkedOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryParkedOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryParkedOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryParkedOrderActionField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryParkedOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryParkedOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryParkedOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryParkedOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryParkedOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryParkedOrderActionField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcRemoveParkedOrderField>(structs, "CThostFtdcRemoveParkedOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRemoveParkedOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRemoveParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcRemoveParkedOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcRemoveParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderField::InvestorID));
                    }
            )
            .def_property(
                    "ParkedOrderID",
                    [](const CThostFtdcRemoveParkedOrderField &self) {
                        return py::str(self.ParkedOrderID);
                    },
                    [](CThostFtdcRemoveParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.ParkedOrderID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderField::ParkedOrderID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcRemoveParkedOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcRemoveParkedOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcRemoveParkedOrderActionField>(structs, "CThostFtdcRemoveParkedOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRemoveParkedOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRemoveParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcRemoveParkedOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcRemoveParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderActionField::InvestorID));
                    }
            )
            .def_property(
                    "ParkedOrderActionID",
                    [](const CThostFtdcRemoveParkedOrderActionField &self) {
                        return py::str(self.ParkedOrderActionID);
                    },
                    [](CThostFtdcRemoveParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParkedOrderActionID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderActionField::ParkedOrderActionID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcRemoveParkedOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcRemoveParkedOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcRemoveParkedOrderActionField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcInvestorWithdrawAlgorithmField>(structs, "CThostFtdcInvestorWithdrawAlgorithmField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorWithdrawAlgorithmField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorWithdrawAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorWithdrawAlgorithmField::BrokerID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcInvestorWithdrawAlgorithmField::InvestorRange)
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestorWithdrawAlgorithmField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestorWithdrawAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestorWithdrawAlgorithmField::InvestorID));
                    }
            )
            .def_readwrite("UsingRatio", &CThostFtdcInvestorWithdrawAlgorithmField::UsingRatio)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcInvestorWithdrawAlgorithmField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcInvestorWithdrawAlgorithmField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcInvestorWithdrawAlgorithmField::CurrencyID));
                    }
            )
            .def_readwrite("FundMortgageRatio", &CThostFtdcInvestorWithdrawAlgorithmField::FundMortgageRatio)
            ;

    py::class_<CThostFtdcQryInvestorPositionCombineDetailField>(structs, "CThostFtdcQryInvestorPositionCombineDetailField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInvestorPositionCombineDetailField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionCombineDetailField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInvestorPositionCombineDetailField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionCombineDetailField::InvestorID));
                    }
            )
            .def_property(
                    "CombInstrumentID",
                    [](const CThostFtdcQryInvestorPositionCombineDetailField &self) {
                        return py::str(self.CombInstrumentID);
                    },
                    [](CThostFtdcQryInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.CombInstrumentID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionCombineDetailField::CombInstrumentID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInvestorPositionCombineDetailField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionCombineDetailField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryInvestorPositionCombineDetailField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryInvestorPositionCombineDetailField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryInvestorPositionCombineDetailField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcMarketDataAveragePriceField>(structs, "CThostFtdcMarketDataAveragePriceField")
            .def(py::init<>())
            .def_readwrite("AveragePrice", &CThostFtdcMarketDataAveragePriceField::AveragePrice)
            ;

    py::class_<CThostFtdcVerifyInvestorPasswordField>(structs, "CThostFtdcVerifyInvestorPasswordField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcVerifyInvestorPasswordField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcVerifyInvestorPasswordField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcVerifyInvestorPasswordField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcVerifyInvestorPasswordField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcVerifyInvestorPasswordField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcVerifyInvestorPasswordField::InvestorID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcVerifyInvestorPasswordField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcVerifyInvestorPasswordField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcVerifyInvestorPasswordField::Password));
                    }
            )
            ;

    py::class_<CThostFtdcUserIPField>(structs, "CThostFtdcUserIPField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcUserIPField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcUserIPField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcUserIPField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcUserIPField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcUserIPField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcUserIPField::UserID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcUserIPField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcUserIPField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcUserIPField::IPAddress));
                    }
            )
            .def_property(
                    "IPMask",
                    [](const CThostFtdcUserIPField &self) {
                        return py::str(self.IPMask);
                    },
                    [](CThostFtdcUserIPField &self, const std::string &value) {
                        std::strncpy(self.IPMask, value.c_str(), sizeof(CThostFtdcUserIPField::IPMask));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcUserIPField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcUserIPField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcUserIPField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcTradingNoticeInfoField>(structs, "CThostFtdcTradingNoticeInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingNoticeInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingNoticeInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingNoticeInfoField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcTradingNoticeInfoField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcTradingNoticeInfoField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcTradingNoticeInfoField::InvestorID));
                    }
            )
            .def_property(
                    "SendTime",
                    [](const CThostFtdcTradingNoticeInfoField &self) {
                        return py::str(self.SendTime);
                    },
                    [](CThostFtdcTradingNoticeInfoField &self, const std::string &value) {
                        std::strncpy(self.SendTime, value.c_str(), sizeof(CThostFtdcTradingNoticeInfoField::SendTime));
                    }
            )
            .def_property(
                    "FieldContent",
                    [](const CThostFtdcTradingNoticeInfoField &self) {
                        return py::str(self.FieldContent);
                    },
                    [](CThostFtdcTradingNoticeInfoField &self, const std::string &value) {
                        std::strncpy(self.FieldContent, value.c_str(), sizeof(CThostFtdcTradingNoticeInfoField::FieldContent));
                    }
            )
            .def_readwrite("SequenceSeries", &CThostFtdcTradingNoticeInfoField::SequenceSeries)
            .def_readwrite("SequenceNo", &CThostFtdcTradingNoticeInfoField::SequenceNo)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcTradingNoticeInfoField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcTradingNoticeInfoField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcTradingNoticeInfoField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcTradingNoticeField>(structs, "CThostFtdcTradingNoticeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingNoticeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingNoticeField::BrokerID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcTradingNoticeField::InvestorRange)
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcTradingNoticeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcTradingNoticeField::InvestorID));
                    }
            )
            .def_readwrite("SequenceSeries", &CThostFtdcTradingNoticeField::SequenceSeries)
            .def_property(
                    "UserID",
                    [](const CThostFtdcTradingNoticeField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcTradingNoticeField::UserID));
                    }
            )
            .def_property(
                    "SendTime",
                    [](const CThostFtdcTradingNoticeField &self) {
                        return py::str(self.SendTime);
                    },
                    [](CThostFtdcTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.SendTime, value.c_str(), sizeof(CThostFtdcTradingNoticeField::SendTime));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcTradingNoticeField::SequenceNo)
            .def_property(
                    "FieldContent",
                    [](const CThostFtdcTradingNoticeField &self) {
                        return py::str(self.FieldContent);
                    },
                    [](CThostFtdcTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.FieldContent, value.c_str(), sizeof(CThostFtdcTradingNoticeField::FieldContent));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcTradingNoticeField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcTradingNoticeField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryTradingNoticeField>(structs, "CThostFtdcQryTradingNoticeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryTradingNoticeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryTradingNoticeField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryTradingNoticeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryTradingNoticeField::InvestorID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryTradingNoticeField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryTradingNoticeField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryTradingNoticeField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryErrOrderField>(structs, "CThostFtdcQryErrOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryErrOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryErrOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryErrOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryErrOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryErrOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryErrOrderField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcErrOrderField>(structs, "CThostFtdcErrOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcErrOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcErrOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcErrOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcErrOrderField::OrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcErrOrderField::UserID));
                    }
            )
            .def_readwrite("OrderPriceType", &CThostFtdcErrOrderField::OrderPriceType)
            .def_readwrite("Direction", &CThostFtdcErrOrderField::Direction)
            .def_property(
                    "CombOffsetFlag",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.CombOffsetFlag);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.CombOffsetFlag, value.c_str(), sizeof(CThostFtdcErrOrderField::CombOffsetFlag));
                    }
            )
            .def_property(
                    "CombHedgeFlag",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.CombHedgeFlag);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.CombHedgeFlag, value.c_str(), sizeof(CThostFtdcErrOrderField::CombHedgeFlag));
                    }
            )
            .def_readwrite("LimitPrice", &CThostFtdcErrOrderField::LimitPrice)
            .def_readwrite("VolumeTotalOriginal", &CThostFtdcErrOrderField::VolumeTotalOriginal)
            .def_readwrite("TimeCondition", &CThostFtdcErrOrderField::TimeCondition)
            .def_property(
                    "GTDDate",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.GTDDate);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.GTDDate, value.c_str(), sizeof(CThostFtdcErrOrderField::GTDDate));
                    }
            )
            .def_readwrite("VolumeCondition", &CThostFtdcErrOrderField::VolumeCondition)
            .def_readwrite("MinVolume", &CThostFtdcErrOrderField::MinVolume)
            .def_readwrite("ContingentCondition", &CThostFtdcErrOrderField::ContingentCondition)
            .def_readwrite("StopPrice", &CThostFtdcErrOrderField::StopPrice)
            .def_readwrite("ForceCloseReason", &CThostFtdcErrOrderField::ForceCloseReason)
            .def_readwrite("IsAutoSuspend", &CThostFtdcErrOrderField::IsAutoSuspend)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcErrOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcErrOrderField::RequestID)
            .def_readwrite("UserForceClose", &CThostFtdcErrOrderField::UserForceClose)
            .def_readwrite("ErrorID", &CThostFtdcErrOrderField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcErrOrderField::ErrorMsg));
                    }
            )
            .def_readwrite("IsSwapOrder", &CThostFtdcErrOrderField::IsSwapOrder)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcErrOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcErrOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcErrOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcErrOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcErrOrderField::ClientID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcErrOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcErrOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcErrOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcErrOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcErrorConditionalOrderField>(structs, "CThostFtdcErrorConditionalOrderField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::InstrumentID));
                    }
            )
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::OrderRef));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::UserID));
                    }
            )
            .def_readwrite("OrderPriceType", &CThostFtdcErrorConditionalOrderField::OrderPriceType)
            .def_readwrite("Direction", &CThostFtdcErrorConditionalOrderField::Direction)
            .def_property(
                    "CombOffsetFlag",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.CombOffsetFlag);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.CombOffsetFlag, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::CombOffsetFlag));
                    }
            )
            .def_property(
                    "CombHedgeFlag",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.CombHedgeFlag);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.CombHedgeFlag, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::CombHedgeFlag));
                    }
            )
            .def_readwrite("LimitPrice", &CThostFtdcErrorConditionalOrderField::LimitPrice)
            .def_readwrite("VolumeTotalOriginal", &CThostFtdcErrorConditionalOrderField::VolumeTotalOriginal)
            .def_readwrite("TimeCondition", &CThostFtdcErrorConditionalOrderField::TimeCondition)
            .def_property(
                    "GTDDate",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.GTDDate);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.GTDDate, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::GTDDate));
                    }
            )
            .def_readwrite("VolumeCondition", &CThostFtdcErrorConditionalOrderField::VolumeCondition)
            .def_readwrite("MinVolume", &CThostFtdcErrorConditionalOrderField::MinVolume)
            .def_readwrite("ContingentCondition", &CThostFtdcErrorConditionalOrderField::ContingentCondition)
            .def_readwrite("StopPrice", &CThostFtdcErrorConditionalOrderField::StopPrice)
            .def_readwrite("ForceCloseReason", &CThostFtdcErrorConditionalOrderField::ForceCloseReason)
            .def_readwrite("IsAutoSuspend", &CThostFtdcErrorConditionalOrderField::IsAutoSuspend)
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::BusinessUnit));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcErrorConditionalOrderField::RequestID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::OrderLocalID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ExchangeID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ClientID));
                    }
            )
            .def_property(
                    "ExchangeInstID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ExchangeInstID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ExchangeInstID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ExchangeInstID));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcErrorConditionalOrderField::InstallID)
            .def_readwrite("OrderSubmitStatus", &CThostFtdcErrorConditionalOrderField::OrderSubmitStatus)
            .def_readwrite("NotifySequence", &CThostFtdcErrorConditionalOrderField::NotifySequence)
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcErrorConditionalOrderField::SettlementID)
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::OrderSysID));
                    }
            )
            .def_readwrite("OrderSource", &CThostFtdcErrorConditionalOrderField::OrderSource)
            .def_readwrite("OrderStatus", &CThostFtdcErrorConditionalOrderField::OrderStatus)
            .def_readwrite("OrderType", &CThostFtdcErrorConditionalOrderField::OrderType)
            .def_readwrite("VolumeTraded", &CThostFtdcErrorConditionalOrderField::VolumeTraded)
            .def_readwrite("VolumeTotal", &CThostFtdcErrorConditionalOrderField::VolumeTotal)
            .def_property(
                    "InsertDate",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.InsertDate);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertDate, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::InsertDate));
                    }
            )
            .def_property(
                    "InsertTime",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.InsertTime);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.InsertTime, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::InsertTime));
                    }
            )
            .def_property(
                    "ActiveTime",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ActiveTime);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveTime, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ActiveTime));
                    }
            )
            .def_property(
                    "SuspendTime",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.SuspendTime);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.SuspendTime, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::SuspendTime));
                    }
            )
            .def_property(
                    "UpdateTime",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.UpdateTime);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.UpdateTime, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::UpdateTime));
                    }
            )
            .def_property(
                    "CancelTime",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.CancelTime);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.CancelTime, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::CancelTime));
                    }
            )
            .def_property(
                    "ActiveTraderID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ActiveTraderID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveTraderID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ActiveTraderID));
                    }
            )
            .def_property(
                    "ClearingPartID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ClearingPartID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ClearingPartID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ClearingPartID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcErrorConditionalOrderField::SequenceNo)
            .def_readwrite("FrontID", &CThostFtdcErrorConditionalOrderField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcErrorConditionalOrderField::SessionID)
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::UserProductInfo));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::StatusMsg));
                    }
            )
            .def_readwrite("UserForceClose", &CThostFtdcErrorConditionalOrderField::UserForceClose)
            .def_property(
                    "ActiveUserID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ActiveUserID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ActiveUserID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ActiveUserID));
                    }
            )
            .def_readwrite("BrokerOrderSeq", &CThostFtdcErrorConditionalOrderField::BrokerOrderSeq)
            .def_property(
                    "RelativeOrderSysID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.RelativeOrderSysID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.RelativeOrderSysID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::RelativeOrderSysID));
                    }
            )
            .def_readwrite("ZCETotalTradedVolume", &CThostFtdcErrorConditionalOrderField::ZCETotalTradedVolume)
            .def_readwrite("ErrorID", &CThostFtdcErrorConditionalOrderField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::ErrorMsg));
                    }
            )
            .def_readwrite("IsSwapOrder", &CThostFtdcErrorConditionalOrderField::IsSwapOrder)
            .def_property(
                    "BranchID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::InvestUnitID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::CurrencyID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcErrorConditionalOrderField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcErrorConditionalOrderField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcErrorConditionalOrderField::MacAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryErrOrderActionField>(structs, "CThostFtdcQryErrOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryErrOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryErrOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryErrOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryErrOrderActionField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcErrOrderActionField>(structs, "CThostFtdcErrOrderActionField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::InvestorID));
                    }
            )
            .def_readwrite("OrderActionRef", &CThostFtdcErrOrderActionField::OrderActionRef)
            .def_property(
                    "OrderRef",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.OrderRef);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderRef, value.c_str(), sizeof(CThostFtdcErrOrderActionField::OrderRef));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcErrOrderActionField::RequestID)
            .def_readwrite("FrontID", &CThostFtdcErrOrderActionField::FrontID)
            .def_readwrite("SessionID", &CThostFtdcErrOrderActionField::SessionID)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::ExchangeID));
                    }
            )
            .def_property(
                    "OrderSysID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.OrderSysID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderSysID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::OrderSysID));
                    }
            )
            .def_readwrite("ActionFlag", &CThostFtdcErrOrderActionField::ActionFlag)
            .def_readwrite("LimitPrice", &CThostFtdcErrOrderActionField::LimitPrice)
            .def_readwrite("VolumeChange", &CThostFtdcErrOrderActionField::VolumeChange)
            .def_property(
                    "ActionDate",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.ActionDate);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionDate, value.c_str(), sizeof(CThostFtdcErrOrderActionField::ActionDate));
                    }
            )
            .def_property(
                    "ActionTime",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.ActionTime);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionTime, value.c_str(), sizeof(CThostFtdcErrOrderActionField::ActionTime));
                    }
            )
            .def_property(
                    "TraderID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.TraderID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.TraderID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::TraderID));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcErrOrderActionField::InstallID)
            .def_property(
                    "OrderLocalID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.OrderLocalID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.OrderLocalID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::OrderLocalID));
                    }
            )
            .def_property(
                    "ActionLocalID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.ActionLocalID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ActionLocalID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::ActionLocalID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::ParticipantID));
                    }
            )
            .def_property(
                    "ClientID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.ClientID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ClientID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::ClientID));
                    }
            )
            .def_property(
                    "BusinessUnit",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.BusinessUnit);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BusinessUnit, value.c_str(), sizeof(CThostFtdcErrOrderActionField::BusinessUnit));
                    }
            )
            .def_readwrite("OrderActionStatus", &CThostFtdcErrOrderActionField::OrderActionStatus)
            .def_property(
                    "UserID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::UserID));
                    }
            )
            .def_property(
                    "StatusMsg",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.StatusMsg);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.StatusMsg, value.c_str(), sizeof(CThostFtdcErrOrderActionField::StatusMsg));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::InstrumentID));
                    }
            )
            .def_property(
                    "BranchID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.BranchID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.BranchID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::BranchID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcErrOrderActionField::InvestUnitID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcErrOrderActionField::IPAddress));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcErrOrderActionField::MacAddress));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcErrOrderActionField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcErrOrderActionField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcErrOrderActionField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcErrOrderActionField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcQryExchangeSequenceField>(structs, "CThostFtdcQryExchangeSequenceField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryExchangeSequenceField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryExchangeSequenceField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryExchangeSequenceField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcExchangeSequenceField>(structs, "CThostFtdcExchangeSequenceField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcExchangeSequenceField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcExchangeSequenceField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcExchangeSequenceField::ExchangeID));
                    }
            )
            .def_readwrite("SequenceNo", &CThostFtdcExchangeSequenceField::SequenceNo)
            .def_readwrite("MarketStatus", &CThostFtdcExchangeSequenceField::MarketStatus)
            ;

    py::class_<CThostFtdcQueryMaxOrderVolumeWithPriceField>(structs, "CThostFtdcQueryMaxOrderVolumeWithPriceField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQueryMaxOrderVolumeWithPriceField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeWithPriceField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeWithPriceField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQueryMaxOrderVolumeWithPriceField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeWithPriceField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeWithPriceField::InvestorID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQueryMaxOrderVolumeWithPriceField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeWithPriceField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeWithPriceField::InstrumentID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcQueryMaxOrderVolumeWithPriceField::Direction)
            .def_readwrite("OffsetFlag", &CThostFtdcQueryMaxOrderVolumeWithPriceField::OffsetFlag)
            .def_readwrite("HedgeFlag", &CThostFtdcQueryMaxOrderVolumeWithPriceField::HedgeFlag)
            .def_readwrite("MaxVolume", &CThostFtdcQueryMaxOrderVolumeWithPriceField::MaxVolume)
            .def_readwrite("Price", &CThostFtdcQueryMaxOrderVolumeWithPriceField::Price)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQueryMaxOrderVolumeWithPriceField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeWithPriceField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeWithPriceField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQueryMaxOrderVolumeWithPriceField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQueryMaxOrderVolumeWithPriceField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQueryMaxOrderVolumeWithPriceField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryBrokerTradingParamsField>(structs, "CThostFtdcQryBrokerTradingParamsField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryBrokerTradingParamsField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryBrokerTradingParamsField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryBrokerTradingParamsField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryBrokerTradingParamsField::InvestorID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQryBrokerTradingParamsField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQryBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQryBrokerTradingParamsField::CurrencyID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQryBrokerTradingParamsField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQryBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQryBrokerTradingParamsField::AccountID));
                    }
            )
            ;

    py::class_<CThostFtdcBrokerTradingParamsField>(structs, "CThostFtdcBrokerTradingParamsField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerTradingParamsField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerTradingParamsField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcBrokerTradingParamsField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcBrokerTradingParamsField::InvestorID));
                    }
            )
            .def_readwrite("MarginPriceType", &CThostFtdcBrokerTradingParamsField::MarginPriceType)
            .def_readwrite("Algorithm", &CThostFtdcBrokerTradingParamsField::Algorithm)
            .def_readwrite("AvailIncludeCloseProfit", &CThostFtdcBrokerTradingParamsField::AvailIncludeCloseProfit)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcBrokerTradingParamsField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcBrokerTradingParamsField::CurrencyID));
                    }
            )
            .def_readwrite("OptionRoyaltyPriceType", &CThostFtdcBrokerTradingParamsField::OptionRoyaltyPriceType)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcBrokerTradingParamsField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcBrokerTradingParamsField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcBrokerTradingParamsField::AccountID));
                    }
            )
            ;

    py::class_<CThostFtdcQryBrokerTradingAlgosField>(structs, "CThostFtdcQryBrokerTradingAlgosField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryBrokerTradingAlgosField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryBrokerTradingAlgosField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryBrokerTradingAlgosField::BrokerID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryBrokerTradingAlgosField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryBrokerTradingAlgosField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryBrokerTradingAlgosField::ExchangeID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryBrokerTradingAlgosField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryBrokerTradingAlgosField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryBrokerTradingAlgosField::InstrumentID));
                    }
            )
            ;

    py::class_<CThostFtdcBrokerTradingAlgosField>(structs, "CThostFtdcBrokerTradingAlgosField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerTradingAlgosField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerTradingAlgosField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerTradingAlgosField::BrokerID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcBrokerTradingAlgosField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcBrokerTradingAlgosField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcBrokerTradingAlgosField::ExchangeID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcBrokerTradingAlgosField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcBrokerTradingAlgosField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcBrokerTradingAlgosField::InstrumentID));
                    }
            )
            .def_readwrite("HandlePositionAlgoID", &CThostFtdcBrokerTradingAlgosField::HandlePositionAlgoID)
            .def_readwrite("FindMarginRateAlgoID", &CThostFtdcBrokerTradingAlgosField::FindMarginRateAlgoID)
            .def_readwrite("HandleTradingAccountAlgoID", &CThostFtdcBrokerTradingAlgosField::HandleTradingAccountAlgoID)
            ;

    py::class_<CThostFtdcQueryBrokerDepositField>(structs, "CThostFtdcQueryBrokerDepositField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQueryBrokerDepositField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQueryBrokerDepositField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQueryBrokerDepositField::BrokerID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQueryBrokerDepositField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQueryBrokerDepositField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQueryBrokerDepositField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcBrokerDepositField>(structs, "CThostFtdcBrokerDepositField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcBrokerDepositField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcBrokerDepositField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcBrokerDepositField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerDepositField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerDepositField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerDepositField::BrokerID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcBrokerDepositField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcBrokerDepositField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcBrokerDepositField::ParticipantID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcBrokerDepositField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcBrokerDepositField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcBrokerDepositField::ExchangeID));
                    }
            )
            .def_readwrite("PreBalance", &CThostFtdcBrokerDepositField::PreBalance)
            .def_readwrite("CurrMargin", &CThostFtdcBrokerDepositField::CurrMargin)
            .def_readwrite("CloseProfit", &CThostFtdcBrokerDepositField::CloseProfit)
            .def_readwrite("Balance", &CThostFtdcBrokerDepositField::Balance)
            .def_readwrite("Deposit", &CThostFtdcBrokerDepositField::Deposit)
            .def_readwrite("Withdraw", &CThostFtdcBrokerDepositField::Withdraw)
            .def_readwrite("Available", &CThostFtdcBrokerDepositField::Available)
            .def_readwrite("Reserve", &CThostFtdcBrokerDepositField::Reserve)
            .def_readwrite("FrozenMargin", &CThostFtdcBrokerDepositField::FrozenMargin)
            ;

    py::class_<CThostFtdcQryCFMMCBrokerKeyField>(structs, "CThostFtdcQryCFMMCBrokerKeyField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryCFMMCBrokerKeyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryCFMMCBrokerKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryCFMMCBrokerKeyField::BrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcCFMMCBrokerKeyField>(structs, "CThostFtdcCFMMCBrokerKeyField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcCFMMCBrokerKeyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcCFMMCBrokerKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcCFMMCBrokerKeyField::BrokerID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcCFMMCBrokerKeyField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcCFMMCBrokerKeyField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcCFMMCBrokerKeyField::ParticipantID));
                    }
            )
            .def_property(
                    "CreateDate",
                    [](const CThostFtdcCFMMCBrokerKeyField &self) {
                        return py::str(self.CreateDate);
                    },
                    [](CThostFtdcCFMMCBrokerKeyField &self, const std::string &value) {
                        std::strncpy(self.CreateDate, value.c_str(), sizeof(CThostFtdcCFMMCBrokerKeyField::CreateDate));
                    }
            )
            .def_property(
                    "CreateTime",
                    [](const CThostFtdcCFMMCBrokerKeyField &self) {
                        return py::str(self.CreateTime);
                    },
                    [](CThostFtdcCFMMCBrokerKeyField &self, const std::string &value) {
                        std::strncpy(self.CreateTime, value.c_str(), sizeof(CThostFtdcCFMMCBrokerKeyField::CreateTime));
                    }
            )
            .def_readwrite("KeyID", &CThostFtdcCFMMCBrokerKeyField::KeyID)
            .def_property(
                    "CurrentKey",
                    [](const CThostFtdcCFMMCBrokerKeyField &self) {
                        return py::str(self.CurrentKey);
                    },
                    [](CThostFtdcCFMMCBrokerKeyField &self, const std::string &value) {
                        std::strncpy(self.CurrentKey, value.c_str(), sizeof(CThostFtdcCFMMCBrokerKeyField::CurrentKey));
                    }
            )
            .def_readwrite("KeyKind", &CThostFtdcCFMMCBrokerKeyField::KeyKind)
            ;

    py::class_<CThostFtdcCFMMCTradingAccountKeyField>(structs, "CThostFtdcCFMMCTradingAccountKeyField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcCFMMCTradingAccountKeyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcCFMMCTradingAccountKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountKeyField::BrokerID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcCFMMCTradingAccountKeyField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcCFMMCTradingAccountKeyField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountKeyField::ParticipantID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcCFMMCTradingAccountKeyField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcCFMMCTradingAccountKeyField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountKeyField::AccountID));
                    }
            )
            .def_readwrite("KeyID", &CThostFtdcCFMMCTradingAccountKeyField::KeyID)
            .def_property(
                    "CurrentKey",
                    [](const CThostFtdcCFMMCTradingAccountKeyField &self) {
                        return py::str(self.CurrentKey);
                    },
                    [](CThostFtdcCFMMCTradingAccountKeyField &self, const std::string &value) {
                        std::strncpy(self.CurrentKey, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountKeyField::CurrentKey));
                    }
            )
            ;

    py::class_<CThostFtdcQryCFMMCTradingAccountKeyField>(structs, "CThostFtdcQryCFMMCTradingAccountKeyField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryCFMMCTradingAccountKeyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryCFMMCTradingAccountKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryCFMMCTradingAccountKeyField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryCFMMCTradingAccountKeyField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryCFMMCTradingAccountKeyField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryCFMMCTradingAccountKeyField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcBrokerUserOTPParamField>(structs, "CThostFtdcBrokerUserOTPParamField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerUserOTPParamField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerUserOTPParamField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerUserOTPParamField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcBrokerUserOTPParamField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcBrokerUserOTPParamField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcBrokerUserOTPParamField::UserID));
                    }
            )
            .def_property(
                    "OTPVendorsID",
                    [](const CThostFtdcBrokerUserOTPParamField &self) {
                        return py::str(self.OTPVendorsID);
                    },
                    [](CThostFtdcBrokerUserOTPParamField &self, const std::string &value) {
                        std::strncpy(self.OTPVendorsID, value.c_str(), sizeof(CThostFtdcBrokerUserOTPParamField::OTPVendorsID));
                    }
            )
            .def_property(
                    "SerialNumber",
                    [](const CThostFtdcBrokerUserOTPParamField &self) {
                        return py::str(self.SerialNumber);
                    },
                    [](CThostFtdcBrokerUserOTPParamField &self, const std::string &value) {
                        std::strncpy(self.SerialNumber, value.c_str(), sizeof(CThostFtdcBrokerUserOTPParamField::SerialNumber));
                    }
            )
            .def_property(
                    "AuthKey",
                    [](const CThostFtdcBrokerUserOTPParamField &self) {
                        return py::str(self.AuthKey);
                    },
                    [](CThostFtdcBrokerUserOTPParamField &self, const std::string &value) {
                        std::strncpy(self.AuthKey, value.c_str(), sizeof(CThostFtdcBrokerUserOTPParamField::AuthKey));
                    }
            )
            .def_readwrite("LastDrift", &CThostFtdcBrokerUserOTPParamField::LastDrift)
            .def_readwrite("LastSuccess", &CThostFtdcBrokerUserOTPParamField::LastSuccess)
            .def_readwrite("OTPType", &CThostFtdcBrokerUserOTPParamField::OTPType)
            ;

    py::class_<CThostFtdcManualSyncBrokerUserOTPField>(structs, "CThostFtdcManualSyncBrokerUserOTPField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcManualSyncBrokerUserOTPField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcManualSyncBrokerUserOTPField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcManualSyncBrokerUserOTPField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcManualSyncBrokerUserOTPField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcManualSyncBrokerUserOTPField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcManualSyncBrokerUserOTPField::UserID));
                    }
            )
            .def_readwrite("OTPType", &CThostFtdcManualSyncBrokerUserOTPField::OTPType)
            .def_property(
                    "FirstOTP",
                    [](const CThostFtdcManualSyncBrokerUserOTPField &self) {
                        return py::str(self.FirstOTP);
                    },
                    [](CThostFtdcManualSyncBrokerUserOTPField &self, const std::string &value) {
                        std::strncpy(self.FirstOTP, value.c_str(), sizeof(CThostFtdcManualSyncBrokerUserOTPField::FirstOTP));
                    }
            )
            .def_property(
                    "SecondOTP",
                    [](const CThostFtdcManualSyncBrokerUserOTPField &self) {
                        return py::str(self.SecondOTP);
                    },
                    [](CThostFtdcManualSyncBrokerUserOTPField &self, const std::string &value) {
                        std::strncpy(self.SecondOTP, value.c_str(), sizeof(CThostFtdcManualSyncBrokerUserOTPField::SecondOTP));
                    }
            )
            ;

    py::class_<CThostFtdcCommRateModelField>(structs, "CThostFtdcCommRateModelField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcCommRateModelField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcCommRateModelField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcCommRateModelField::BrokerID));
                    }
            )
            .def_property(
                    "CommModelID",
                    [](const CThostFtdcCommRateModelField &self) {
                        return py::str(self.CommModelID);
                    },
                    [](CThostFtdcCommRateModelField &self, const std::string &value) {
                        std::strncpy(self.CommModelID, value.c_str(), sizeof(CThostFtdcCommRateModelField::CommModelID));
                    }
            )
            .def_property(
                    "CommModelName",
                    [](const CThostFtdcCommRateModelField &self) {
                        return py::str(self.CommModelName);
                    },
                    [](CThostFtdcCommRateModelField &self, const std::string &value) {
                        std::strncpy(self.CommModelName, value.c_str(), sizeof(CThostFtdcCommRateModelField::CommModelName));
                    }
            )
            ;

    py::class_<CThostFtdcQryCommRateModelField>(structs, "CThostFtdcQryCommRateModelField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryCommRateModelField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryCommRateModelField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryCommRateModelField::BrokerID));
                    }
            )
            .def_property(
                    "CommModelID",
                    [](const CThostFtdcQryCommRateModelField &self) {
                        return py::str(self.CommModelID);
                    },
                    [](CThostFtdcQryCommRateModelField &self, const std::string &value) {
                        std::strncpy(self.CommModelID, value.c_str(), sizeof(CThostFtdcQryCommRateModelField::CommModelID));
                    }
            )
            ;

    py::class_<CThostFtdcMarginModelField>(structs, "CThostFtdcMarginModelField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcMarginModelField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcMarginModelField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcMarginModelField::BrokerID));
                    }
            )
            .def_property(
                    "MarginModelID",
                    [](const CThostFtdcMarginModelField &self) {
                        return py::str(self.MarginModelID);
                    },
                    [](CThostFtdcMarginModelField &self, const std::string &value) {
                        std::strncpy(self.MarginModelID, value.c_str(), sizeof(CThostFtdcMarginModelField::MarginModelID));
                    }
            )
            .def_property(
                    "MarginModelName",
                    [](const CThostFtdcMarginModelField &self) {
                        return py::str(self.MarginModelName);
                    },
                    [](CThostFtdcMarginModelField &self, const std::string &value) {
                        std::strncpy(self.MarginModelName, value.c_str(), sizeof(CThostFtdcMarginModelField::MarginModelName));
                    }
            )
            ;

    py::class_<CThostFtdcQryMarginModelField>(structs, "CThostFtdcQryMarginModelField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryMarginModelField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryMarginModelField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryMarginModelField::BrokerID));
                    }
            )
            .def_property(
                    "MarginModelID",
                    [](const CThostFtdcQryMarginModelField &self) {
                        return py::str(self.MarginModelID);
                    },
                    [](CThostFtdcQryMarginModelField &self, const std::string &value) {
                        std::strncpy(self.MarginModelID, value.c_str(), sizeof(CThostFtdcQryMarginModelField::MarginModelID));
                    }
            )
            ;

    py::class_<CThostFtdcEWarrantOffsetField>(structs, "CThostFtdcEWarrantOffsetField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcEWarrantOffsetField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcEWarrantOffsetField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcEWarrantOffsetField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcEWarrantOffsetField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcEWarrantOffsetField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcEWarrantOffsetField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcEWarrantOffsetField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcEWarrantOffsetField::ExchangeID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcEWarrantOffsetField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcEWarrantOffsetField::InstrumentID));
                    }
            )
            .def_readwrite("Direction", &CThostFtdcEWarrantOffsetField::Direction)
            .def_readwrite("HedgeFlag", &CThostFtdcEWarrantOffsetField::HedgeFlag)
            .def_readwrite("Volume", &CThostFtdcEWarrantOffsetField::Volume)
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcEWarrantOffsetField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcEWarrantOffsetField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryEWarrantOffsetField>(structs, "CThostFtdcQryEWarrantOffsetField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryEWarrantOffsetField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryEWarrantOffsetField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryEWarrantOffsetField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryEWarrantOffsetField::InvestorID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryEWarrantOffsetField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryEWarrantOffsetField::ExchangeID));
                    }
            )
            .def_property(
                    "InstrumentID",
                    [](const CThostFtdcQryEWarrantOffsetField &self) {
                        return py::str(self.InstrumentID);
                    },
                    [](CThostFtdcQryEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.InstrumentID, value.c_str(), sizeof(CThostFtdcQryEWarrantOffsetField::InstrumentID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryEWarrantOffsetField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryEWarrantOffsetField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryEWarrantOffsetField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQryInvestorProductGroupMarginField>(structs, "CThostFtdcQryInvestorProductGroupMarginField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryInvestorProductGroupMarginField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryInvestorProductGroupMarginField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQryInvestorProductGroupMarginField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQryInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQryInvestorProductGroupMarginField::InvestorID));
                    }
            )
            .def_property(
                    "ProductGroupID",
                    [](const CThostFtdcQryInvestorProductGroupMarginField &self) {
                        return py::str(self.ProductGroupID);
                    },
                    [](CThostFtdcQryInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.ProductGroupID, value.c_str(), sizeof(CThostFtdcQryInvestorProductGroupMarginField::ProductGroupID));
                    }
            )
            .def_readwrite("HedgeFlag", &CThostFtdcQryInvestorProductGroupMarginField::HedgeFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryInvestorProductGroupMarginField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryInvestorProductGroupMarginField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQryInvestorProductGroupMarginField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQryInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQryInvestorProductGroupMarginField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcInvestorProductGroupMarginField>(structs, "CThostFtdcInvestorProductGroupMarginField")
            .def(py::init<>())
            .def_property(
                    "ProductGroupID",
                    [](const CThostFtdcInvestorProductGroupMarginField &self) {
                        return py::str(self.ProductGroupID);
                    },
                    [](CThostFtdcInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.ProductGroupID, value.c_str(), sizeof(CThostFtdcInvestorProductGroupMarginField::ProductGroupID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcInvestorProductGroupMarginField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcInvestorProductGroupMarginField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcInvestorProductGroupMarginField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcInvestorProductGroupMarginField::InvestorID));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcInvestorProductGroupMarginField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcInvestorProductGroupMarginField::TradingDay));
                    }
            )
            .def_readwrite("SettlementID", &CThostFtdcInvestorProductGroupMarginField::SettlementID)
            .def_readwrite("FrozenMargin", &CThostFtdcInvestorProductGroupMarginField::FrozenMargin)
            .def_readwrite("LongFrozenMargin", &CThostFtdcInvestorProductGroupMarginField::LongFrozenMargin)
            .def_readwrite("ShortFrozenMargin", &CThostFtdcInvestorProductGroupMarginField::ShortFrozenMargin)
            .def_readwrite("UseMargin", &CThostFtdcInvestorProductGroupMarginField::UseMargin)
            .def_readwrite("LongUseMargin", &CThostFtdcInvestorProductGroupMarginField::LongUseMargin)
            .def_readwrite("ShortUseMargin", &CThostFtdcInvestorProductGroupMarginField::ShortUseMargin)
            .def_readwrite("ExchMargin", &CThostFtdcInvestorProductGroupMarginField::ExchMargin)
            .def_readwrite("LongExchMargin", &CThostFtdcInvestorProductGroupMarginField::LongExchMargin)
            .def_readwrite("ShortExchMargin", &CThostFtdcInvestorProductGroupMarginField::ShortExchMargin)
            .def_readwrite("CloseProfit", &CThostFtdcInvestorProductGroupMarginField::CloseProfit)
            .def_readwrite("FrozenCommission", &CThostFtdcInvestorProductGroupMarginField::FrozenCommission)
            .def_readwrite("Commission", &CThostFtdcInvestorProductGroupMarginField::Commission)
            .def_readwrite("FrozenCash", &CThostFtdcInvestorProductGroupMarginField::FrozenCash)
            .def_readwrite("CashIn", &CThostFtdcInvestorProductGroupMarginField::CashIn)
            .def_readwrite("PositionProfit", &CThostFtdcInvestorProductGroupMarginField::PositionProfit)
            .def_readwrite("OffsetAmount", &CThostFtdcInvestorProductGroupMarginField::OffsetAmount)
            .def_readwrite("LongOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::LongOffsetAmount)
            .def_readwrite("ShortOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::ShortOffsetAmount)
            .def_readwrite("ExchOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::ExchOffsetAmount)
            .def_readwrite("LongExchOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::LongExchOffsetAmount)
            .def_readwrite("ShortExchOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::ShortExchOffsetAmount)
            .def_readwrite("HedgeFlag", &CThostFtdcInvestorProductGroupMarginField::HedgeFlag)
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcInvestorProductGroupMarginField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcInvestorProductGroupMarginField::ExchangeID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcInvestorProductGroupMarginField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcInvestorProductGroupMarginField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcInvestorProductGroupMarginField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcQueryCFMMCTradingAccountTokenField>(structs, "CThostFtdcQueryCFMMCTradingAccountTokenField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQueryCFMMCTradingAccountTokenField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQueryCFMMCTradingAccountTokenField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQueryCFMMCTradingAccountTokenField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQueryCFMMCTradingAccountTokenField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQueryCFMMCTradingAccountTokenField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQueryCFMMCTradingAccountTokenField::InvestorID));
                    }
            )
            .def_property(
                    "InvestUnitID",
                    [](const CThostFtdcQueryCFMMCTradingAccountTokenField &self) {
                        return py::str(self.InvestUnitID);
                    },
                    [](CThostFtdcQueryCFMMCTradingAccountTokenField &self, const std::string &value) {
                        std::strncpy(self.InvestUnitID, value.c_str(), sizeof(CThostFtdcQueryCFMMCTradingAccountTokenField::InvestUnitID));
                    }
            )
            ;

    py::class_<CThostFtdcCFMMCTradingAccountTokenField>(structs, "CThostFtdcCFMMCTradingAccountTokenField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcCFMMCTradingAccountTokenField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcCFMMCTradingAccountTokenField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountTokenField::BrokerID));
                    }
            )
            .def_property(
                    "ParticipantID",
                    [](const CThostFtdcCFMMCTradingAccountTokenField &self) {
                        return py::str(self.ParticipantID);
                    },
                    [](CThostFtdcCFMMCTradingAccountTokenField &self, const std::string &value) {
                        std::strncpy(self.ParticipantID, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountTokenField::ParticipantID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcCFMMCTradingAccountTokenField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcCFMMCTradingAccountTokenField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountTokenField::AccountID));
                    }
            )
            .def_readwrite("KeyID", &CThostFtdcCFMMCTradingAccountTokenField::KeyID)
            .def_property(
                    "Token",
                    [](const CThostFtdcCFMMCTradingAccountTokenField &self) {
                        return py::str(self.Token);
                    },
                    [](CThostFtdcCFMMCTradingAccountTokenField &self, const std::string &value) {
                        std::strncpy(self.Token, value.c_str(), sizeof(CThostFtdcCFMMCTradingAccountTokenField::Token));
                    }
            )
            ;

    py::class_<CThostFtdcQryProductGroupField>(structs, "CThostFtdcQryProductGroupField")
            .def(py::init<>())
            .def_property(
                    "ProductID",
                    [](const CThostFtdcQryProductGroupField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcQryProductGroupField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcQryProductGroupField::ProductID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryProductGroupField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryProductGroupField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryProductGroupField::ExchangeID));
                    }
            )
            ;

    py::class_<CThostFtdcProductGroupField>(structs, "CThostFtdcProductGroupField")
            .def(py::init<>())
            .def_property(
                    "ProductID",
                    [](const CThostFtdcProductGroupField &self) {
                        return py::str(self.ProductID);
                    },
                    [](CThostFtdcProductGroupField &self, const std::string &value) {
                        std::strncpy(self.ProductID, value.c_str(), sizeof(CThostFtdcProductGroupField::ProductID));
                    }
            )
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcProductGroupField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcProductGroupField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcProductGroupField::ExchangeID));
                    }
            )
            .def_property(
                    "ProductGroupID",
                    [](const CThostFtdcProductGroupField &self) {
                        return py::str(self.ProductGroupID);
                    },
                    [](CThostFtdcProductGroupField &self, const std::string &value) {
                        std::strncpy(self.ProductGroupID, value.c_str(), sizeof(CThostFtdcProductGroupField::ProductGroupID));
                    }
            )
            ;

    py::class_<CThostFtdcBulletinField>(structs, "CThostFtdcBulletinField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcBulletinField::ExchangeID));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcBulletinField::TradingDay));
                    }
            )
            .def_readwrite("BulletinID", &CThostFtdcBulletinField::BulletinID)
            .def_readwrite("SequenceNo", &CThostFtdcBulletinField::SequenceNo)
            .def_property(
                    "NewsType",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.NewsType);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.NewsType, value.c_str(), sizeof(CThostFtdcBulletinField::NewsType));
                    }
            )
            .def_readwrite("NewsUrgency", &CThostFtdcBulletinField::NewsUrgency)
            .def_property(
                    "SendTime",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.SendTime);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.SendTime, value.c_str(), sizeof(CThostFtdcBulletinField::SendTime));
                    }
            )
            .def_property(
                    "Abstract",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.Abstract);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.Abstract, value.c_str(), sizeof(CThostFtdcBulletinField::Abstract));
                    }
            )
            .def_property(
                    "ComeFrom",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.ComeFrom);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.ComeFrom, value.c_str(), sizeof(CThostFtdcBulletinField::ComeFrom));
                    }
            )
            .def_property(
                    "Content",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.Content);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.Content, value.c_str(), sizeof(CThostFtdcBulletinField::Content));
                    }
            )
            .def_property(
                    "URLLink",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.URLLink);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.URLLink, value.c_str(), sizeof(CThostFtdcBulletinField::URLLink));
                    }
            )
            .def_property(
                    "MarketID",
                    [](const CThostFtdcBulletinField &self) {
                        return py::str(self.MarketID);
                    },
                    [](CThostFtdcBulletinField &self, const std::string &value) {
                        std::strncpy(self.MarketID, value.c_str(), sizeof(CThostFtdcBulletinField::MarketID));
                    }
            )
            ;

    py::class_<CThostFtdcQryBulletinField>(structs, "CThostFtdcQryBulletinField")
            .def(py::init<>())
            .def_property(
                    "ExchangeID",
                    [](const CThostFtdcQryBulletinField &self) {
                        return py::str(self.ExchangeID);
                    },
                    [](CThostFtdcQryBulletinField &self, const std::string &value) {
                        std::strncpy(self.ExchangeID, value.c_str(), sizeof(CThostFtdcQryBulletinField::ExchangeID));
                    }
            )
            .def_readwrite("BulletinID", &CThostFtdcQryBulletinField::BulletinID)
            .def_readwrite("SequenceNo", &CThostFtdcQryBulletinField::SequenceNo)
            .def_property(
                    "NewsType",
                    [](const CThostFtdcQryBulletinField &self) {
                        return py::str(self.NewsType);
                    },
                    [](CThostFtdcQryBulletinField &self, const std::string &value) {
                        std::strncpy(self.NewsType, value.c_str(), sizeof(CThostFtdcQryBulletinField::NewsType));
                    }
            )
            .def_readwrite("NewsUrgency", &CThostFtdcQryBulletinField::NewsUrgency)
            ;

    py::class_<CThostFtdcReqOpenAccountField>(structs, "CThostFtdcReqOpenAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqOpenAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqOpenAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqOpenAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReqOpenAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcReqOpenAccountField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReqOpenAccountField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcReqOpenAccountField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcReqOpenAccountField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReqOpenAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::CurrencyID));
                    }
            )
            .def_readwrite("CashExchangeCode", &CThostFtdcReqOpenAccountField::CashExchangeCode)
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReqOpenAccountField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcReqOpenAccountField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcReqOpenAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcReqOpenAccountField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::OperNo));
                    }
            )
            .def_readwrite("TID", &CThostFtdcReqOpenAccountField::TID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::UserID));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcReqOpenAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcReqOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcReqOpenAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcReqCancelAccountField>(structs, "CThostFtdcReqCancelAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqCancelAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqCancelAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqCancelAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReqCancelAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcReqCancelAccountField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReqCancelAccountField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcReqCancelAccountField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcReqCancelAccountField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReqCancelAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::CurrencyID));
                    }
            )
            .def_readwrite("CashExchangeCode", &CThostFtdcReqCancelAccountField::CashExchangeCode)
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReqCancelAccountField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcReqCancelAccountField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcReqCancelAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcReqCancelAccountField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::OperNo));
                    }
            )
            .def_readwrite("TID", &CThostFtdcReqCancelAccountField::TID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::UserID));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcReqCancelAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcReqCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcReqCancelAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcReqChangeAccountField>(structs, "CThostFtdcReqChangeAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqChangeAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqChangeAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqChangeAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReqChangeAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcReqChangeAccountField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReqChangeAccountField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcReqChangeAccountField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "NewBankAccount",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.NewBankAccount);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.NewBankAccount, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::NewBankAccount));
                    }
            )
            .def_property(
                    "NewBankPassWord",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.NewBankPassWord);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.NewBankPassWord, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::NewBankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::Password));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReqChangeAccountField::BankAccType)
            .def_readwrite("InstallID", &CThostFtdcReqChangeAccountField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReqChangeAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::CurrencyID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::BrokerIDByBank));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcReqChangeAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcReqChangeAccountField::SecuPwdFlag)
            .def_readwrite("TID", &CThostFtdcReqChangeAccountField::TID)
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::Digest));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcReqChangeAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcReqChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcReqChangeAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcReqTransferField>(structs, "CThostFtdcReqTransferField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqTransferField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqTransferField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqTransferField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqTransferField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqTransferField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqTransferField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqTransferField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqTransferField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqTransferField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqTransferField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqTransferField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqTransferField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReqTransferField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReqTransferField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReqTransferField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReqTransferField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReqTransferField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReqTransferField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReqTransferField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqTransferField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcReqTransferField::InstallID)
            .def_readwrite("FutureSerial", &CThostFtdcReqTransferField::FutureSerial)
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqTransferField::UserID));
                    }
            )
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReqTransferField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqTransferField::CurrencyID));
                    }
            )
            .def_readwrite("TradeAmount", &CThostFtdcReqTransferField::TradeAmount)
            .def_readwrite("FutureFetchAmount", &CThostFtdcReqTransferField::FutureFetchAmount)
            .def_readwrite("FeePayFlag", &CThostFtdcReqTransferField::FeePayFlag)
            .def_readwrite("CustFee", &CThostFtdcReqTransferField::CustFee)
            .def_readwrite("BrokerFee", &CThostFtdcReqTransferField::BrokerFee)
            .def_property(
                    "Message",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.Message);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.Message, value.c_str(), sizeof(CThostFtdcReqTransferField::Message));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqTransferField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReqTransferField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcReqTransferField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcReqTransferField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqTransferField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcReqTransferField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcReqTransferField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcReqTransferField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcReqTransferField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcReqTransferField::RequestID)
            .def_readwrite("TID", &CThostFtdcReqTransferField::TID)
            .def_readwrite("TransferStatus", &CThostFtdcReqTransferField::TransferStatus)
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcReqTransferField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcReqTransferField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcReqTransferField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcRspTransferField>(structs, "CThostFtdcRspTransferField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcRspTransferField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcRspTransferField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcRspTransferField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspTransferField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcRspTransferField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcRspTransferField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcRspTransferField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcRspTransferField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspTransferField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcRspTransferField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcRspTransferField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcRspTransferField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcRspTransferField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcRspTransferField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcRspTransferField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcRspTransferField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcRspTransferField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcRspTransferField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcRspTransferField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcRspTransferField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcRspTransferField::InstallID)
            .def_readwrite("FutureSerial", &CThostFtdcRspTransferField::FutureSerial)
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspTransferField::UserID));
                    }
            )
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcRspTransferField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcRspTransferField::CurrencyID));
                    }
            )
            .def_readwrite("TradeAmount", &CThostFtdcRspTransferField::TradeAmount)
            .def_readwrite("FutureFetchAmount", &CThostFtdcRspTransferField::FutureFetchAmount)
            .def_readwrite("FeePayFlag", &CThostFtdcRspTransferField::FeePayFlag)
            .def_readwrite("CustFee", &CThostFtdcRspTransferField::CustFee)
            .def_readwrite("BrokerFee", &CThostFtdcRspTransferField::BrokerFee)
            .def_property(
                    "Message",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.Message);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.Message, value.c_str(), sizeof(CThostFtdcRspTransferField::Message));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcRspTransferField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcRspTransferField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcRspTransferField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcRspTransferField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcRspTransferField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcRspTransferField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcRspTransferField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcRspTransferField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcRspTransferField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcRspTransferField::RequestID)
            .def_readwrite("TID", &CThostFtdcRspTransferField::TID)
            .def_readwrite("TransferStatus", &CThostFtdcRspTransferField::TransferStatus)
            .def_readwrite("ErrorID", &CThostFtdcRspTransferField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcRspTransferField::ErrorMsg));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcRspTransferField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcRspTransferField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcRspTransferField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcReqRepealField>(structs, "CThostFtdcReqRepealField")
            .def(py::init<>())
            .def_readwrite("RepealTimeInterval", &CThostFtdcReqRepealField::RepealTimeInterval)
            .def_readwrite("RepealedTimes", &CThostFtdcReqRepealField::RepealedTimes)
            .def_readwrite("BankRepealFlag", &CThostFtdcReqRepealField::BankRepealFlag)
            .def_readwrite("BrokerRepealFlag", &CThostFtdcReqRepealField::BrokerRepealFlag)
            .def_readwrite("PlateRepealSerial", &CThostFtdcReqRepealField::PlateRepealSerial)
            .def_property(
                    "BankRepealSerial",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BankRepealSerial);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BankRepealSerial, value.c_str(), sizeof(CThostFtdcReqRepealField::BankRepealSerial));
                    }
            )
            .def_readwrite("FutureRepealSerial", &CThostFtdcReqRepealField::FutureRepealSerial)
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqRepealField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqRepealField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqRepealField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqRepealField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqRepealField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqRepealField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqRepealField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqRepealField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqRepealField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqRepealField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqRepealField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqRepealField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReqRepealField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReqRepealField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReqRepealField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReqRepealField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReqRepealField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReqRepealField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReqRepealField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqRepealField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcReqRepealField::InstallID)
            .def_readwrite("FutureSerial", &CThostFtdcReqRepealField::FutureSerial)
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqRepealField::UserID));
                    }
            )
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReqRepealField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqRepealField::CurrencyID));
                    }
            )
            .def_readwrite("TradeAmount", &CThostFtdcReqRepealField::TradeAmount)
            .def_readwrite("FutureFetchAmount", &CThostFtdcReqRepealField::FutureFetchAmount)
            .def_readwrite("FeePayFlag", &CThostFtdcReqRepealField::FeePayFlag)
            .def_readwrite("CustFee", &CThostFtdcReqRepealField::CustFee)
            .def_readwrite("BrokerFee", &CThostFtdcReqRepealField::BrokerFee)
            .def_property(
                    "Message",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.Message);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.Message, value.c_str(), sizeof(CThostFtdcReqRepealField::Message));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqRepealField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReqRepealField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcReqRepealField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcReqRepealField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqRepealField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcReqRepealField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcReqRepealField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcReqRepealField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcReqRepealField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcReqRepealField::RequestID)
            .def_readwrite("TID", &CThostFtdcReqRepealField::TID)
            .def_readwrite("TransferStatus", &CThostFtdcReqRepealField::TransferStatus)
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcReqRepealField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcReqRepealField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcReqRepealField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcRspRepealField>(structs, "CThostFtdcRspRepealField")
            .def(py::init<>())
            .def_readwrite("RepealTimeInterval", &CThostFtdcRspRepealField::RepealTimeInterval)
            .def_readwrite("RepealedTimes", &CThostFtdcRspRepealField::RepealedTimes)
            .def_readwrite("BankRepealFlag", &CThostFtdcRspRepealField::BankRepealFlag)
            .def_readwrite("BrokerRepealFlag", &CThostFtdcRspRepealField::BrokerRepealFlag)
            .def_readwrite("PlateRepealSerial", &CThostFtdcRspRepealField::PlateRepealSerial)
            .def_property(
                    "BankRepealSerial",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BankRepealSerial);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BankRepealSerial, value.c_str(), sizeof(CThostFtdcRspRepealField::BankRepealSerial));
                    }
            )
            .def_readwrite("FutureRepealSerial", &CThostFtdcRspRepealField::FutureRepealSerial)
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcRspRepealField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcRspRepealField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcRspRepealField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspRepealField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcRspRepealField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcRspRepealField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcRspRepealField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcRspRepealField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspRepealField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcRspRepealField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcRspRepealField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcRspRepealField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcRspRepealField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcRspRepealField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcRspRepealField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcRspRepealField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcRspRepealField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcRspRepealField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcRspRepealField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcRspRepealField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcRspRepealField::InstallID)
            .def_readwrite("FutureSerial", &CThostFtdcRspRepealField::FutureSerial)
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspRepealField::UserID));
                    }
            )
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcRspRepealField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcRspRepealField::CurrencyID));
                    }
            )
            .def_readwrite("TradeAmount", &CThostFtdcRspRepealField::TradeAmount)
            .def_readwrite("FutureFetchAmount", &CThostFtdcRspRepealField::FutureFetchAmount)
            .def_readwrite("FeePayFlag", &CThostFtdcRspRepealField::FeePayFlag)
            .def_readwrite("CustFee", &CThostFtdcRspRepealField::CustFee)
            .def_readwrite("BrokerFee", &CThostFtdcRspRepealField::BrokerFee)
            .def_property(
                    "Message",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.Message);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.Message, value.c_str(), sizeof(CThostFtdcRspRepealField::Message));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcRspRepealField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcRspRepealField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcRspRepealField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcRspRepealField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcRspRepealField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcRspRepealField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcRspRepealField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcRspRepealField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcRspRepealField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcRspRepealField::RequestID)
            .def_readwrite("TID", &CThostFtdcRspRepealField::TID)
            .def_readwrite("TransferStatus", &CThostFtdcRspRepealField::TransferStatus)
            .def_readwrite("ErrorID", &CThostFtdcRspRepealField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcRspRepealField::ErrorMsg));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcRspRepealField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcRspRepealField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcRspRepealField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcReqQueryAccountField>(structs, "CThostFtdcReqQueryAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqQueryAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqQueryAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqQueryAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReqQueryAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReqQueryAccountField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::Password));
                    }
            )
            .def_readwrite("FutureSerial", &CThostFtdcReqQueryAccountField::FutureSerial)
            .def_readwrite("InstallID", &CThostFtdcReqQueryAccountField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::UserID));
                    }
            )
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReqQueryAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::CurrencyID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReqQueryAccountField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcReqQueryAccountField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcReqQueryAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcReqQueryAccountField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcReqQueryAccountField::RequestID)
            .def_readwrite("TID", &CThostFtdcReqQueryAccountField::TID)
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcReqQueryAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcReqQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcReqQueryAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcRspQueryAccountField>(structs, "CThostFtdcRspQueryAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcRspQueryAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcRspQueryAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcRspQueryAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcRspQueryAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcRspQueryAccountField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::Password));
                    }
            )
            .def_readwrite("FutureSerial", &CThostFtdcRspQueryAccountField::FutureSerial)
            .def_readwrite("InstallID", &CThostFtdcRspQueryAccountField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::UserID));
                    }
            )
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcRspQueryAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::CurrencyID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcRspQueryAccountField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcRspQueryAccountField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcRspQueryAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcRspQueryAccountField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcRspQueryAccountField::RequestID)
            .def_readwrite("TID", &CThostFtdcRspQueryAccountField::TID)
            .def_readwrite("BankUseAmount", &CThostFtdcRspQueryAccountField::BankUseAmount)
            .def_readwrite("BankFetchAmount", &CThostFtdcRspQueryAccountField::BankFetchAmount)
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcRspQueryAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcRspQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcRspQueryAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcFutureSignIOField>(structs, "CThostFtdcFutureSignIOField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcFutureSignIOField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcFutureSignIOField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcFutureSignIOField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcFutureSignIOField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcFutureSignIOField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcFutureSignIOField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcFutureSignIOField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcFutureSignIOField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcFutureSignIOField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcFutureSignIOField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcFutureSignIOField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcFutureSignIOField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcFutureSignIOField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcFutureSignIOField::UserID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcFutureSignIOField::Digest));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcFutureSignIOField::CurrencyID));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcFutureSignIOField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcFutureSignIOField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcFutureSignIOField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcFutureSignIOField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcFutureSignIOField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcFutureSignIOField::RequestID)
            .def_readwrite("TID", &CThostFtdcFutureSignIOField::TID)
            ;

    py::class_<CThostFtdcRspFutureSignInField>(structs, "CThostFtdcRspFutureSignInField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcRspFutureSignInField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcRspFutureSignInField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcRspFutureSignInField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcRspFutureSignInField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::UserID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::Digest));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::CurrencyID));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcRspFutureSignInField::RequestID)
            .def_readwrite("TID", &CThostFtdcRspFutureSignInField::TID)
            .def_readwrite("ErrorID", &CThostFtdcRspFutureSignInField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::ErrorMsg));
                    }
            )
            .def_property(
                    "PinKey",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.PinKey);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.PinKey, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::PinKey));
                    }
            )
            .def_property(
                    "MacKey",
                    [](const CThostFtdcRspFutureSignInField &self) {
                        return py::str(self.MacKey);
                    },
                    [](CThostFtdcRspFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.MacKey, value.c_str(), sizeof(CThostFtdcRspFutureSignInField::MacKey));
                    }
            )
            ;

    py::class_<CThostFtdcReqFutureSignOutField>(structs, "CThostFtdcReqFutureSignOutField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqFutureSignOutField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqFutureSignOutField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqFutureSignOutField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcReqFutureSignOutField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::UserID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::Digest));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::CurrencyID));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcReqFutureSignOutField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcReqFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcReqFutureSignOutField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcReqFutureSignOutField::RequestID)
            .def_readwrite("TID", &CThostFtdcReqFutureSignOutField::TID)
            ;

    py::class_<CThostFtdcRspFutureSignOutField>(structs, "CThostFtdcRspFutureSignOutField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcRspFutureSignOutField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcRspFutureSignOutField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcRspFutureSignOutField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcRspFutureSignOutField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::UserID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::Digest));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::CurrencyID));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcRspFutureSignOutField::RequestID)
            .def_readwrite("TID", &CThostFtdcRspFutureSignOutField::TID)
            .def_readwrite("ErrorID", &CThostFtdcRspFutureSignOutField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcRspFutureSignOutField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcRspFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcRspFutureSignOutField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcReqQueryTradeResultBySerialField>(structs, "CThostFtdcReqQueryTradeResultBySerialField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqQueryTradeResultBySerialField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqQueryTradeResultBySerialField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqQueryTradeResultBySerialField::SessionID)
            .def_readwrite("Reference", &CThostFtdcReqQueryTradeResultBySerialField::Reference)
            .def_readwrite("RefrenceIssureType", &CThostFtdcReqQueryTradeResultBySerialField::RefrenceIssureType)
            .def_property(
                    "RefrenceIssure",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.RefrenceIssure);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.RefrenceIssure, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::RefrenceIssure));
                    }
            )
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReqQueryTradeResultBySerialField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReqQueryTradeResultBySerialField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::Password));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::CurrencyID));
                    }
            )
            .def_readwrite("TradeAmount", &CThostFtdcReqQueryTradeResultBySerialField::TradeAmount)
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::Digest));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcReqQueryTradeResultBySerialField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcReqQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcReqQueryTradeResultBySerialField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcRspQueryTradeResultBySerialField>(structs, "CThostFtdcRspQueryTradeResultBySerialField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcRspQueryTradeResultBySerialField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcRspQueryTradeResultBySerialField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcRspQueryTradeResultBySerialField::SessionID)
            .def_readwrite("ErrorID", &CThostFtdcRspQueryTradeResultBySerialField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::ErrorMsg));
                    }
            )
            .def_readwrite("Reference", &CThostFtdcRspQueryTradeResultBySerialField::Reference)
            .def_readwrite("RefrenceIssureType", &CThostFtdcRspQueryTradeResultBySerialField::RefrenceIssureType)
            .def_property(
                    "RefrenceIssure",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.RefrenceIssure);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.RefrenceIssure, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::RefrenceIssure));
                    }
            )
            .def_property(
                    "OriginReturnCode",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.OriginReturnCode);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.OriginReturnCode, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::OriginReturnCode));
                    }
            )
            .def_property(
                    "OriginDescrInfoForReturnCode",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.OriginDescrInfoForReturnCode);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.OriginDescrInfoForReturnCode, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::OriginDescrInfoForReturnCode));
                    }
            )
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::Password));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::CurrencyID));
                    }
            )
            .def_readwrite("TradeAmount", &CThostFtdcRspQueryTradeResultBySerialField::TradeAmount)
            .def_property(
                    "Digest",
                    [](const CThostFtdcRspQueryTradeResultBySerialField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcRspQueryTradeResultBySerialField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcRspQueryTradeResultBySerialField::Digest));
                    }
            )
            ;

    py::class_<CThostFtdcReqDayEndFileReadyField>(structs, "CThostFtdcReqDayEndFileReadyField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqDayEndFileReadyField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqDayEndFileReadyField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqDayEndFileReadyField::SessionID)
            .def_readwrite("FileBusinessCode", &CThostFtdcReqDayEndFileReadyField::FileBusinessCode)
            .def_property(
                    "Digest",
                    [](const CThostFtdcReqDayEndFileReadyField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReqDayEndFileReadyField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReqDayEndFileReadyField::Digest));
                    }
            )
            ;

    py::class_<CThostFtdcReturnResultField>(structs, "CThostFtdcReturnResultField")
            .def(py::init<>())
            .def_property(
                    "ReturnCode",
                    [](const CThostFtdcReturnResultField &self) {
                        return py::str(self.ReturnCode);
                    },
                    [](CThostFtdcReturnResultField &self, const std::string &value) {
                        std::strncpy(self.ReturnCode, value.c_str(), sizeof(CThostFtdcReturnResultField::ReturnCode));
                    }
            )
            .def_property(
                    "DescrInfoForReturnCode",
                    [](const CThostFtdcReturnResultField &self) {
                        return py::str(self.DescrInfoForReturnCode);
                    },
                    [](CThostFtdcReturnResultField &self, const std::string &value) {
                        std::strncpy(self.DescrInfoForReturnCode, value.c_str(), sizeof(CThostFtdcReturnResultField::DescrInfoForReturnCode));
                    }
            )
            ;

    py::class_<CThostFtdcVerifyFuturePasswordField>(structs, "CThostFtdcVerifyFuturePasswordField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcVerifyFuturePasswordField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcVerifyFuturePasswordField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcVerifyFuturePasswordField::SessionID)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::Password));
                    }
            )
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::BankPassWord));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcVerifyFuturePasswordField::InstallID)
            .def_readwrite("TID", &CThostFtdcVerifyFuturePasswordField::TID)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcVerifyFuturePasswordField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcVerifyFuturePasswordField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcVerifyCustInfoField>(structs, "CThostFtdcVerifyCustInfoField")
            .def(py::init<>())
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcVerifyCustInfoField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcVerifyCustInfoField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcVerifyCustInfoField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcVerifyCustInfoField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcVerifyCustInfoField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcVerifyCustInfoField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcVerifyCustInfoField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcVerifyCustInfoField::CustType)
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcVerifyCustInfoField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcVerifyCustInfoField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcVerifyCustInfoField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcVerifyFuturePasswordAndCustInfoField>(structs, "CThostFtdcVerifyFuturePasswordAndCustInfoField")
            .def(py::init<>())
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcVerifyFuturePasswordAndCustInfoField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcVerifyFuturePasswordAndCustInfoField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordAndCustInfoField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcVerifyFuturePasswordAndCustInfoField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcVerifyFuturePasswordAndCustInfoField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcVerifyFuturePasswordAndCustInfoField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordAndCustInfoField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcVerifyFuturePasswordAndCustInfoField::CustType)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcVerifyFuturePasswordAndCustInfoField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcVerifyFuturePasswordAndCustInfoField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordAndCustInfoField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcVerifyFuturePasswordAndCustInfoField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcVerifyFuturePasswordAndCustInfoField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordAndCustInfoField::Password));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcVerifyFuturePasswordAndCustInfoField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcVerifyFuturePasswordAndCustInfoField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordAndCustInfoField::CurrencyID));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcVerifyFuturePasswordAndCustInfoField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcVerifyFuturePasswordAndCustInfoField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcVerifyFuturePasswordAndCustInfoField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcDepositResultInformField>(structs, "CThostFtdcDepositResultInformField")
            .def(py::init<>())
            .def_property(
                    "DepositSeqNo",
                    [](const CThostFtdcDepositResultInformField &self) {
                        return py::str(self.DepositSeqNo);
                    },
                    [](CThostFtdcDepositResultInformField &self, const std::string &value) {
                        std::strncpy(self.DepositSeqNo, value.c_str(), sizeof(CThostFtdcDepositResultInformField::DepositSeqNo));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcDepositResultInformField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcDepositResultInformField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcDepositResultInformField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcDepositResultInformField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcDepositResultInformField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcDepositResultInformField::InvestorID));
                    }
            )
            .def_readwrite("Deposit", &CThostFtdcDepositResultInformField::Deposit)
            .def_readwrite("RequestID", &CThostFtdcDepositResultInformField::RequestID)
            .def_property(
                    "ReturnCode",
                    [](const CThostFtdcDepositResultInformField &self) {
                        return py::str(self.ReturnCode);
                    },
                    [](CThostFtdcDepositResultInformField &self, const std::string &value) {
                        std::strncpy(self.ReturnCode, value.c_str(), sizeof(CThostFtdcDepositResultInformField::ReturnCode));
                    }
            )
            .def_property(
                    "DescrInfoForReturnCode",
                    [](const CThostFtdcDepositResultInformField &self) {
                        return py::str(self.DescrInfoForReturnCode);
                    },
                    [](CThostFtdcDepositResultInformField &self, const std::string &value) {
                        std::strncpy(self.DescrInfoForReturnCode, value.c_str(), sizeof(CThostFtdcDepositResultInformField::DescrInfoForReturnCode));
                    }
            )
            ;

    py::class_<CThostFtdcReqSyncKeyField>(structs, "CThostFtdcReqSyncKeyField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReqSyncKeyField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReqSyncKeyField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReqSyncKeyField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcReqSyncKeyField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::UserID));
                    }
            )
            .def_property(
                    "Message",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.Message);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.Message, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::Message));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcReqSyncKeyField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcReqSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcReqSyncKeyField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcReqSyncKeyField::RequestID)
            .def_readwrite("TID", &CThostFtdcReqSyncKeyField::TID)
            ;

    py::class_<CThostFtdcRspSyncKeyField>(structs, "CThostFtdcRspSyncKeyField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcRspSyncKeyField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcRspSyncKeyField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcRspSyncKeyField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcRspSyncKeyField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::UserID));
                    }
            )
            .def_property(
                    "Message",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.Message);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.Message, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::Message));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcRspSyncKeyField::RequestID)
            .def_readwrite("TID", &CThostFtdcRspSyncKeyField::TID)
            .def_readwrite("ErrorID", &CThostFtdcRspSyncKeyField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcRspSyncKeyField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcRspSyncKeyField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcRspSyncKeyField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcNotifyQueryAccountField>(structs, "CThostFtdcNotifyQueryAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcNotifyQueryAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcNotifyQueryAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcNotifyQueryAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcNotifyQueryAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcNotifyQueryAccountField::CustType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::Password));
                    }
            )
            .def_readwrite("FutureSerial", &CThostFtdcNotifyQueryAccountField::FutureSerial)
            .def_readwrite("InstallID", &CThostFtdcNotifyQueryAccountField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::UserID));
                    }
            )
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcNotifyQueryAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::CurrencyID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcNotifyQueryAccountField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcNotifyQueryAccountField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcNotifyQueryAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcNotifyQueryAccountField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcNotifyQueryAccountField::RequestID)
            .def_readwrite("TID", &CThostFtdcNotifyQueryAccountField::TID)
            .def_readwrite("BankUseAmount", &CThostFtdcNotifyQueryAccountField::BankUseAmount)
            .def_readwrite("BankFetchAmount", &CThostFtdcNotifyQueryAccountField::BankFetchAmount)
            .def_readwrite("ErrorID", &CThostFtdcNotifyQueryAccountField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::ErrorMsg));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcNotifyQueryAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcNotifyQueryAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcNotifyQueryAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcTransferSerialField>(structs, "CThostFtdcTransferSerialField")
            .def(py::init<>())
            .def_readwrite("PlateSerial", &CThostFtdcTransferSerialField::PlateSerial)
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcTransferSerialField::TradeDate));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcTransferSerialField::TradingDay));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcTransferSerialField::TradeTime));
                    }
            )
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcTransferSerialField::TradeCode));
                    }
            )
            .def_readwrite("SessionID", &CThostFtdcTransferSerialField::SessionID)
            .def_property(
                    "BankID",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcTransferSerialField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcTransferSerialField::BankBranchID));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcTransferSerialField::BankAccType)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcTransferSerialField::BankAccount));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcTransferSerialField::BankSerial));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTransferSerialField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcTransferSerialField::BrokerBranchID));
                    }
            )
            .def_readwrite("FutureAccType", &CThostFtdcTransferSerialField::FutureAccType)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcTransferSerialField::AccountID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcTransferSerialField::InvestorID));
                    }
            )
            .def_readwrite("FutureSerial", &CThostFtdcTransferSerialField::FutureSerial)
            .def_readwrite("IdCardType", &CThostFtdcTransferSerialField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcTransferSerialField::IdentifiedCardNo));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcTransferSerialField::CurrencyID));
                    }
            )
            .def_readwrite("TradeAmount", &CThostFtdcTransferSerialField::TradeAmount)
            .def_readwrite("CustFee", &CThostFtdcTransferSerialField::CustFee)
            .def_readwrite("BrokerFee", &CThostFtdcTransferSerialField::BrokerFee)
            .def_readwrite("AvailabilityFlag", &CThostFtdcTransferSerialField::AvailabilityFlag)
            .def_property(
                    "OperatorCode",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.OperatorCode);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.OperatorCode, value.c_str(), sizeof(CThostFtdcTransferSerialField::OperatorCode));
                    }
            )
            .def_property(
                    "BankNewAccount",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.BankNewAccount);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BankNewAccount, value.c_str(), sizeof(CThostFtdcTransferSerialField::BankNewAccount));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcTransferSerialField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcTransferSerialField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcTransferSerialField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcQryTransferSerialField>(structs, "CThostFtdcQryTransferSerialField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryTransferSerialField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryTransferSerialField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQryTransferSerialField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQryTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQryTransferSerialField::AccountID));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcQryTransferSerialField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcQryTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcQryTransferSerialField::BankID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQryTransferSerialField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQryTransferSerialField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQryTransferSerialField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcNotifyFutureSignInField>(structs, "CThostFtdcNotifyFutureSignInField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcNotifyFutureSignInField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcNotifyFutureSignInField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcNotifyFutureSignInField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcNotifyFutureSignInField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::UserID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::Digest));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::CurrencyID));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcNotifyFutureSignInField::RequestID)
            .def_readwrite("TID", &CThostFtdcNotifyFutureSignInField::TID)
            .def_readwrite("ErrorID", &CThostFtdcNotifyFutureSignInField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::ErrorMsg));
                    }
            )
            .def_property(
                    "PinKey",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.PinKey);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.PinKey, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::PinKey));
                    }
            )
            .def_property(
                    "MacKey",
                    [](const CThostFtdcNotifyFutureSignInField &self) {
                        return py::str(self.MacKey);
                    },
                    [](CThostFtdcNotifyFutureSignInField &self, const std::string &value) {
                        std::strncpy(self.MacKey, value.c_str(), sizeof(CThostFtdcNotifyFutureSignInField::MacKey));
                    }
            )
            ;

    py::class_<CThostFtdcNotifyFutureSignOutField>(structs, "CThostFtdcNotifyFutureSignOutField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcNotifyFutureSignOutField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcNotifyFutureSignOutField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcNotifyFutureSignOutField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcNotifyFutureSignOutField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::UserID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::Digest));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::CurrencyID));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcNotifyFutureSignOutField::RequestID)
            .def_readwrite("TID", &CThostFtdcNotifyFutureSignOutField::TID)
            .def_readwrite("ErrorID", &CThostFtdcNotifyFutureSignOutField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcNotifyFutureSignOutField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcNotifyFutureSignOutField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcNotifyFutureSignOutField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcNotifySyncKeyField>(structs, "CThostFtdcNotifySyncKeyField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcNotifySyncKeyField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcNotifySyncKeyField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcNotifySyncKeyField::SessionID)
            .def_readwrite("InstallID", &CThostFtdcNotifySyncKeyField::InstallID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::UserID));
                    }
            )
            .def_property(
                    "Message",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.Message);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.Message, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::Message));
                    }
            )
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::DeviceID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "OperNo",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::OperNo));
                    }
            )
            .def_readwrite("RequestID", &CThostFtdcNotifySyncKeyField::RequestID)
            .def_readwrite("TID", &CThostFtdcNotifySyncKeyField::TID)
            .def_readwrite("ErrorID", &CThostFtdcNotifySyncKeyField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcNotifySyncKeyField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcNotifySyncKeyField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcNotifySyncKeyField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcQryAccountregisterField>(structs, "CThostFtdcQryAccountregisterField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryAccountregisterField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryAccountregisterField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQryAccountregisterField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQryAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQryAccountregisterField::AccountID));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcQryAccountregisterField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcQryAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcQryAccountregisterField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcQryAccountregisterField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcQryAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcQryAccountregisterField::BankBranchID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQryAccountregisterField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQryAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQryAccountregisterField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcAccountregisterField>(structs, "CThostFtdcAccountregisterField")
            .def(py::init<>())
            .def_property(
                    "TradeDay",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.TradeDay);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.TradeDay, value.c_str(), sizeof(CThostFtdcAccountregisterField::TradeDay));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcAccountregisterField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcAccountregisterField::BankBranchID));
                    }
            )
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcAccountregisterField::BankAccount));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcAccountregisterField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcAccountregisterField::BrokerBranchID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcAccountregisterField::AccountID));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcAccountregisterField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcAccountregisterField::IdentifiedCardNo));
                    }
            )
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcAccountregisterField::CustomerName));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcAccountregisterField::CurrencyID));
                    }
            )
            .def_readwrite("OpenOrDestroy", &CThostFtdcAccountregisterField::OpenOrDestroy)
            .def_property(
                    "RegDate",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.RegDate);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.RegDate, value.c_str(), sizeof(CThostFtdcAccountregisterField::RegDate));
                    }
            )
            .def_property(
                    "OutDate",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.OutDate);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.OutDate, value.c_str(), sizeof(CThostFtdcAccountregisterField::OutDate));
                    }
            )
            .def_readwrite("TID", &CThostFtdcAccountregisterField::TID)
            .def_readwrite("CustType", &CThostFtdcAccountregisterField::CustType)
            .def_readwrite("BankAccType", &CThostFtdcAccountregisterField::BankAccType)
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcAccountregisterField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcAccountregisterField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcAccountregisterField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcOpenAccountField>(structs, "CThostFtdcOpenAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcOpenAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcOpenAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcOpenAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcOpenAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcOpenAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcOpenAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcOpenAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcOpenAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcOpenAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcOpenAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcOpenAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcOpenAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcOpenAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcOpenAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcOpenAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcOpenAccountField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcOpenAccountField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcOpenAccountField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcOpenAccountField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcOpenAccountField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcOpenAccountField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcOpenAccountField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcOpenAccountField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcOpenAccountField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcOpenAccountField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcOpenAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcOpenAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcOpenAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcOpenAccountField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcOpenAccountField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcOpenAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcOpenAccountField::CurrencyID));
                    }
            )
            .def_readwrite("CashExchangeCode", &CThostFtdcOpenAccountField::CashExchangeCode)
            .def_property(
                    "Digest",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcOpenAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcOpenAccountField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcOpenAccountField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcOpenAccountField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcOpenAccountField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcOpenAccountField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcOpenAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcOpenAccountField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcOpenAccountField::OperNo));
                    }
            )
            .def_readwrite("TID", &CThostFtdcOpenAccountField::TID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcOpenAccountField::UserID));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcOpenAccountField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcOpenAccountField::ErrorMsg));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcOpenAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcOpenAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcCancelAccountField>(structs, "CThostFtdcCancelAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcCancelAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcCancelAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcCancelAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcCancelAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcCancelAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcCancelAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcCancelAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcCancelAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcCancelAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcCancelAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcCancelAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcCancelAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcCancelAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcCancelAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcCancelAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcCancelAccountField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcCancelAccountField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcCancelAccountField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcCancelAccountField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcCancelAccountField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcCancelAccountField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcCancelAccountField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcCancelAccountField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcCancelAccountField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcCancelAccountField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcCancelAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcCancelAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcCancelAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcCancelAccountField::Password));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcCancelAccountField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcCancelAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcCancelAccountField::CurrencyID));
                    }
            )
            .def_readwrite("CashExchangeCode", &CThostFtdcCancelAccountField::CashExchangeCode)
            .def_property(
                    "Digest",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcCancelAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcCancelAccountField::BankAccType)
            .def_property(
                    "DeviceID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.DeviceID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.DeviceID, value.c_str(), sizeof(CThostFtdcCancelAccountField::DeviceID));
                    }
            )
            .def_readwrite("BankSecuAccType", &CThostFtdcCancelAccountField::BankSecuAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcCancelAccountField::BrokerIDByBank));
                    }
            )
            .def_property(
                    "BankSecuAcc",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.BankSecuAcc);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSecuAcc, value.c_str(), sizeof(CThostFtdcCancelAccountField::BankSecuAcc));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcCancelAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcCancelAccountField::SecuPwdFlag)
            .def_property(
                    "OperNo",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.OperNo);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.OperNo, value.c_str(), sizeof(CThostFtdcCancelAccountField::OperNo));
                    }
            )
            .def_readwrite("TID", &CThostFtdcCancelAccountField::TID)
            .def_property(
                    "UserID",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcCancelAccountField::UserID));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcCancelAccountField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcCancelAccountField::ErrorMsg));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcCancelAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcCancelAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcCancelAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcChangeAccountField>(structs, "CThostFtdcChangeAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcChangeAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcChangeAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcChangeAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcChangeAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcChangeAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcChangeAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcChangeAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcChangeAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcChangeAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcChangeAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcChangeAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcChangeAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcChangeAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcChangeAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcChangeAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcChangeAccountField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcChangeAccountField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcChangeAccountField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcChangeAccountField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcChangeAccountField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcChangeAccountField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcChangeAccountField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcChangeAccountField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcChangeAccountField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcChangeAccountField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcChangeAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcChangeAccountField::BankPassWord));
                    }
            )
            .def_property(
                    "NewBankAccount",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.NewBankAccount);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.NewBankAccount, value.c_str(), sizeof(CThostFtdcChangeAccountField::NewBankAccount));
                    }
            )
            .def_property(
                    "NewBankPassWord",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.NewBankPassWord);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.NewBankPassWord, value.c_str(), sizeof(CThostFtdcChangeAccountField::NewBankPassWord));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcChangeAccountField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcChangeAccountField::Password));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcChangeAccountField::BankAccType)
            .def_readwrite("InstallID", &CThostFtdcChangeAccountField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcChangeAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcChangeAccountField::CurrencyID));
                    }
            )
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcChangeAccountField::BrokerIDByBank));
                    }
            )
            .def_readwrite("BankPwdFlag", &CThostFtdcChangeAccountField::BankPwdFlag)
            .def_readwrite("SecuPwdFlag", &CThostFtdcChangeAccountField::SecuPwdFlag)
            .def_readwrite("TID", &CThostFtdcChangeAccountField::TID)
            .def_property(
                    "Digest",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcChangeAccountField::Digest));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcChangeAccountField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcChangeAccountField::ErrorMsg));
                    }
            )
            .def_property(
                    "LongCustomerName",
                    [](const CThostFtdcChangeAccountField &self) {
                        return py::str(self.LongCustomerName);
                    },
                    [](CThostFtdcChangeAccountField &self, const std::string &value) {
                        std::strncpy(self.LongCustomerName, value.c_str(), sizeof(CThostFtdcChangeAccountField::LongCustomerName));
                    }
            )
            ;

    py::class_<CThostFtdcSecAgentACIDMapField>(structs, "CThostFtdcSecAgentACIDMapField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcSecAgentACIDMapField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcSecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcSecAgentACIDMapField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcSecAgentACIDMapField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcSecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcSecAgentACIDMapField::UserID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcSecAgentACIDMapField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcSecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcSecAgentACIDMapField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcSecAgentACIDMapField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcSecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcSecAgentACIDMapField::CurrencyID));
                    }
            )
            .def_property(
                    "BrokerSecAgentID",
                    [](const CThostFtdcSecAgentACIDMapField &self) {
                        return py::str(self.BrokerSecAgentID);
                    },
                    [](CThostFtdcSecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.BrokerSecAgentID, value.c_str(), sizeof(CThostFtdcSecAgentACIDMapField::BrokerSecAgentID));
                    }
            )
            ;

    py::class_<CThostFtdcQrySecAgentACIDMapField>(structs, "CThostFtdcQrySecAgentACIDMapField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySecAgentACIDMapField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySecAgentACIDMapField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQrySecAgentACIDMapField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQrySecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQrySecAgentACIDMapField::UserID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcQrySecAgentACIDMapField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcQrySecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcQrySecAgentACIDMapField::AccountID));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcQrySecAgentACIDMapField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcQrySecAgentACIDMapField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcQrySecAgentACIDMapField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcUserRightsAssignField>(structs, "CThostFtdcUserRightsAssignField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcUserRightsAssignField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcUserRightsAssignField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcUserRightsAssignField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcUserRightsAssignField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcUserRightsAssignField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcUserRightsAssignField::UserID));
                    }
            )
            .def_readwrite("DRIdentityID", &CThostFtdcUserRightsAssignField::DRIdentityID)
            ;

    py::class_<CThostFtdcBrokerUserRightAssignField>(structs, "CThostFtdcBrokerUserRightAssignField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcBrokerUserRightAssignField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcBrokerUserRightAssignField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcBrokerUserRightAssignField::BrokerID));
                    }
            )
            .def_readwrite("DRIdentityID", &CThostFtdcBrokerUserRightAssignField::DRIdentityID)
            .def_readwrite("Tradeable", &CThostFtdcBrokerUserRightAssignField::Tradeable)
            ;

    py::class_<CThostFtdcDRTransferField>(structs, "CThostFtdcDRTransferField")
            .def(py::init<>())
            .def_readwrite("OrigDRIdentityID", &CThostFtdcDRTransferField::OrigDRIdentityID)
            .def_readwrite("DestDRIdentityID", &CThostFtdcDRTransferField::DestDRIdentityID)
            .def_property(
                    "OrigBrokerID",
                    [](const CThostFtdcDRTransferField &self) {
                        return py::str(self.OrigBrokerID);
                    },
                    [](CThostFtdcDRTransferField &self, const std::string &value) {
                        std::strncpy(self.OrigBrokerID, value.c_str(), sizeof(CThostFtdcDRTransferField::OrigBrokerID));
                    }
            )
            .def_property(
                    "DestBrokerID",
                    [](const CThostFtdcDRTransferField &self) {
                        return py::str(self.DestBrokerID);
                    },
                    [](CThostFtdcDRTransferField &self, const std::string &value) {
                        std::strncpy(self.DestBrokerID, value.c_str(), sizeof(CThostFtdcDRTransferField::DestBrokerID));
                    }
            )
            ;

    py::class_<CThostFtdcFensUserInfoField>(structs, "CThostFtdcFensUserInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcFensUserInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcFensUserInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcFensUserInfoField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcFensUserInfoField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcFensUserInfoField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcFensUserInfoField::UserID));
                    }
            )
            .def_readwrite("LoginMode", &CThostFtdcFensUserInfoField::LoginMode)
            ;

    py::class_<CThostFtdcCurrTransferIdentityField>(structs, "CThostFtdcCurrTransferIdentityField")
            .def(py::init<>())
            .def_readwrite("IdentityID", &CThostFtdcCurrTransferIdentityField::IdentityID)
            ;

    py::class_<CThostFtdcLoginForbiddenUserField>(structs, "CThostFtdcLoginForbiddenUserField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcLoginForbiddenUserField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcLoginForbiddenUserField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcLoginForbiddenUserField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcLoginForbiddenUserField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcLoginForbiddenUserField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcLoginForbiddenUserField::UserID));
                    }
            )
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcLoginForbiddenUserField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcLoginForbiddenUserField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcLoginForbiddenUserField::IPAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryLoginForbiddenUserField>(structs, "CThostFtdcQryLoginForbiddenUserField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryLoginForbiddenUserField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryLoginForbiddenUserField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryLoginForbiddenUserField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQryLoginForbiddenUserField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQryLoginForbiddenUserField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQryLoginForbiddenUserField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcMulticastGroupInfoField>(structs, "CThostFtdcMulticastGroupInfoField")
            .def(py::init<>())
            .def_property(
                    "GroupIP",
                    [](const CThostFtdcMulticastGroupInfoField &self) {
                        return py::str(self.GroupIP);
                    },
                    [](CThostFtdcMulticastGroupInfoField &self, const std::string &value) {
                        std::strncpy(self.GroupIP, value.c_str(), sizeof(CThostFtdcMulticastGroupInfoField::GroupIP));
                    }
            )
            .def_readwrite("GroupPort", &CThostFtdcMulticastGroupInfoField::GroupPort)
            .def_property(
                    "SourceIP",
                    [](const CThostFtdcMulticastGroupInfoField &self) {
                        return py::str(self.SourceIP);
                    },
                    [](CThostFtdcMulticastGroupInfoField &self, const std::string &value) {
                        std::strncpy(self.SourceIP, value.c_str(), sizeof(CThostFtdcMulticastGroupInfoField::SourceIP));
                    }
            )
            ;

    py::class_<CThostFtdcTradingAccountReserveField>(structs, "CThostFtdcTradingAccountReserveField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcTradingAccountReserveField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcTradingAccountReserveField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcTradingAccountReserveField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcTradingAccountReserveField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcTradingAccountReserveField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcTradingAccountReserveField::AccountID));
                    }
            )
            .def_readwrite("Reserve", &CThostFtdcTradingAccountReserveField::Reserve)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcTradingAccountReserveField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcTradingAccountReserveField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcTradingAccountReserveField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcQryLoginForbiddenIPField>(structs, "CThostFtdcQryLoginForbiddenIPField")
            .def(py::init<>())
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcQryLoginForbiddenIPField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcQryLoginForbiddenIPField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcQryLoginForbiddenIPField::IPAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryIPListField>(structs, "CThostFtdcQryIPListField")
            .def(py::init<>())
            .def_property(
                    "IPAddress",
                    [](const CThostFtdcQryIPListField &self) {
                        return py::str(self.IPAddress);
                    },
                    [](CThostFtdcQryIPListField &self, const std::string &value) {
                        std::strncpy(self.IPAddress, value.c_str(), sizeof(CThostFtdcQryIPListField::IPAddress));
                    }
            )
            ;

    py::class_<CThostFtdcQryUserRightsAssignField>(structs, "CThostFtdcQryUserRightsAssignField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQryUserRightsAssignField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQryUserRightsAssignField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQryUserRightsAssignField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcQryUserRightsAssignField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcQryUserRightsAssignField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcQryUserRightsAssignField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcReserveOpenAccountConfirmField>(structs, "CThostFtdcReserveOpenAccountConfirmField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReserveOpenAccountConfirmField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReserveOpenAccountConfirmField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReserveOpenAccountConfirmField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReserveOpenAccountConfirmField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcReserveOpenAccountConfirmField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReserveOpenAccountConfirmField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcReserveOpenAccountConfirmField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BankPassWord));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcReserveOpenAccountConfirmField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReserveOpenAccountConfirmField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::CurrencyID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReserveOpenAccountConfirmField::BankAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BrokerIDByBank));
                    }
            )
            .def_readwrite("TID", &CThostFtdcReserveOpenAccountConfirmField::TID)
            .def_property(
                    "AccountID",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::AccountID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::Password));
                    }
            )
            .def_property(
                    "BankReserveOpenSeq",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BankReserveOpenSeq);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BankReserveOpenSeq, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BankReserveOpenSeq));
                    }
            )
            .def_property(
                    "BookDate",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BookDate);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BookDate, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BookDate));
                    }
            )
            .def_property(
                    "BookPsw",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.BookPsw);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.BookPsw, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::BookPsw));
                    }
            )
            .def_readwrite("ErrorID", &CThostFtdcReserveOpenAccountConfirmField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcReserveOpenAccountConfirmField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcReserveOpenAccountConfirmField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcReserveOpenAccountConfirmField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcReserveOpenAccountField>(structs, "CThostFtdcReserveOpenAccountField")
            .def(py::init<>())
            .def_property(
                    "TradeCode",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.TradeCode);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeCode, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::TradeCode));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BankID));
                    }
            )
            .def_property(
                    "BankBranchID",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BankBranchID);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankBranchID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BankBranchID));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerBranchID",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BrokerBranchID);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerBranchID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BrokerBranchID));
                    }
            )
            .def_property(
                    "TradeDate",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.TradeDate);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeDate, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::TradeDate));
                    }
            )
            .def_property(
                    "TradeTime",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.TradeTime);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradeTime, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::TradeTime));
                    }
            )
            .def_property(
                    "BankSerial",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BankSerial);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankSerial, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BankSerial));
                    }
            )
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::TradingDay));
                    }
            )
            .def_readwrite("PlateSerial", &CThostFtdcReserveOpenAccountField::PlateSerial)
            .def_readwrite("LastFragment", &CThostFtdcReserveOpenAccountField::LastFragment)
            .def_readwrite("SessionID", &CThostFtdcReserveOpenAccountField::SessionID)
            .def_property(
                    "CustomerName",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.CustomerName);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CustomerName, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::CustomerName));
                    }
            )
            .def_readwrite("IdCardType", &CThostFtdcReserveOpenAccountField::IdCardType)
            .def_property(
                    "IdentifiedCardNo",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.IdentifiedCardNo);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.IdentifiedCardNo, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::IdentifiedCardNo));
                    }
            )
            .def_readwrite("Gender", &CThostFtdcReserveOpenAccountField::Gender)
            .def_property(
                    "CountryCode",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.CountryCode);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CountryCode, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::CountryCode));
                    }
            )
            .def_readwrite("CustType", &CThostFtdcReserveOpenAccountField::CustType)
            .def_property(
                    "Address",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.Address);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Address, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::Address));
                    }
            )
            .def_property(
                    "ZipCode",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.ZipCode);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.ZipCode, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::ZipCode));
                    }
            )
            .def_property(
                    "Telephone",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.Telephone);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Telephone, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::Telephone));
                    }
            )
            .def_property(
                    "MobilePhone",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.MobilePhone);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.MobilePhone, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::MobilePhone));
                    }
            )
            .def_property(
                    "Fax",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.Fax);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Fax, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::Fax));
                    }
            )
            .def_property(
                    "EMail",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.EMail);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.EMail, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::EMail));
                    }
            )
            .def_readwrite("MoneyAccountStatus", &CThostFtdcReserveOpenAccountField::MoneyAccountStatus)
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BankAccount));
                    }
            )
            .def_property(
                    "BankPassWord",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BankPassWord);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BankPassWord, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BankPassWord));
                    }
            )
            .def_readwrite("InstallID", &CThostFtdcReserveOpenAccountField::InstallID)
            .def_readwrite("VerifyCertNoFlag", &CThostFtdcReserveOpenAccountField::VerifyCertNoFlag)
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::CurrencyID));
                    }
            )
            .def_property(
                    "Digest",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.Digest);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.Digest, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::Digest));
                    }
            )
            .def_readwrite("BankAccType", &CThostFtdcReserveOpenAccountField::BankAccType)
            .def_property(
                    "BrokerIDByBank",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.BrokerIDByBank);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.BrokerIDByBank, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::BrokerIDByBank));
                    }
            )
            .def_readwrite("TID", &CThostFtdcReserveOpenAccountField::TID)
            .def_readwrite("ReserveOpenAccStas", &CThostFtdcReserveOpenAccountField::ReserveOpenAccStas)
            .def_readwrite("ErrorID", &CThostFtdcReserveOpenAccountField::ErrorID)
            .def_property(
                    "ErrorMsg",
                    [](const CThostFtdcReserveOpenAccountField &self) {
                        return py::str(self.ErrorMsg);
                    },
                    [](CThostFtdcReserveOpenAccountField &self, const std::string &value) {
                        std::strncpy(self.ErrorMsg, value.c_str(), sizeof(CThostFtdcReserveOpenAccountField::ErrorMsg));
                    }
            )
            ;

    py::class_<CThostFtdcAccountPropertyField>(structs, "CThostFtdcAccountPropertyField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcAccountPropertyField::BrokerID));
                    }
            )
            .def_property(
                    "AccountID",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.AccountID);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.AccountID, value.c_str(), sizeof(CThostFtdcAccountPropertyField::AccountID));
                    }
            )
            .def_property(
                    "BankID",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.BankID);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.BankID, value.c_str(), sizeof(CThostFtdcAccountPropertyField::BankID));
                    }
            )
            .def_property(
                    "BankAccount",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.BankAccount);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.BankAccount, value.c_str(), sizeof(CThostFtdcAccountPropertyField::BankAccount));
                    }
            )
            .def_property(
                    "OpenName",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.OpenName);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.OpenName, value.c_str(), sizeof(CThostFtdcAccountPropertyField::OpenName));
                    }
            )
            .def_property(
                    "OpenBank",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.OpenBank);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.OpenBank, value.c_str(), sizeof(CThostFtdcAccountPropertyField::OpenBank));
                    }
            )
            .def_readwrite("IsActive", &CThostFtdcAccountPropertyField::IsActive)
            .def_readwrite("AccountSourceType", &CThostFtdcAccountPropertyField::AccountSourceType)
            .def_property(
                    "OpenDate",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.OpenDate);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.OpenDate, value.c_str(), sizeof(CThostFtdcAccountPropertyField::OpenDate));
                    }
            )
            .def_property(
                    "CancelDate",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.CancelDate);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.CancelDate, value.c_str(), sizeof(CThostFtdcAccountPropertyField::CancelDate));
                    }
            )
            .def_property(
                    "OperatorID",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.OperatorID);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.OperatorID, value.c_str(), sizeof(CThostFtdcAccountPropertyField::OperatorID));
                    }
            )
            .def_property(
                    "OperateDate",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.OperateDate);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.OperateDate, value.c_str(), sizeof(CThostFtdcAccountPropertyField::OperateDate));
                    }
            )
            .def_property(
                    "OperateTime",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.OperateTime);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.OperateTime, value.c_str(), sizeof(CThostFtdcAccountPropertyField::OperateTime));
                    }
            )
            .def_property(
                    "CurrencyID",
                    [](const CThostFtdcAccountPropertyField &self) {
                        return py::str(self.CurrencyID);
                    },
                    [](CThostFtdcAccountPropertyField &self, const std::string &value) {
                        std::strncpy(self.CurrencyID, value.c_str(), sizeof(CThostFtdcAccountPropertyField::CurrencyID));
                    }
            )
            ;

    py::class_<CThostFtdcQryCurrDRIdentityField>(structs, "CThostFtdcQryCurrDRIdentityField")
            .def(py::init<>())
            .def_readwrite("DRIdentityID", &CThostFtdcQryCurrDRIdentityField::DRIdentityID)
            ;

    py::class_<CThostFtdcCurrDRIdentityField>(structs, "CThostFtdcCurrDRIdentityField")
            .def(py::init<>())
            .def_readwrite("DRIdentityID", &CThostFtdcCurrDRIdentityField::DRIdentityID)
            ;

    py::class_<CThostFtdcQrySecAgentCheckModeField>(structs, "CThostFtdcQrySecAgentCheckModeField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySecAgentCheckModeField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySecAgentCheckModeField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySecAgentCheckModeField::BrokerID));
                    }
            )
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcQrySecAgentCheckModeField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcQrySecAgentCheckModeField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcQrySecAgentCheckModeField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcQrySecAgentTradeInfoField>(structs, "CThostFtdcQrySecAgentTradeInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcQrySecAgentTradeInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcQrySecAgentTradeInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcQrySecAgentTradeInfoField::BrokerID));
                    }
            )
            .def_property(
                    "BrokerSecAgentID",
                    [](const CThostFtdcQrySecAgentTradeInfoField &self) {
                        return py::str(self.BrokerSecAgentID);
                    },
                    [](CThostFtdcQrySecAgentTradeInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerSecAgentID, value.c_str(), sizeof(CThostFtdcQrySecAgentTradeInfoField::BrokerSecAgentID));
                    }
            )
            ;

    py::class_<CThostFtdcUserSystemInfoField>(structs, "CThostFtdcUserSystemInfoField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcUserSystemInfoField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcUserSystemInfoField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcUserSystemInfoField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcUserSystemInfoField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcUserSystemInfoField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcUserSystemInfoField::UserID));
                    }
            )
            .def_readwrite("ClientSystemInfoLen", &CThostFtdcUserSystemInfoField::ClientSystemInfoLen)
            .def_property(
                    "ClientSystemInfo",
                    [](const CThostFtdcUserSystemInfoField &self) {
                        return py::str(self.ClientSystemInfo);
                    },
                    [](CThostFtdcUserSystemInfoField &self, const std::string &value) {
                        std::strncpy(self.ClientSystemInfo, value.c_str(), sizeof(CThostFtdcUserSystemInfoField::ClientSystemInfo));
                    }
            )
            .def_property(
                    "ClientPublicIP",
                    [](const CThostFtdcUserSystemInfoField &self) {
                        return py::str(self.ClientPublicIP);
                    },
                    [](CThostFtdcUserSystemInfoField &self, const std::string &value) {
                        std::strncpy(self.ClientPublicIP, value.c_str(), sizeof(CThostFtdcUserSystemInfoField::ClientPublicIP));
                    }
            )
            .def_readwrite("ClientIPPort", &CThostFtdcUserSystemInfoField::ClientIPPort)
            .def_property(
                    "ClientLoginTime",
                    [](const CThostFtdcUserSystemInfoField &self) {
                        return py::str(self.ClientLoginTime);
                    },
                    [](CThostFtdcUserSystemInfoField &self, const std::string &value) {
                        std::strncpy(self.ClientLoginTime, value.c_str(), sizeof(CThostFtdcUserSystemInfoField::ClientLoginTime));
                    }
            )
            .def_property(
                    "ClientAppID",
                    [](const CThostFtdcUserSystemInfoField &self) {
                        return py::str(self.ClientAppID);
                    },
                    [](CThostFtdcUserSystemInfoField &self, const std::string &value) {
                        std::strncpy(self.ClientAppID, value.c_str(), sizeof(CThostFtdcUserSystemInfoField::ClientAppID));
                    }
            )
            ;

    py::class_<CThostFtdcReqUserAuthMethodField>(structs, "CThostFtdcReqUserAuthMethodField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqUserAuthMethodField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqUserAuthMethodField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqUserAuthMethodField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqUserAuthMethodField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqUserAuthMethodField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqUserAuthMethodField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqUserAuthMethodField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqUserAuthMethodField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqUserAuthMethodField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcRspUserAuthMethodField>(structs, "CThostFtdcRspUserAuthMethodField")
            .def(py::init<>())
            .def_readwrite("UsableAuthMethod", &CThostFtdcRspUserAuthMethodField::UsableAuthMethod)
            ;

    py::class_<CThostFtdcReqGenUserCaptchaField>(structs, "CThostFtdcReqGenUserCaptchaField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqGenUserCaptchaField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqGenUserCaptchaField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqGenUserCaptchaField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqGenUserCaptchaField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqGenUserCaptchaField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqGenUserCaptchaField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqGenUserCaptchaField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqGenUserCaptchaField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqGenUserCaptchaField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcRspGenUserCaptchaField>(structs, "CThostFtdcRspGenUserCaptchaField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcRspGenUserCaptchaField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcRspGenUserCaptchaField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcRspGenUserCaptchaField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcRspGenUserCaptchaField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcRspGenUserCaptchaField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcRspGenUserCaptchaField::UserID));
                    }
            )
            .def_readwrite("CaptchaInfoLen", &CThostFtdcRspGenUserCaptchaField::CaptchaInfoLen)
            .def_property(
                    "CaptchaInfo",
                    [](const CThostFtdcRspGenUserCaptchaField &self) {
                        return py::str(self.CaptchaInfo);
                    },
                    [](CThostFtdcRspGenUserCaptchaField &self, const std::string &value) {
                        std::strncpy(self.CaptchaInfo, value.c_str(), sizeof(CThostFtdcRspGenUserCaptchaField::CaptchaInfo));
                    }
            )
            ;

    py::class_<CThostFtdcReqGenUserTextField>(structs, "CThostFtdcReqGenUserTextField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqGenUserTextField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqGenUserTextField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqGenUserTextField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqGenUserTextField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqGenUserTextField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqGenUserTextField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqGenUserTextField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqGenUserTextField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqGenUserTextField::UserID));
                    }
            )
            ;

    py::class_<CThostFtdcRspGenUserTextField>(structs, "CThostFtdcRspGenUserTextField")
            .def(py::init<>())
            .def_readwrite("UserTextSeq", &CThostFtdcRspGenUserTextField::UserTextSeq)
            ;

    py::class_<CThostFtdcReqUserLoginWithCaptchaField>(structs, "CThostFtdcReqUserLoginWithCaptchaField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::UserID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::Password));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::UserProductInfo));
                    }
            )
            .def_property(
                    "InterfaceProductInfo",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.InterfaceProductInfo);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.InterfaceProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::InterfaceProductInfo));
                    }
            )
            .def_property(
                    "ProtocolInfo",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.ProtocolInfo);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.ProtocolInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::ProtocolInfo));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::MacAddress));
                    }
            )
            .def_property(
                    "ClientIPAddress",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.ClientIPAddress);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.ClientIPAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::ClientIPAddress));
                    }
            )
            .def_property(
                    "LoginRemark",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.LoginRemark);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.LoginRemark, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::LoginRemark));
                    }
            )
            .def_property(
                    "Captcha",
                    [](const CThostFtdcReqUserLoginWithCaptchaField &self) {
                        return py::str(self.Captcha);
                    },
                    [](CThostFtdcReqUserLoginWithCaptchaField &self, const std::string &value) {
                        std::strncpy(self.Captcha, value.c_str(), sizeof(CThostFtdcReqUserLoginWithCaptchaField::Captcha));
                    }
            )
            .def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginWithCaptchaField::ClientIPPort)
            ;

    py::class_<CThostFtdcReqUserLoginWithTextField>(structs, "CThostFtdcReqUserLoginWithTextField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::UserID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::Password));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::UserProductInfo));
                    }
            )
            .def_property(
                    "InterfaceProductInfo",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.InterfaceProductInfo);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.InterfaceProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::InterfaceProductInfo));
                    }
            )
            .def_property(
                    "ProtocolInfo",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.ProtocolInfo);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.ProtocolInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::ProtocolInfo));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::MacAddress));
                    }
            )
            .def_property(
                    "ClientIPAddress",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.ClientIPAddress);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.ClientIPAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::ClientIPAddress));
                    }
            )
            .def_property(
                    "LoginRemark",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.LoginRemark);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.LoginRemark, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::LoginRemark));
                    }
            )
            .def_property(
                    "Text",
                    [](const CThostFtdcReqUserLoginWithTextField &self) {
                        return py::str(self.Text);
                    },
                    [](CThostFtdcReqUserLoginWithTextField &self, const std::string &value) {
                        std::strncpy(self.Text, value.c_str(), sizeof(CThostFtdcReqUserLoginWithTextField::Text));
                    }
            )
            .def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginWithTextField::ClientIPPort)
            ;

    py::class_<CThostFtdcReqUserLoginWithOTPField>(structs, "CThostFtdcReqUserLoginWithOTPField")
            .def(py::init<>())
            .def_property(
                    "TradingDay",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.TradingDay);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.TradingDay, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::TradingDay));
                    }
            )
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::UserID));
                    }
            )
            .def_property(
                    "Password",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.Password);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.Password, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::Password));
                    }
            )
            .def_property(
                    "UserProductInfo",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.UserProductInfo);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.UserProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::UserProductInfo));
                    }
            )
            .def_property(
                    "InterfaceProductInfo",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.InterfaceProductInfo);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.InterfaceProductInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::InterfaceProductInfo));
                    }
            )
            .def_property(
                    "ProtocolInfo",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.ProtocolInfo);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.ProtocolInfo, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::ProtocolInfo));
                    }
            )
            .def_property(
                    "MacAddress",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.MacAddress);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.MacAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::MacAddress));
                    }
            )
            .def_property(
                    "ClientIPAddress",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.ClientIPAddress);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.ClientIPAddress, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::ClientIPAddress));
                    }
            )
            .def_property(
                    "LoginRemark",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.LoginRemark);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.LoginRemark, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::LoginRemark));
                    }
            )
            .def_property(
                    "OTPPassword",
                    [](const CThostFtdcReqUserLoginWithOTPField &self) {
                        return py::str(self.OTPPassword);
                    },
                    [](CThostFtdcReqUserLoginWithOTPField &self, const std::string &value) {
                        std::strncpy(self.OTPPassword, value.c_str(), sizeof(CThostFtdcReqUserLoginWithOTPField::OTPPassword));
                    }
            )
            .def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginWithOTPField::ClientIPPort)
            ;

    py::class_<CThostFtdcReqApiHandshakeField>(structs, "CThostFtdcReqApiHandshakeField")
            .def(py::init<>())
            .def_property(
                    "CryptoKeyVersion",
                    [](const CThostFtdcReqApiHandshakeField &self) {
                        return py::str(self.CryptoKeyVersion);
                    },
                    [](CThostFtdcReqApiHandshakeField &self, const std::string &value) {
                        std::strncpy(self.CryptoKeyVersion, value.c_str(), sizeof(CThostFtdcReqApiHandshakeField::CryptoKeyVersion));
                    }
            )
            ;

    py::class_<CThostFtdcRspApiHandshakeField>(structs, "CThostFtdcRspApiHandshakeField")
            .def(py::init<>())
            .def_readwrite("FrontHandshakeDataLen", &CThostFtdcRspApiHandshakeField::FrontHandshakeDataLen)
            .def_property(
                    "FrontHandshakeData",
                    [](const CThostFtdcRspApiHandshakeField &self) {
                        return py::str(self.FrontHandshakeData);
                    },
                    [](CThostFtdcRspApiHandshakeField &self, const std::string &value) {
                        std::strncpy(self.FrontHandshakeData, value.c_str(), sizeof(CThostFtdcRspApiHandshakeField::FrontHandshakeData));
                    }
            )
            .def_readwrite("IsApiAuthEnabled", &CThostFtdcRspApiHandshakeField::IsApiAuthEnabled)
            ;

    py::class_<CThostFtdcReqVerifyApiKeyField>(structs, "CThostFtdcReqVerifyApiKeyField")
            .def(py::init<>())
            .def_readwrite("ApiHandshakeDataLen", &CThostFtdcReqVerifyApiKeyField::ApiHandshakeDataLen)
            .def_property(
                    "ApiHandshakeData",
                    [](const CThostFtdcReqVerifyApiKeyField &self) {
                        return py::str(self.ApiHandshakeData);
                    },
                    [](CThostFtdcReqVerifyApiKeyField &self, const std::string &value) {
                        std::strncpy(self.ApiHandshakeData, value.c_str(), sizeof(CThostFtdcReqVerifyApiKeyField::ApiHandshakeData));
                    }
            )
            ;

    py::class_<CThostFtdcDepartmentUserField>(structs, "CThostFtdcDepartmentUserField")
            .def(py::init<>())
            .def_property(
                    "BrokerID",
                    [](const CThostFtdcDepartmentUserField &self) {
                        return py::str(self.BrokerID);
                    },
                    [](CThostFtdcDepartmentUserField &self, const std::string &value) {
                        std::strncpy(self.BrokerID, value.c_str(), sizeof(CThostFtdcDepartmentUserField::BrokerID));
                    }
            )
            .def_property(
                    "UserID",
                    [](const CThostFtdcDepartmentUserField &self) {
                        return py::str(self.UserID);
                    },
                    [](CThostFtdcDepartmentUserField &self, const std::string &value) {
                        std::strncpy(self.UserID, value.c_str(), sizeof(CThostFtdcDepartmentUserField::UserID));
                    }
            )
            .def_readwrite("InvestorRange", &CThostFtdcDepartmentUserField::InvestorRange)
            .def_property(
                    "InvestorID",
                    [](const CThostFtdcDepartmentUserField &self) {
                        return py::str(self.InvestorID);
                    },
                    [](CThostFtdcDepartmentUserField &self, const std::string &value) {
                        std::strncpy(self.InvestorID, value.c_str(), sizeof(CThostFtdcDepartmentUserField::InvestorID));
                    }
            )
            ;

    py::class_<CThostFtdcQueryFreqField>(structs, "CThostFtdcQueryFreqField")
            .def(py::init<>())
            .def_readwrite("QueryFreq", &CThostFtdcQueryFreqField::QueryFreq)
            ;

    

}